{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BrowsingContextProcessor = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst log_js_1 = require(\"../../../utils/log.js\");\nconst WorkerRealm_js_1 = require(\"../script/WorkerRealm.js\");\nconst BrowsingContextImpl_js_1 = require(\"./BrowsingContextImpl.js\");\nconst CdpTarget_js_1 = require(\"./CdpTarget.js\");\nconst cdpToBidiTargetTypes = {\n  service_worker: 'service-worker',\n  shared_worker: 'shared-worker',\n  worker: 'dedicated-worker'\n};\nclass BrowsingContextProcessor {\n  #browserCdpClient;\n  #cdpConnection;\n  #selfTargetId;\n  #eventManager;\n  #browsingContextStorage;\n  #networkStorage;\n  #acceptInsecureCerts;\n  #sharedIdWithFrame;\n  #preloadScriptStorage;\n  #realmStorage;\n  #defaultUserContextId;\n  #logger;\n  constructor(cdpConnection, browserCdpClient, selfTargetId, eventManager, browsingContextStorage, realmStorage, networkStorage, preloadScriptStorage, acceptInsecureCerts, sharedIdWithFrame, defaultUserContextId, logger) {\n    this.#acceptInsecureCerts = acceptInsecureCerts;\n    this.#cdpConnection = cdpConnection;\n    this.#browserCdpClient = browserCdpClient;\n    this.#selfTargetId = selfTargetId;\n    this.#eventManager = eventManager;\n    this.#browsingContextStorage = browsingContextStorage;\n    this.#preloadScriptStorage = preloadScriptStorage;\n    this.#networkStorage = networkStorage;\n    this.#realmStorage = realmStorage;\n    this.#sharedIdWithFrame = sharedIdWithFrame;\n    this.#defaultUserContextId = defaultUserContextId;\n    this.#logger = logger;\n    this.#setEventListeners(browserCdpClient);\n  }\n  getTree(params) {\n    const resultContexts = params.root === undefined ? this.#browsingContextStorage.getTopLevelContexts() : [this.#browsingContextStorage.getContext(params.root)];\n    return {\n      contexts: resultContexts.map(c => c.serializeToBidiValue(params.maxDepth ?? Number.MAX_VALUE))\n    };\n  }\n  async create(params) {\n    let referenceContext;\n    let userContext = 'default';\n    if (params.referenceContext !== undefined) {\n      referenceContext = this.#browsingContextStorage.getContext(params.referenceContext);\n      if (!referenceContext.isTopLevelContext()) {\n        throw new protocol_js_1.InvalidArgumentException(`referenceContext should be a top-level context`);\n      }\n      userContext = referenceContext.userContext;\n    }\n    if (params.userContext !== undefined) {\n      userContext = params.userContext;\n    }\n    let newWindow = false;\n    switch (params.type) {\n      case \"tab\" /* BrowsingContext.CreateType.Tab */:\n        newWindow = false;\n        break;\n      case \"window\" /* BrowsingContext.CreateType.Window */:\n        newWindow = true;\n        break;\n    }\n    if (userContext !== 'default') {\n      const existingContexts = this.#browsingContextStorage.getAllContexts().filter(context => context.userContext === userContext);\n      if (!existingContexts.length) {\n        // If there are no contexts in the given user context, we need to set\n        // newWindow to true as newWindow=false will be rejected.\n        newWindow = true;\n      }\n    }\n    let result;\n    try {\n      result = await this.#browserCdpClient.sendCommand('Target.createTarget', {\n        url: 'about:blank',\n        newWindow,\n        browserContextId: userContext === 'default' ? undefined : userContext\n      });\n    } catch (err) {\n      if (\n      // See https://source.chromium.org/chromium/chromium/src/+/main:chrome/browser/devtools/protocol/target_handler.cc;l=90;drc=e80392ac11e48a691f4309964cab83a3a59e01c8\n      err.message.startsWith('Failed to find browser context with id') ||\n      // See https://source.chromium.org/chromium/chromium/src/+/main:headless/lib/browser/protocol/target_handler.cc;l=49;drc=e80392ac11e48a691f4309964cab83a3a59e01c8\n      err.message === 'browserContextId') {\n        throw new protocol_js_1.NoSuchUserContextException(`The context ${userContext} was not found`);\n      }\n      throw err;\n    }\n    // Wait for the new tab to be loaded to avoid race conditions in the\n    // `browsingContext` events, when the `browsingContext.domContentLoaded` and\n    // `browsingContext.load` events from the initial `about:blank` navigation\n    // are emitted after the next navigation is started.\n    // Details: https://github.com/web-platform-tests/wpt/issues/35846\n    const contextId = result.targetId;\n    const context = this.#browsingContextStorage.getContext(contextId);\n    await context.lifecycleLoaded();\n    return {\n      context: context.id\n    };\n  }\n  navigate(params) {\n    const context = this.#browsingContextStorage.getContext(params.context);\n    return context.navigate(params.url, params.wait ?? \"none\" /* BrowsingContext.ReadinessState.None */);\n  }\n  reload(params) {\n    const context = this.#browsingContextStorage.getContext(params.context);\n    return context.reload(params.ignoreCache ?? false, params.wait ?? \"none\" /* BrowsingContext.ReadinessState.None */);\n  }\n  async activate(params) {\n    const context = this.#browsingContextStorage.getContext(params.context);\n    if (!context.isTopLevelContext()) {\n      throw new protocol_js_1.InvalidArgumentException('Activation is only supported on the top-level context');\n    }\n    await context.activate();\n    return {};\n  }\n  async captureScreenshot(params) {\n    const context = this.#browsingContextStorage.getContext(params.context);\n    return await context.captureScreenshot(params);\n  }\n  async print(params) {\n    const context = this.#browsingContextStorage.getContext(params.context);\n    return await context.print(params);\n  }\n  async setViewport(params) {\n    const context = this.#browsingContextStorage.getContext(params.context);\n    if (!context.isTopLevelContext()) {\n      throw new protocol_js_1.InvalidArgumentException('Emulating viewport is only supported on the top-level context');\n    }\n    await context.setViewport(params.viewport, params.devicePixelRatio);\n    return {};\n  }\n  async traverseHistory(params) {\n    const context = this.#browsingContextStorage.getContext(params.context);\n    if (!context) {\n      throw new protocol_js_1.InvalidArgumentException(`No browsing context with id ${params.context}`);\n    }\n    await context.traverseHistory(params.delta);\n    return {};\n  }\n  async handleUserPrompt(params) {\n    const context = this.#browsingContextStorage.getContext(params.context);\n    await context.handleUserPrompt(params);\n    return {};\n  }\n  async close(params) {\n    const context = this.#browsingContextStorage.getContext(params.context);\n    if (!context.isTopLevelContext()) {\n      throw new protocol_js_1.InvalidArgumentException(`Non top-level browsing context ${context.id} cannot be closed.`);\n    }\n    try {\n      const detachedFromTargetPromise = new Promise(resolve => {\n        const onContextDestroyed = event => {\n          if (event.targetId === params.context) {\n            this.#browserCdpClient.off('Target.detachedFromTarget', onContextDestroyed);\n            resolve();\n          }\n        };\n        this.#browserCdpClient.on('Target.detachedFromTarget', onContextDestroyed);\n      });\n      if (params.promptUnload) {\n        await context.close();\n      } else {\n        await this.#browserCdpClient.sendCommand('Target.closeTarget', {\n          targetId: params.context\n        });\n      }\n      // Sometimes CDP command finishes before `detachedFromTarget` event,\n      // sometimes after. Wait for the CDP command to be finished, and then wait\n      // for `detachedFromTarget` if it hasn't emitted.\n      await detachedFromTargetPromise;\n    } catch (error) {\n      // Swallow error that arise from the page being destroyed\n      // Example is navigating to faulty SSL certificate\n      if (!(error.code === -32000 /* CdpErrorConstants.GENERIC_ERROR */ && error.message === 'Not attached to an active page')) {\n        throw error;\n      }\n    }\n    return {};\n  }\n  /**\n   * This method is called for each CDP session, since this class is responsible\n   * for creating and destroying all targets and browsing contexts.\n   */\n  #setEventListeners(cdpClient) {\n    cdpClient.on('Target.attachedToTarget', params => {\n      this.#handleAttachedToTargetEvent(params, cdpClient);\n    });\n    cdpClient.on('Target.detachedFromTarget', params => {\n      this.#handleDetachedFromTargetEvent(params);\n    });\n    cdpClient.on('Target.targetInfoChanged', params => {\n      this.#handleTargetInfoChangedEvent(params);\n    });\n    cdpClient.on('Inspector.targetCrashed', () => {\n      this.#handleTargetCrashedEvent(cdpClient);\n    });\n    cdpClient.on('Page.frameAttached', params => {\n      this.#handleFrameAttachedEvent(params);\n    });\n    cdpClient.on('Page.frameDetached', params => {\n      this.#handleFrameDetachedEvent(params);\n    });\n  }\n  #handleFrameAttachedEvent(params) {\n    const parentBrowsingContext = this.#browsingContextStorage.findContext(params.parentFrameId);\n    if (parentBrowsingContext !== undefined) {\n      BrowsingContextImpl_js_1.BrowsingContextImpl.create(parentBrowsingContext.cdpTarget, this.#realmStorage, params.frameId, params.parentFrameId, parentBrowsingContext.userContext, this.#eventManager, this.#browsingContextStorage, this.#sharedIdWithFrame, this.#logger);\n    }\n  }\n  #handleFrameDetachedEvent(params) {\n    // In case of OOPiF no need in deleting BrowsingContext.\n    if (params.reason === 'swap') {\n      return;\n    }\n    this.#browsingContextStorage.findContext(params.frameId)?.dispose();\n  }\n  #handleAttachedToTargetEvent(params, parentSessionCdpClient) {\n    const {\n      sessionId,\n      targetInfo\n    } = params;\n    const targetCdpClient = this.#cdpConnection.getCdpClient(sessionId);\n    this.#logger?.(log_js_1.LogType.debugInfo, 'AttachedToTarget event received:', params);\n    switch (targetInfo.type) {\n      case 'page':\n      case 'iframe':\n        {\n          if (targetInfo.targetId === this.#selfTargetId) {\n            break;\n          }\n          const cdpTarget = this.#createCdpTarget(targetCdpClient, targetInfo);\n          const maybeContext = this.#browsingContextStorage.findContext(targetInfo.targetId);\n          if (maybeContext) {\n            // OOPiF.\n            maybeContext.updateCdpTarget(cdpTarget);\n          } else {\n            // New context.\n            BrowsingContextImpl_js_1.BrowsingContextImpl.create(cdpTarget, this.#realmStorage, targetInfo.targetId, null, targetInfo.browserContextId && targetInfo.browserContextId !== this.#defaultUserContextId ? targetInfo.browserContextId : 'default', this.#eventManager, this.#browsingContextStorage, this.#sharedIdWithFrame, this.#logger);\n          }\n          return;\n        }\n      case 'service_worker':\n      case 'worker':\n        {\n          const realm = this.#realmStorage.findRealm({\n            cdpSessionId: parentSessionCdpClient.sessionId\n          });\n          // If there is no browsing context, this worker is already terminated.\n          if (!realm) {\n            break;\n          }\n          const cdpTarget = this.#createCdpTarget(targetCdpClient, targetInfo);\n          this.#handleWorkerTarget(cdpToBidiTargetTypes[targetInfo.type], cdpTarget, realm);\n          return;\n        }\n      // In CDP, we only emit shared workers on the browser and not the set of\n      // frames that use the shared worker. If we change this in the future to\n      // behave like service workers (emits on both browser and frame targets),\n      // we can remove this block and merge service workers with the above one.\n      case 'shared_worker':\n        {\n          const cdpTarget = this.#createCdpTarget(targetCdpClient, targetInfo);\n          this.#handleWorkerTarget(cdpToBidiTargetTypes[targetInfo.type], cdpTarget);\n          return;\n        }\n    }\n    // DevTools or some other not supported by BiDi target. Just release\n    // debugger and ignore them.\n    targetCdpClient.sendCommand('Runtime.runIfWaitingForDebugger').then(() => parentSessionCdpClient.sendCommand('Target.detachFromTarget', params)).catch(error => this.#logger?.(log_js_1.LogType.debugError, error));\n  }\n  #createCdpTarget(targetCdpClient, targetInfo) {\n    this.#setEventListeners(targetCdpClient);\n    const target = CdpTarget_js_1.CdpTarget.create(targetInfo.targetId, targetCdpClient, this.#browserCdpClient, this.#realmStorage, this.#eventManager, this.#preloadScriptStorage, this.#networkStorage, this.#acceptInsecureCerts, this.#logger);\n    this.#networkStorage.onCdpTargetCreated(target);\n    return target;\n  }\n  #workers = new Map();\n  #handleWorkerTarget(realmType, cdpTarget, ownerRealm) {\n    cdpTarget.cdpClient.on('Runtime.executionContextCreated', params => {\n      const {\n        uniqueId,\n        id,\n        origin\n      } = params.context;\n      const workerRealm = new WorkerRealm_js_1.WorkerRealm(cdpTarget.cdpClient, this.#eventManager, id, this.#logger, (0, BrowsingContextImpl_js_1.serializeOrigin)(origin), ownerRealm ? [ownerRealm] : [], uniqueId, this.#realmStorage, realmType);\n      this.#workers.set(cdpTarget.cdpSessionId, workerRealm);\n    });\n  }\n  #handleDetachedFromTargetEvent(params) {\n    const context = this.#browsingContextStorage.findContextBySession(params.sessionId);\n    if (context) {\n      context.dispose();\n      this.#preloadScriptStorage.find({\n        targetId: context.id\n      }).map(preloadScript => preloadScript.dispose(context.id));\n      return;\n    }\n    const worker = this.#workers.get(params.sessionId);\n    if (worker) {\n      this.#realmStorage.deleteRealms({\n        cdpSessionId: worker.cdpClient.sessionId\n      });\n    }\n  }\n  #handleTargetInfoChangedEvent(params) {\n    const context = this.#browsingContextStorage.findContext(params.targetInfo.targetId);\n    if (context) {\n      context.onTargetInfoChanged(params);\n    }\n  }\n  #handleTargetCrashedEvent(cdpClient) {\n    // This is primarily used for service and shared workers. CDP tends to not\n    // signal they closed gracefully and instead says they crashed to signal\n    // they are closed.\n    const realms = this.#realmStorage.findRealms({\n      cdpSessionId: cdpClient.sessionId\n    });\n    for (const realm of realms) {\n      realm.dispose();\n    }\n  }\n}\nexports.BrowsingContextProcessor = BrowsingContextProcessor;","map":{"version":3,"names":["protocol_js_1","require","log_js_1","WorkerRealm_js_1","BrowsingContextImpl_js_1","CdpTarget_js_1","cdpToBidiTargetTypes","service_worker","shared_worker","worker","BrowsingContextProcessor","browserCdpClient","cdpConnection","selfTargetId","eventManager","browsingContextStorage","networkStorage","acceptInsecureCerts","sharedIdWithFrame","preloadScriptStorage","realmStorage","defaultUserContextId","logger","constructor","setEventListeners","getTree","params","resultContexts","root","undefined","getTopLevelContexts","getContext","contexts","map","c","serializeToBidiValue","maxDepth","Number","MAX_VALUE","create","referenceContext","userContext","isTopLevelContext","InvalidArgumentException","newWindow","type","existingContexts","getAllContexts","filter","context","length","result","sendCommand","url","browserContextId","err","message","startsWith","NoSuchUserContextException","contextId","targetId","lifecycleLoaded","id","navigate","wait","reload","ignoreCache","activate","captureScreenshot","print","setViewport","viewport","devicePixelRatio","traverseHistory","delta","handleUserPrompt","close","detachedFromTargetPromise","Promise","resolve","onContextDestroyed","event","off","on","promptUnload","error","code","#setEventListeners","cdpClient","handleAttachedToTargetEvent","handleDetachedFromTargetEvent","handleTargetInfoChangedEvent","handleTargetCrashedEvent","handleFrameAttachedEvent","handleFrameDetachedEvent","#handleFrameAttachedEvent","parentBrowsingContext","findContext","parentFrameId","BrowsingContextImpl","cdpTarget","frameId","#handleFrameDetachedEvent","reason","dispose","#handleAttachedToTargetEvent","parentSessionCdpClient","sessionId","targetInfo","targetCdpClient","getCdpClient","LogType","debugInfo","createCdpTarget","maybeContext","updateCdpTarget","realm","findRealm","cdpSessionId","handleWorkerTarget","then","catch","debugError","#createCdpTarget","target","CdpTarget","onCdpTargetCreated","workers","Map","#handleWorkerTarget","realmType","ownerRealm","uniqueId","origin","workerRealm","WorkerRealm","serializeOrigin","set","#handleDetachedFromTargetEvent","findContextBySession","find","preloadScript","get","deleteRealms","#handleTargetInfoChangedEvent","onTargetInfoChanged","#handleTargetCrashedEvent","realms","findRealms","exports"],"sources":["../../../../../src/bidiMapper/domains/context/BrowsingContextProcessor.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}