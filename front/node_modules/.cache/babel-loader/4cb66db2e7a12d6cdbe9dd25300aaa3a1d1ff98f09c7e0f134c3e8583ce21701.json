{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2023 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScriptProcessor = void 0;\nconst protocol_1 = require(\"../../../protocol/protocol\");\nconst PreloadScript_1 = require(\"./PreloadScript\");\nclass ScriptProcessor {\n  #browsingContextStorage;\n  #realmStorage;\n  #preloadScriptStorage;\n  #logger;\n  constructor(browsingContextStorage, realmStorage, preloadScriptStorage, logger) {\n    this.#browsingContextStorage = browsingContextStorage;\n    this.#realmStorage = realmStorage;\n    this.#preloadScriptStorage = preloadScriptStorage;\n    this.#logger = logger;\n  }\n  async addPreloadScript(params) {\n    const contexts = this.#browsingContextStorage.verifyContextsList(params.contexts);\n    const preloadScript = new PreloadScript_1.PreloadScript(params, this.#logger);\n    this.#preloadScriptStorage.add(preloadScript);\n    const cdpTargets = contexts.size === 0 ? new Set(this.#browsingContextStorage.getTopLevelContexts().map(context => context.cdpTarget)) : new Set([...contexts.values()].map(context => context.cdpTarget));\n    await preloadScript.initInTargets(cdpTargets, false);\n    return {\n      script: preloadScript.id\n    };\n  }\n  async removePreloadScript(params) {\n    const bidiId = params.script;\n    const scripts = this.#preloadScriptStorage.find({\n      id: bidiId\n    });\n    if (scripts.length === 0) {\n      throw new protocol_1.NoSuchScriptException(`No preload script with BiDi ID '${bidiId}'`);\n    }\n    await Promise.all(scripts.map(script => script.remove()));\n    this.#preloadScriptStorage.remove({\n      id: bidiId\n    });\n    return {};\n  }\n  async callFunction(params) {\n    const realm = await this.#getRealm(params.target);\n    return await realm.callFunction(params.functionDeclaration, params.this ?? {\n      type: 'undefined'\n    },\n    // `this` is `undefined` by default.\n    params.arguments ?? [],\n    // `arguments` is `[]` by default.\n    params.awaitPromise, params.resultOwnership ?? \"none\" /* Script.ResultOwnership.None */, params.serializationOptions ?? {}, params.userActivation ?? false);\n  }\n  async evaluate(params) {\n    const realm = await this.#getRealm(params.target);\n    return await realm.evaluate(params.expression, params.awaitPromise, params.resultOwnership ?? \"none\" /* Script.ResultOwnership.None */, params.serializationOptions ?? {}, params.userActivation ?? false);\n  }\n  async disown(params) {\n    const realm = await this.#getRealm(params.target);\n    await Promise.all(params.handles.map(async handle => await realm.disown(handle)));\n    return {};\n  }\n  getRealms(params) {\n    if (params.context !== undefined) {\n      // Make sure the context is known.\n      this.#browsingContextStorage.getContext(params.context);\n    }\n    const realms = this.#realmStorage.findRealms({\n      browsingContextId: params.context,\n      type: params.type\n    }).map(realm => realm.realmInfo);\n    return {\n      realms\n    };\n  }\n  async #getRealm(target) {\n    if ('realm' in target) {\n      return this.#realmStorage.getRealm({\n        realmId: target.realm\n      });\n    }\n    const context = this.#browsingContextStorage.getContext(target.context);\n    return await context.getOrCreateSandbox(target.sandbox);\n  }\n}\nexports.ScriptProcessor = ScriptProcessor;","map":{"version":3,"names":["protocol_1","require","PreloadScript_1","ScriptProcessor","browsingContextStorage","realmStorage","preloadScriptStorage","logger","constructor","addPreloadScript","params","contexts","verifyContextsList","preloadScript","PreloadScript","add","cdpTargets","size","Set","getTopLevelContexts","map","context","cdpTarget","values","initInTargets","script","id","removePreloadScript","bidiId","scripts","find","length","NoSuchScriptException","Promise","all","remove","callFunction","realm","getRealm","target","functionDeclaration","this","type","arguments","awaitPromise","resultOwnership","serializationOptions","userActivation","evaluate","expression","disown","handles","handle","getRealms","undefined","getContext","realms","findRealms","browsingContextId","realmInfo","#getRealm","realmId","getOrCreateSandbox","sandbox","exports"],"sources":["../../../../../src/bidiMapper/domains/script/ScriptProcessor.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}