{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\tryg\\\\front\\\\src\\\\components\\\\ScraperForm.js\",\n  _s = $RefreshSig$();\n// // src/components/ScraperForm.js\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const ScraperForm = () => {\n//   const [urls, setUrls] = useState('');\n//   const [selectors, setSelectors] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//         const response = await axios.post('http://localhost:3011/scrape', {\n//             urls: urls.split(',').map((url) => url.trim()),\n//             selectors: selectors.split(',').map((selector) => selector.trim()),\n//           });\n\n//       console.log(response.data); \n//     } catch (error) {\n//       console.error('Error:', error);\n//     }\n//   };\n// //save in stae and print as map\n\n//   return (\n//      <form onSubmit={handleSubmit}>\n//       <label>\n//         Enter URLs (comma-separated):\n//         <input type=\"text\" value={urls} onChange={(e) => setUrls(e.target.value)} />\n//       </label>\n//       <br />\n//       <label>\n//         Enter jQuery selectors (comma-separated):\n//         <input type=\"text\" value={selectors} onChange={(e) => setSelectors(e.target.value)} />\n//       </label>\n//       <br />\n//       <button type=\"submit\">Submit</button>\n\n//     </form>\n\n//   );\n// };\n\n// export default ScraperForm;\n\n// --------------------------------\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const ScraperForm = () => {\n//   const [urls, setUrls] = useState('');\n//   const [selectors, setSelectors] = useState('');\n//   const [output, setOutput] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await axios.post('http://localhost:3015/scrape', {\n//         urls: urls.split(',').map((url) => url.trim()),\n//         selectors: selectors.split(',').map((selector) => selector.trim()),\n//       });\n\n//       console.log(response.data);\n\n//       // Set the output in the state to be displayed on the frontend\n//       setOutput(response.data.tableString);\n//     } catch (error) {\n//       console.error('Error:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Enter URLs (comma-separated):\n//           <input type=\"text\" value={urls} onChange={(e) => setUrls(e.target.value)} />\n//         </label>\n//         <br />\n//         <label>\n//           Enter jQuery selectors (comma-separated):\n//           <input type=\"text\" value={selectors} onChange={(e) => setSelectors(e.target.value)} />\n//         </label>\n//         <br />\n//         <button type=\"submit\">Submit</button>\n//       </form>\n\n//       {/* Display the output on the frontend */}\n//       <div>\n//         <h2>Output:</h2>\n//         <pre>{output}</pre>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ScraperForm;\n\n// ---------------------------------------------------------perfect\n\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport './form.css';\nimport * as html2pdf from 'html2pdf.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBar = ({\n  activeFieldset\n}) => /*#__PURE__*/_jsxDEV(\"ul\", {\n  id: \"progressbar\",\n  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n    className: activeFieldset === 1 ? 'active' : 'inactive',\n    children: \"URL EXTRACTION\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n    className: activeFieldset === 2 ? 'active' : 'inactive',\n    children: \"SCRAPING\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n    className: activeFieldset === 3 ? 'active' : 'inactive',\n    children: \"EXTRACTED DATA\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 7\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 118,\n  columnNumber: 5\n}, this);\n_c = ProgressBar;\nconst hashUrl = url => {\n  let hash = 0;\n  if (url.length === 0) return hash;\n  for (let i = 0; i < url.length; i++) {\n    const char = url.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash = hash & hash;\n  }\n  return `short-${hash}`;\n};\nconst Fieldset = ({\n  title,\n  subtitle,\n  children,\n  style\n}) => /*#__PURE__*/_jsxDEV(\"fieldset\", {\n  style: style,\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"fs-title\",\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n    className: \"fs-subtitle\",\n    children: subtitle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 7\n  }, this), children]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 139,\n  columnNumber: 5\n}, this);\n_c2 = Fieldset;\nconst ScraperForm = () => {\n  _s();\n  const [activeFieldset, setActiveFieldset] = useState(1);\n  const [formData, setFormData] = useState({\n    email: '',\n    text2: '',\n    text3: ''\n  });\n  const [urls, setUrls] = useState('');\n  const [selectors, setSelectors] = useState('');\n  const [output, setOutput] = useState('');\n  const [outputs, setOutputs] = useState('');\n  const [showUrlWarning, setShowUrlWarning] = useState(false);\n  // const [downloadReady, setDownloadReady] = useState(false); \n  const preRef = useRef(null);\n  const isUrlValid = userInput => {\n    const res = userInput.match(/(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)/g);\n    return res !== null;\n  };\n  const handleDownloadPDF = () => {\n    const element = preRef.current;\n    const pdfOptions = {\n      margin: 10,\n      filename: 'output.pdf',\n      image: {\n        type: 'jpeg',\n        quality: 0.98\n      },\n      html2canvas: {\n        scale: 2\n      },\n      jsPDF: {\n        unit: 'mm',\n        format: 'a4',\n        orientation: 'portrait'\n      }\n    };\n    html2pdf(element, pdfOptions);\n  };\n  const downloadPDF = async () => {\n    try {\n      const response = await fetch('http://localhost:5051/generate-pdf');\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'data.pdf');\n      document.body.appendChild(link);\n      link.click();\n      link.parentNode.removeChild(link);\n    } catch (error) {\n      console.error('Error downloading PDF:', error);\n    }\n  };\n\n  // const handleStart = async (e) => {\n  //   e.preventDefault();\n\n  //   try{\n  //     const response = await axios.post('http://localhost:5051/scraper', { urls });\n  //     setUrls(response.data.urls || []);\n  //   } catch (error) {\n  //     console.error('Error scraping URL:', error);\n  //   }\n  // }\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n    if (name === 'email') {\n      setShowUrlWarning(!isUrlValid(value));\n      const shortenedUrl = hashUrl(value);\n      setFormData(prevData => ({\n        ...prevData,\n        [name]: shortenedUrl\n      }));\n      setShowUrlWarning(false);\n    } else {\n      setFormData(prevData => ({\n        ...prevData,\n        [name]: value\n      }));\n    }\n  };\n  const handleNext = () => {\n    setActiveFieldset(prevActiveFieldset => prevActiveFieldset + 1);\n  };\n  const handlePrevious = () => {\n    setActiveFieldset(prevActiveFieldset => prevActiveFieldset - 1);\n  };\n  const handleSubmit2 = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5051/scrape', {\n        urls: urls.split(',').map(url => url.trim()),\n        selectors: selectors.split(',').map(selector => selector.trim())\n      });\n      console.log(response.data + '\\n');\n      setOutput(response.data.tableString);\n      handleNext();\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5002/scrape', {\n        url\n      });\n      const scrapedUrls = response.data.urls || [];\n      setUrls(scrapedUrls);\n      setDisplayUrls(true);\n      setOutputs(response.data.urls);\n    } catch (error) {\n      console.error('Error scraping URL:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n      activeFieldset: activeFieldset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"msform\",\n      onSubmit: handleSubmit2,\n      children: [/*#__PURE__*/_jsxDEV(Fieldset, {\n        style: {\n          display: activeFieldset === 1 ? 'block' : 'none'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          class: \"fs-title\",\n          children: \"Provide the Main URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          class: \"fs-subtitle\",\n          children: \"This step will provide the list of all URLS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          placeholder: \"Main URL\",\n          value: formData.email,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 14\n        }, this), showUrlWarning && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: \"Please enter a valid URL.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"urlss\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            ref: preRef,\n            children: outputs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"next action-button\",\n          onClick: handleSubmit,\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"next action-button\",\n          type: \"button\",\n          className: \"next action-button\",\n          onClick: downloadPDF,\n          disabled: !outputs.trim(),\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"next action-button\",\n          onClick: handleNext,\n          disabled: !formData.email.trim() || showUrlWarning,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Fieldset, {\n        style: {\n          display: activeFieldset === 2 ? 'block' : 'none'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"fs-title\",\n          children: \"SCRAPING STAGE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"fs-subtitle\",\n          children: \"Enter the URL and the selector that you want to scrape\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: urls,\n          placeholder: \"Enter URL to scrape\",\n          onChange: e => {\n            setUrls(e.target.value);\n            setShowUrlWarning(!isUrlValid(e.target.value));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Selectors\",\n          value: selectors,\n          onChange: e => setSelectors(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 9\n        }, this), showUrlWarning && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: \"Please enter a valid URL.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"previous action-button\",\n          onClick: handlePrevious,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit action-button\",\n          onClick: handleSubmit2,\n          disabled: !urls || !selectors || showUrlWarning,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Fieldset, {\n        style: {\n          display: activeFieldset === 3 ? 'block' : 'none'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"fs-title\",\n          children: \"EXTRACTED DATA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            ref: preRef,\n            children: output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"previous action-button\",\n          onClick: handlePrevious,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"next action-button\",\n          onClick: handleDownloadPDF,\n          disabled: !output.trim(),\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 3\n  }, this);\n};\n_s(ScraperForm, \"HIL/5VD3ESlKBzP4vYRbUDlyT68=\");\n_c3 = ScraperForm;\nexport default ScraperForm;\n\n// <Fieldset style={{ display: activeFieldset === 1 ? 'block' : 'none' }}>\n//         <h2 class=\"fs-title\">Provide the Main URL</h2>\n//  \t\t    <h3 class=\"fs-subtitle\">This step will provide the list of all URLS</h3>\n//              <input\n//           type=\"text\"\n//           name=\"email\"\n//           placeholder=\"Main URL\"\n//           value={formData.email}\n//           onChange={handleInputChange}\n//         />\n//         {showUrlWarning && <p style={{ color: 'red' }}>Please enter a valid URL.</p>}\n//         <button type=\"button\" className=\"next action-button\" onClick={handleStart}>\n//           Start\n//         </button>\n//         <button type=\"button\" className=\"next action-button\" onClick={downloadPDF}>\n//           Download\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"next action-button\"\n//           onClick={handleNext}\n//           disabled={!formData.email.trim() || showUrlWarning}\n//         >\n//           Next\n//         </button>\n//         </Fieldset>\n\n// in this fieldset, give the code the such that when the first button is clicked then all the urls within the url entered in the input field is extracted and displyed on the webpage. further the SECOND BUTTON {downloadPDF} downloads the output produced by the first button. \nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ProgressBar\");\n$RefreshReg$(_c2, \"Fieldset\");\n$RefreshReg$(_c3, \"ScraperForm\");","map":{"version":3,"names":["React","useState","useRef","axios","html2pdf","jsxDEV","_jsxDEV","ProgressBar","activeFieldset","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","hashUrl","url","hash","length","i","char","charCodeAt","Fieldset","title","subtitle","style","_c2","ScraperForm","_s","setActiveFieldset","formData","setFormData","email","text2","text3","urls","setUrls","selectors","setSelectors","output","setOutput","outputs","setOutputs","showUrlWarning","setShowUrlWarning","preRef","isUrlValid","userInput","res","match","handleDownloadPDF","element","current","pdfOptions","margin","filename","image","type","quality","html2canvas","scale","jsPDF","unit","format","orientation","downloadPDF","response","fetch","blob","window","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","parentNode","removeChild","error","console","handleInputChange","e","name","value","target","prevData","shortenedUrl","handleNext","prevActiveFieldset","handlePrevious","handleSubmit2","preventDefault","post","split","map","trim","selector","log","data","tableString","handleSubmit","scrapedUrls","setDisplayUrls","onSubmit","display","class","placeholder","onChange","color","ref","onClick","disabled","_c3","$RefreshReg$"],"sources":["C:/Users/PC/tryg/front/src/components/ScraperForm.js"],"sourcesContent":["// // src/components/ScraperForm.js\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const ScraperForm = () => {\r\n//   const [urls, setUrls] = useState('');\r\n//   const [selectors, setSelectors] = useState('');\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     try {\r\n//         const response = await axios.post('http://localhost:3011/scrape', {\r\n//             urls: urls.split(',').map((url) => url.trim()),\r\n//             selectors: selectors.split(',').map((selector) => selector.trim()),\r\n//           });\r\n\r\n//       console.log(response.data); \r\n//     } catch (error) {\r\n//       console.error('Error:', error);\r\n//     }\r\n//   };\r\n// //save in stae and print as map\r\n\r\n//   return (\r\n//      <form onSubmit={handleSubmit}>\r\n//       <label>\r\n//         Enter URLs (comma-separated):\r\n//         <input type=\"text\" value={urls} onChange={(e) => setUrls(e.target.value)} />\r\n//       </label>\r\n//       <br />\r\n//       <label>\r\n//         Enter jQuery selectors (comma-separated):\r\n//         <input type=\"text\" value={selectors} onChange={(e) => setSelectors(e.target.value)} />\r\n//       </label>\r\n//       <br />\r\n//       <button type=\"submit\">Submit</button>\r\n  \r\n//     </form>\r\n\r\n//   );\r\n// };\r\n\r\n// export default ScraperForm;\r\n\r\n\r\n// --------------------------------\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const ScraperForm = () => {\r\n//   const [urls, setUrls] = useState('');\r\n//   const [selectors, setSelectors] = useState('');\r\n//   const [output, setOutput] = useState('');\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     try {\r\n//       const response = await axios.post('http://localhost:3015/scrape', {\r\n//         urls: urls.split(',').map((url) => url.trim()),\r\n//         selectors: selectors.split(',').map((selector) => selector.trim()),\r\n//       });\r\n\r\n//       console.log(response.data);\r\n\r\n//       // Set the output in the state to be displayed on the frontend\r\n//       setOutput(response.data.tableString);\r\n//     } catch (error) {\r\n//       console.error('Error:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <label>\r\n//           Enter URLs (comma-separated):\r\n//           <input type=\"text\" value={urls} onChange={(e) => setUrls(e.target.value)} />\r\n//         </label>\r\n//         <br />\r\n//         <label>\r\n//           Enter jQuery selectors (comma-separated):\r\n//           <input type=\"text\" value={selectors} onChange={(e) => setSelectors(e.target.value)} />\r\n//         </label>\r\n//         <br />\r\n//         <button type=\"submit\">Submit</button>\r\n//       </form>\r\n\r\n//       {/* Display the output on the frontend */}\r\n//       <div>\r\n//         <h2>Output:</h2>\r\n//         <pre>{output}</pre>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ScraperForm;\r\n\r\n\r\n\r\n// ---------------------------------------------------------perfect\r\n\r\n\r\n\r\n\r\nimport React, { useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport './form.css';\r\nimport * as html2pdf from 'html2pdf.js';\r\n\r\n\r\nconst ProgressBar = ({ activeFieldset }) => (\r\n    <ul id=\"progressbar\">\r\n      <li className={activeFieldset === 1 ? 'active' : 'inactive'}>URL EXTRACTION</li>\r\n      <li className={activeFieldset === 2 ? 'active' : 'inactive'}>SCRAPING</li>\r\n      <li className={activeFieldset === 3 ? 'active' : 'inactive'}>EXTRACTED DATA</li>\r\n    </ul>\r\n  );\r\n\r\n  const hashUrl = (url) => {\r\n  \r\n    let hash = 0;\r\n    if (url.length === 0) return hash;\r\n  \r\n    for (let i = 0; i < url.length; i++) {\r\n      const char = url.charCodeAt(i);\r\n      hash = (hash << 5) - hash + char;\r\n      hash = hash & hash; \r\n    }\r\n    return `short-${hash}`;\r\n  };\r\n  \r\n  const Fieldset = ({ title, subtitle, children, style }) => (\r\n    <fieldset style={style}>\r\n      <h2 className=\"fs-title\">{title}</h2>\r\n      <h3 className=\"fs-subtitle\">{subtitle}</h3>\r\n      {children}\r\n    </fieldset>\r\n  );\r\n\r\nconst ScraperForm = () => {\r\n\r\n    const [activeFieldset, setActiveFieldset] = useState(1);\r\n    const [formData, setFormData] = useState({\r\n      email: '',\r\n      text2: '',\r\n      text3: '',\r\n    });\r\n\r\n\r\n  const [urls, setUrls] = useState('');\r\n  const [selectors, setSelectors] = useState('');\r\n  const [output, setOutput] = useState('');\r\n  const [outputs, setOutputs] = useState('');\r\n  const [showUrlWarning, setShowUrlWarning] = useState(false);\r\n  // const [downloadReady, setDownloadReady] = useState(false); \r\n  const preRef = useRef(null);\r\n\r\n\r\n  const isUrlValid = (userInput) => {\r\n    const res = userInput.match(/(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)/g);\r\n    return res !== null;\r\n  };\r\n  \r\n\r\n  const handleDownloadPDF = () => {\r\n    const element = preRef.current; \r\n    const pdfOptions = {\r\n      margin: 10,\r\n      filename: 'output.pdf',\r\n      image: { type: 'jpeg', quality: 0.98 },\r\n      html2canvas: { scale: 2 },\r\n      jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' },\r\n    };\r\n\r\n    html2pdf(element, pdfOptions);\r\n  };\r\n\r\n\r\n\r\n  const downloadPDF = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5051/generate-pdf');\r\n      const blob = await response.blob();\r\n      const url = window.URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', 'data.pdf');\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.parentNode.removeChild(link);\r\n    } catch (error) {\r\n      console.error('Error downloading PDF:', error);\r\n    }\r\n  };\r\n\r\n  \r\n  // const handleStart = async (e) => {\r\n  //   e.preventDefault();\r\n   \r\n   \r\n  //   try{\r\n  //     const response = await axios.post('http://localhost:5051/scraper', { urls });\r\n  //     setUrls(response.data.urls || []);\r\n  //   } catch (error) {\r\n  //     console.error('Error scraping URL:', error);\r\n  //   }\r\n  // }\r\n\r\n\r\n  \r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n\r\n    if (name === 'email') {\r\n      setShowUrlWarning(!isUrlValid(value));\r\n      const shortenedUrl = hashUrl(value);\r\n      \r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        [name]: shortenedUrl,\r\n      }));\r\n\r\n      setShowUrlWarning(false);\r\n    } else {\r\n    \r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setActiveFieldset((prevActiveFieldset) => prevActiveFieldset + 1);\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    setActiveFieldset((prevActiveFieldset) => prevActiveFieldset - 1);\r\n  };\r\n\r\n\r\n\r\n\r\n  const handleSubmit2 = async (e) => {\r\n    e.preventDefault();\r\n\r\n \r\n    try {\r\n      const response = await axios.post('http://localhost:5051/scrape', {\r\n        urls: urls.split(',').map((url) => url.trim()),\r\n        selectors: selectors.split(',').map((selector) => selector.trim()),\r\n      });\r\n\r\n      console.log(response.data + '\\n');\r\n\r\n \r\n      setOutput(response.data.tableString);\r\n      handleNext();\r\n\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n   \r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try{\r\n      const response = await axios.post('http://localhost:5002/scrape', { url });\r\n      const scrapedUrls = response.data.urls || [];\r\n      setUrls(scrapedUrls);  \r\n      setDisplayUrls(true);\r\n      setOutputs(response.data.urls);\r\n    } catch (error) {\r\n      console.error('Error scraping URL:', error);\r\n    }\r\n   \r\n  };\r\n\r\n  return (\r\n\r\n  <div>\r\n    <ProgressBar activeFieldset={activeFieldset} />\r\n      <form id=\"msform\" onSubmit={handleSubmit2}> \r\n        {/* <ProgressBar activeFieldset={activeFieldset} /> */}\r\n\r\n        <Fieldset style={{ display: activeFieldset === 1 ? 'block' : 'none' }}>\r\n        <h2 class=\"fs-title\">Provide the Main URL</h2>\r\n \t\t    <h3 class=\"fs-subtitle\">This step will provide the list of all URLS</h3>\r\n             <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          placeholder=\"Main URL\"\r\n          value={formData.email}\r\n          onChange={handleInputChange}\r\n        />\r\n        {showUrlWarning && <p style={{ color: 'red' }}>Please enter a valid URL.</p>}\r\n        <div className=\"urlss\">\r\n          <pre ref={preRef}>{outputs}</pre>\r\n        </div>\r\n        <button type=\"button\" className=\"next action-button\" onClick={handleSubmit}>\r\n          Start\r\n        </button>\r\n        <button type=\"button\" className=\"next action-button\" type=\"button\"\r\n          className=\"next action-button\"\r\n          onClick={downloadPDF}\r\n            disabled={!outputs.trim()}>\r\n          Download\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"next action-button\"\r\n          onClick={handleNext}\r\n          disabled={!formData.email.trim() || showUrlWarning}\r\n        >\r\n          Next\r\n        </button>\r\n        </Fieldset>\r\n\r\n\r\n\r\n       <Fieldset style={{ display: activeFieldset === 2 ? 'block' : 'none' }}>\r\n       <h2 className=\"fs-title\">SCRAPING STAGE</h2>\r\n        <h3 className=\"fs-subtitle\">Enter the URL and the selector that you want to scrape</h3>\r\n        <input\r\n        type=\"text\"\r\n        value={urls}\r\n        placeholder=\"Enter URL to scrape\"\r\n        onChange={(e) => {\r\n          setUrls(e.target.value);\r\n          setShowUrlWarning(!isUrlValid(e.target.value));\r\n        }}\r\n      />\r\n        <input type=\"text\" placeholder=\"Selectors\" value={selectors} onChange={(e) => setSelectors(e.target.value)} />\r\n        {showUrlWarning && <p style={{ color: 'red' }}>Please enter a valid URL.</p>}\r\n        <button type=\"button\" className=\"previous action-button\" onClick={handlePrevious} >\r\n          Previous\r\n        </button>\r\n        <button\r\n        type=\"submit\"\r\n        className=\"submit action-button\"\r\n        onClick={handleSubmit2}\r\n        disabled={!urls || !selectors || showUrlWarning}>\r\n          Submit\r\n        </button>\r\n        </Fieldset> \r\n\r\n     \r\n        <Fieldset style={{ display: activeFieldset === 3 ? 'block' : 'none' }}>\r\n        <h2 className=\"fs-title\">EXTRACTED DATA</h2>\r\n        <div className=\"result\">\r\n          <pre ref={preRef}>{output}</pre>\r\n        </div>\r\n        <button type=\"button\" className=\"previous action-button\" onClick={handlePrevious}>\r\n          Previous\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"next action-button\"\r\n          onClick={handleDownloadPDF}\r\n            disabled={!output.trim()}\r\n        >\r\n          Download\r\n        </button>\r\n      </Fieldset>\r\n\r\n      \r\n\r\n    </form>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default ScraperForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// <Fieldset style={{ display: activeFieldset === 1 ? 'block' : 'none' }}>\r\n//         <h2 class=\"fs-title\">Provide the Main URL</h2>\r\n//  \t\t    <h3 class=\"fs-subtitle\">This step will provide the list of all URLS</h3>\r\n//              <input\r\n//           type=\"text\"\r\n//           name=\"email\"\r\n//           placeholder=\"Main URL\"\r\n//           value={formData.email}\r\n//           onChange={handleInputChange}\r\n//         />\r\n//         {showUrlWarning && <p style={{ color: 'red' }}>Please enter a valid URL.</p>}\r\n//         <button type=\"button\" className=\"next action-button\" onClick={handleStart}>\r\n//           Start\r\n//         </button>\r\n//         <button type=\"button\" className=\"next action-button\" onClick={downloadPDF}>\r\n//           Download\r\n//         </button>\r\n//         <button\r\n//           type=\"button\"\r\n//           className=\"next action-button\"\r\n//           onClick={handleNext}\r\n//           disabled={!formData.email.trim() || showUrlWarning}\r\n//         >\r\n//           Next\r\n//         </button>\r\n//         </Fieldset>\r\n\r\n// in this fieldset, give the code the such that when the first button is clicked then all the urls within the url entered in the input field is extracted and displyed on the webpage. further the SECOND BUTTON {downloadPDF} downloads the output produced by the first button. \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}