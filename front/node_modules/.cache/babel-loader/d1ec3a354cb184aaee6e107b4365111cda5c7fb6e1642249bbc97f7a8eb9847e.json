{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CdpTarget = void 0;\nconst chromium_bidi_js_1 = require(\"../../../protocol/chromium-bidi.js\");\nconst Deferred_js_1 = require(\"../../../utils/Deferred.js\");\nconst LogManager_js_1 = require(\"../log/LogManager.js\");\nclass CdpTarget {\n  #id;\n  #cdpClient;\n  #browserCdpClient;\n  #eventManager;\n  #preloadScriptStorage;\n  #unblocked = new Deferred_js_1.Deferred();\n  #acceptInsecureCerts;\n  #networkDomainEnabled = false;\n  #fetchDomainEnabled = false;\n  static create(targetId, cdpClient, browserCdpClient, realmStorage, eventManager, preloadScriptStorage, networkStorage, acceptInsecureCerts, logger) {\n    const cdpTarget = new CdpTarget(targetId, cdpClient, browserCdpClient, eventManager, preloadScriptStorage, acceptInsecureCerts);\n    LogManager_js_1.LogManager.create(cdpTarget, realmStorage, eventManager, logger);\n    cdpTarget.#setEventListeners();\n    // No need to await.\n    // Deferred will be resolved when the target is unblocked.\n    void cdpTarget.#unblock();\n    return cdpTarget;\n  }\n  constructor(targetId, cdpClient, browserCdpClient, eventManager, preloadScriptStorage, acceptInsecureCerts) {\n    this.#id = targetId;\n    this.#cdpClient = cdpClient;\n    this.#eventManager = eventManager;\n    this.#preloadScriptStorage = preloadScriptStorage;\n    this.#browserCdpClient = browserCdpClient;\n    this.#acceptInsecureCerts = acceptInsecureCerts;\n  }\n  /** Returns a deferred that resolves when the target is unblocked. */\n  get unblocked() {\n    return this.#unblocked;\n  }\n  get id() {\n    return this.#id;\n  }\n  get cdpClient() {\n    return this.#cdpClient;\n  }\n  get browserCdpClient() {\n    return this.#browserCdpClient;\n  }\n  /** Needed for CDP escape path. */\n  get cdpSessionId() {\n    // SAFETY we got the client by it's id for creating\n    return this.#cdpClient.sessionId;\n  }\n  /**\n   * Enables all the required CDP domains and unblocks the target.\n   */\n  async #unblock() {\n    // Check if the network domain is enabled globally.\n    const enabledNetwork = this.#eventManager.subscriptionManager.isSubscribedToModule(chromium_bidi_js_1.BiDiModule.Network, this.#id);\n    try {\n      await Promise.all([this.#cdpClient.sendCommand('Runtime.enable'), this.#cdpClient.sendCommand('Page.enable'), this.#cdpClient.sendCommand('Page.setLifecycleEventsEnabled', {\n        enabled: true\n      }),\n      // Set ignore certificate errors for each target.\n      this.#cdpClient.sendCommand('Security.setIgnoreCertificateErrors', {\n        ignore: this.#acceptInsecureCerts\n      }),\n      // TODO: enable Network domain for OOPiF targets.\n      enabledNetwork ? this.#cdpClient.sendCommand('Network.enable') : undefined, this.#cdpClient.sendCommand('Target.setAutoAttach', {\n        autoAttach: true,\n        waitForDebuggerOnStart: true,\n        flatten: true\n      }), this.#initAndEvaluatePreloadScripts(), this.#cdpClient.sendCommand('Runtime.runIfWaitingForDebugger')]);\n    } catch (error) {\n      // The target might have been closed before the initialization finished.\n      if (!this.#cdpClient.isCloseError(error)) {\n        this.#unblocked.resolve({\n          kind: 'error',\n          error\n        });\n        return;\n      }\n    }\n    this.#unblocked.resolve({\n      kind: 'success',\n      value: undefined\n    });\n  }\n  async enableFetchIfNeeded(params) {\n    if (!this.#networkDomainEnabled || this.#fetchDomainEnabled) {\n      return;\n    }\n    this.#fetchDomainEnabled = true;\n    try {\n      await this.#cdpClient.sendCommand('Fetch.enable', params);\n    } catch (err) {\n      this.#fetchDomainEnabled = false;\n    }\n  }\n  async disableFetchIfNeeded() {\n    if (!this.#fetchDomainEnabled) {\n      return;\n    }\n    this.#fetchDomainEnabled = false;\n    try {\n      await this.#cdpClient.sendCommand('Fetch.disable');\n    } catch (err) {\n      this.#fetchDomainEnabled = true;\n    }\n  }\n  async toggleNetworkIfNeeded(enabled) {\n    if (enabled === this.#networkDomainEnabled) {\n      return;\n    }\n    this.#networkDomainEnabled = enabled;\n    try {\n      await this.#cdpClient.sendCommand(this.#networkDomainEnabled ? 'Network.enable' : 'Network.disable');\n    } catch (err) {\n      this.#networkDomainEnabled = !enabled;\n    }\n  }\n  #setEventListeners() {\n    this.#cdpClient.on('*', (event, params) => {\n      // We may encounter uses for EventEmitter other than CDP events,\n      // which we want to skip.\n      if (typeof event !== 'string') {\n        return;\n      }\n      this.#eventManager.registerEvent({\n        type: 'event',\n        method: `cdp.${event}`,\n        params: {\n          event,\n          params,\n          session: this.cdpSessionId\n        }\n      }, null);\n    });\n  }\n  /**\n   * All the ProxyChannels from all the preload scripts of the given\n   * BrowsingContext.\n   */\n  getChannels() {\n    return this.#preloadScriptStorage.find().flatMap(script => script.channels);\n  }\n  /** Loads all top-level preload scripts. */\n  async #initAndEvaluatePreloadScripts() {\n    for (const script of this.#preloadScriptStorage.find({\n      global: true\n    })) {\n      await script.initInTarget(this, true);\n    }\n  }\n}\nexports.CdpTarget = CdpTarget;","map":{"version":3,"names":["chromium_bidi_js_1","require","Deferred_js_1","LogManager_js_1","CdpTarget","id","cdpClient","browserCdpClient","eventManager","preloadScriptStorage","unblocked","Deferred","acceptInsecureCerts","networkDomainEnabled","fetchDomainEnabled","create","targetId","realmStorage","networkStorage","logger","cdpTarget","LogManager","setEventListeners","unblock","constructor","cdpSessionId","sessionId","#unblock","enabledNetwork","subscriptionManager","isSubscribedToModule","BiDiModule","Network","Promise","all","sendCommand","enabled","ignore","undefined","autoAttach","waitForDebuggerOnStart","flatten","initAndEvaluatePreloadScripts","error","isCloseError","resolve","kind","value","enableFetchIfNeeded","params","err","disableFetchIfNeeded","toggleNetworkIfNeeded","#setEventListeners","on","event","registerEvent","type","method","session","getChannels","find","flatMap","script","channels","#initAndEvaluatePreloadScripts","global","initInTarget","exports"],"sources":["../../../../../src/bidiMapper/domains/context/CdpTarget.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}