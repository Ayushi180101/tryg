{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StorageProcessor = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst assert_js_1 = require(\"../../../utils/assert.js\");\nconst log_js_1 = require(\"../../../utils/log.js\");\nconst NetworkProcessor_js_1 = require(\"../network/NetworkProcessor.js\");\nconst NetworkUtils_js_1 = require(\"../network/NetworkUtils.js\");\n/**\n * Responsible for handling the `storage` domain.\n */\nclass StorageProcessor {\n  #browserCdpClient;\n  #browsingContextStorage;\n  #logger;\n  constructor(browserCdpClient, browsingContextStorage, logger) {\n    this.#browsingContextStorage = browsingContextStorage;\n    this.#browserCdpClient = browserCdpClient;\n    this.#logger = logger;\n  }\n  async deleteCookies(params) {\n    const partitionKey = this.#expandStoragePartitionSpec(params.partition);\n    const cdpResponse = await this.#browserCdpClient.sendCommand('Storage.getCookies', {\n      browserContextId: partitionKey.userContext\n    });\n    const cdpCookiesToDelete = cdpResponse.cookies.filter(\n    // CDP's partition key is the source origin. If the request specifies the\n    // `sourceOrigin` partition key, only cookies with the requested source origin\n    // are returned.\n    c => partitionKey.sourceOrigin === undefined || c.partitionKey === partitionKey.sourceOrigin).filter(cdpCookie => {\n      const bidiCookie = (0, NetworkUtils_js_1.cdpToBiDiCookie)(cdpCookie);\n      return this.#matchCookie(bidiCookie, params.filter);\n    }).map(cookie => ({\n      ...cookie,\n      // Set expiry to pass date to delete the cookie.\n      expires: 1\n    }));\n    await this.#browserCdpClient.sendCommand('Storage.setCookies', {\n      cookies: cdpCookiesToDelete,\n      browserContextId: partitionKey.userContext\n    });\n    return {\n      partitionKey\n    };\n  }\n  async getCookies(params) {\n    const partitionKey = this.#expandStoragePartitionSpec(params.partition);\n    const cdpResponse = await this.#browserCdpClient.sendCommand('Storage.getCookies', {\n      browserContextId: partitionKey.userContext\n    });\n    const filteredBiDiCookies = cdpResponse.cookies.filter(\n    // CDP's partition key is the source origin. If the request specifies the\n    // `sourceOrigin` partition key, only cookies with the requested source origin\n    // are returned.\n    c => partitionKey.sourceOrigin === undefined || c.partitionKey === partitionKey.sourceOrigin).map(c => (0, NetworkUtils_js_1.cdpToBiDiCookie)(c)).filter(c => this.#matchCookie(c, params.filter));\n    return {\n      cookies: filteredBiDiCookies,\n      partitionKey\n    };\n  }\n  async setCookie(params) {\n    const partitionKey = this.#expandStoragePartitionSpec(params.partition);\n    const cdpCookie = (0, NetworkUtils_js_1.bidiToCdpCookie)(params, partitionKey);\n    try {\n      await this.#browserCdpClient.sendCommand('Storage.setCookies', {\n        cookies: [cdpCookie],\n        browserContextId: partitionKey.userContext\n      });\n    } catch (e) {\n      this.#logger?.(log_js_1.LogType.debugError, e);\n      throw new protocol_js_1.UnableToSetCookieException(e.toString());\n    }\n    return {\n      partitionKey\n    };\n  }\n  #expandStoragePartitionSpecByBrowsingContext(descriptor) {\n    const browsingContextId = descriptor.context;\n    const browsingContext = this.#browsingContextStorage.getContext(browsingContextId);\n    // https://w3c.github.io/webdriver-bidi/#associated-storage-partition.\n    // Each browsing context also has an associated storage partition, which is the\n    // storage partition it uses to persist data. In Chromium it's a `BrowserContext`\n    // which maps to BiDi `UserContext`.\n    return {\n      userContext: browsingContext.userContext === 'default' ? undefined : browsingContext.userContext\n    };\n  }\n  #expandStoragePartitionSpecByStorageKey(descriptor) {\n    const unsupportedPartitionKeys = new Map();\n    let sourceOrigin = descriptor.sourceOrigin;\n    if (sourceOrigin !== undefined) {\n      const url = NetworkProcessor_js_1.NetworkProcessor.parseUrlString(sourceOrigin);\n      if (url.origin === 'null') {\n        // Origin `null` is a special case for local pages.\n        sourceOrigin = url.origin;\n      } else {\n        // Port is not supported in CDP Cookie's `partitionKey`, so it should be stripped\n        // from the requested source origin.\n        sourceOrigin = `${url.protocol}//${url.hostname}`;\n      }\n    }\n    const userContext = descriptor.userContext === 'default' ? undefined : descriptor.userContext;\n    // Partition spec is a storage partition.\n    // Let partition key be partition spec.\n    for (const [key, value] of Object.entries(descriptor)) {\n      if (key !== undefined && value !== undefined && !['type', 'sourceOrigin', 'userContext'].includes(key)) {\n        unsupportedPartitionKeys.set(key, value);\n      }\n    }\n    if (unsupportedPartitionKeys.size > 0) {\n      this.#logger?.(log_js_1.LogType.debugInfo, `Unsupported partition keys: ${JSON.stringify(Object.fromEntries(unsupportedPartitionKeys))}`);\n    }\n    return {\n      ...(sourceOrigin === undefined ? {} : {\n        sourceOrigin\n      }),\n      ...(userContext === undefined ? {} : {\n        userContext\n      })\n    };\n  }\n  #expandStoragePartitionSpec(partitionSpec) {\n    if (partitionSpec === undefined) {\n      return {};\n    }\n    if (partitionSpec.type === 'context') {\n      return this.#expandStoragePartitionSpecByBrowsingContext(partitionSpec);\n    }\n    (0, assert_js_1.assert)(partitionSpec.type === 'storageKey', 'Unknown partition type');\n    return this.#expandStoragePartitionSpecByStorageKey(partitionSpec);\n  }\n  #matchCookie(cookie, filter) {\n    if (filter === undefined) {\n      return true;\n    }\n    return (filter.domain === undefined || filter.domain === cookie.domain) && (filter.name === undefined || filter.name === cookie.name) && (\n    // `value` contains fields `type` and `value`.\n    filter.value === undefined || filter.value.type === cookie.value.type && filter.value.value === cookie.value.value) && (filter.path === undefined || filter.path === cookie.path) && (filter.size === undefined || filter.size === cookie.size) && (filter.httpOnly === undefined || filter.httpOnly === cookie.httpOnly) && (filter.secure === undefined || filter.secure === cookie.secure) && (filter.sameSite === undefined || filter.sameSite === cookie.sameSite) && (filter.expiry === undefined || filter.expiry === cookie.expiry);\n  }\n}\nexports.StorageProcessor = StorageProcessor;","map":{"version":3,"names":["protocol_js_1","require","assert_js_1","log_js_1","NetworkProcessor_js_1","NetworkUtils_js_1","StorageProcessor","browserCdpClient","browsingContextStorage","logger","constructor","deleteCookies","params","partitionKey","expandStoragePartitionSpec","partition","cdpResponse","sendCommand","browserContextId","userContext","cdpCookiesToDelete","cookies","filter","c","sourceOrigin","undefined","cdpCookie","bidiCookie","cdpToBiDiCookie","matchCookie","map","cookie","expires","getCookies","filteredBiDiCookies","setCookie","bidiToCdpCookie","e","LogType","debugError","UnableToSetCookieException","toString","expandStoragePartitionSpecByBrowsingContext","#expandStoragePartitionSpecByBrowsingContext","descriptor","browsingContextId","context","browsingContext","getContext","expandStoragePartitionSpecByStorageKey","#expandStoragePartitionSpecByStorageKey","unsupportedPartitionKeys","Map","url","NetworkProcessor","parseUrlString","origin","protocol","hostname","key","value","Object","entries","includes","set","size","debugInfo","JSON","stringify","fromEntries","#expandStoragePartitionSpec","partitionSpec","type","assert","#matchCookie","domain","name","path","httpOnly","secure","sameSite","expiry","exports"],"sources":["../../../../../src/bidiMapper/domains/storage/StorageProcessor.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}