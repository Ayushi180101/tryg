{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BidiCdpSession = void 0;\nconst CDPSession_js_1 = require(\"../api/CDPSession.js\");\nconst Errors_js_1 = require(\"../common/Errors.js\");\nconst Deferred_js_1 = require(\"../util/Deferred.js\");\n/**\n * @internal\n */\nclass BidiCdpSession extends CDPSession_js_1.CDPSession {\n  static sessions = new Map();\n  #detached = false;\n  #connection = undefined;\n  #sessionId = Deferred_js_1.Deferred.create();\n  frame;\n  constructor(frame, sessionId) {\n    super();\n    this.frame = frame;\n    if (!this.frame.page().browser().cdpSupported) {\n      return;\n    }\n    const connection = this.frame.page().browser().connection;\n    this.#connection = connection;\n    if (sessionId) {\n      this.#sessionId.resolve(sessionId);\n      BidiCdpSession.sessions.set(sessionId, this);\n    } else {\n      (async () => {\n        try {\n          const session = await connection.send('cdp.getSession', {\n            context: frame._id\n          });\n          this.#sessionId.resolve(session.result.session);\n          BidiCdpSession.sessions.set(session.result.session, this);\n        } catch (error) {\n          this.#sessionId.reject(error);\n        }\n      })();\n    }\n    // SAFETY: We never throw #sessionId.\n    BidiCdpSession.sessions.set(this.#sessionId.value(), this);\n  }\n  connection() {\n    return undefined;\n  }\n  async send(method, params) {\n    if (this.#connection === undefined) {\n      throw new Errors_js_1.UnsupportedOperation('CDP support is required for this feature. The current browser does not support CDP.');\n    }\n    if (this.#detached) {\n      throw new Errors_js_1.TargetCloseError(`Protocol error (${method}): Session closed. Most likely the page has been closed.`);\n    }\n    const session = await this.#sessionId.valueOrThrow();\n    const {\n      result\n    } = await this.#connection.send('cdp.sendCommand', {\n      method: method,\n      params: params,\n      session\n    });\n    return result.result;\n  }\n  async detach() {\n    if (this.#connection === undefined || this.#detached) {\n      return;\n    }\n    try {\n      await this.frame.client.send('Target.detachFromTarget', {\n        sessionId: this.id()\n      });\n    } finally {\n      BidiCdpSession.sessions.delete(this.id());\n      this.#detached = true;\n    }\n  }\n  id() {\n    const value = this.#sessionId.value();\n    return typeof value === 'string' ? value : '';\n  }\n}\nexports.BidiCdpSession = BidiCdpSession;","map":{"version":3,"names":["CDPSession_js_1","require","Errors_js_1","Deferred_js_1","BidiCdpSession","CDPSession","sessions","Map","detached","connection","undefined","sessionId","Deferred","create","frame","constructor","page","browser","cdpSupported","resolve","set","session","send","context","_id","result","error","reject","value","method","params","UnsupportedOperation","TargetCloseError","valueOrThrow","detach","client","id","delete","exports"],"sources":["C:\\Users\\PC\\tryg\\front\\node_modules\\puppeteer-core\\src\\bidi\\CDPSession.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2024 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport type ProtocolMapping from 'devtools-protocol/types/protocol-mapping.js';\n\nimport {CDPSession} from '../api/CDPSession.js';\nimport type {Connection as CdpConnection} from '../cdp/Connection.js';\nimport {TargetCloseError, UnsupportedOperation} from '../common/Errors.js';\nimport {Deferred} from '../util/Deferred.js';\n\nimport type {BidiConnection} from './Connection.js';\nimport type {BidiFrame} from './Frame.js';\n\n/**\n * @internal\n */\nexport class BidiCdpSession extends CDPSession {\n  static sessions = new Map<string, BidiCdpSession>();\n\n  #detached = false;\n  readonly #connection: BidiConnection | undefined = undefined;\n  readonly #sessionId = Deferred.create<string>();\n  readonly frame: BidiFrame;\n\n  constructor(frame: BidiFrame, sessionId?: string) {\n    super();\n    this.frame = frame;\n    if (!this.frame.page().browser().cdpSupported) {\n      return;\n    }\n\n    const connection = this.frame.page().browser().connection;\n    this.#connection = connection;\n\n    if (sessionId) {\n      this.#sessionId.resolve(sessionId);\n      BidiCdpSession.sessions.set(sessionId, this);\n    } else {\n      (async () => {\n        try {\n          const session = await connection.send('cdp.getSession', {\n            context: frame._id,\n          });\n          this.#sessionId.resolve(session.result.session!);\n          BidiCdpSession.sessions.set(session.result.session!, this);\n        } catch (error) {\n          this.#sessionId.reject(error as Error);\n        }\n      })();\n    }\n\n    // SAFETY: We never throw #sessionId.\n    BidiCdpSession.sessions.set(this.#sessionId.value() as string, this);\n  }\n\n  override connection(): CdpConnection | undefined {\n    return undefined;\n  }\n\n  override async send<T extends keyof ProtocolMapping.Commands>(\n    method: T,\n    params?: ProtocolMapping.Commands[T]['paramsType'][0]\n  ): Promise<ProtocolMapping.Commands[T]['returnType']> {\n    if (this.#connection === undefined) {\n      throw new UnsupportedOperation(\n        'CDP support is required for this feature. The current browser does not support CDP.'\n      );\n    }\n    if (this.#detached) {\n      throw new TargetCloseError(\n        `Protocol error (${method}): Session closed. Most likely the page has been closed.`\n      );\n    }\n    const session = await this.#sessionId.valueOrThrow();\n    const {result} = await this.#connection.send('cdp.sendCommand', {\n      method: method,\n      params: params,\n      session,\n    });\n    return result.result;\n  }\n\n  override async detach(): Promise<void> {\n    if (this.#connection === undefined || this.#detached) {\n      return;\n    }\n    try {\n      await this.frame.client.send('Target.detachFromTarget', {\n        sessionId: this.id(),\n      });\n    } finally {\n      BidiCdpSession.sessions.delete(this.id());\n      this.#detached = true;\n    }\n  }\n\n  override id(): string {\n    const value = this.#sessionId.value();\n    return typeof value === 'string' ? value : '';\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}