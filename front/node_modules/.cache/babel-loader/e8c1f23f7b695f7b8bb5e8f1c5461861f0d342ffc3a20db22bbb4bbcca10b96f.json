{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2023 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkRequest = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst assert_js_1 = require(\"../../../utils/assert.js\");\nconst log_js_1 = require(\"../../../utils/log.js\");\nconst NetworkUtils_js_1 = require(\"./NetworkUtils.js\");\n/** Abstracts one individual network request. */\nclass NetworkRequest {\n  static unknownParameter = 'UNKNOWN';\n  /**\n   * Each network request has an associated request id, which is a string\n   * uniquely identifying that request.\n   *\n   * The identifier for a request resulting from a redirect matches that of the\n   * request that initiated it.\n   */\n  #id;\n  #fetchId;\n  /**\n   * Indicates the network intercept phase, if the request is currently blocked.\n   * Undefined necessarily implies that the request is not blocked.\n   */\n  #interceptPhase;\n  #servedFromCache = false;\n  #redirectCount;\n  #request = {};\n  #response = {};\n  #eventManager;\n  #networkStorage;\n  #cdpTarget;\n  #logger;\n  #emittedEvents = {\n    [protocol_js_1.ChromiumBidi.Network.EventNames.AuthRequired]: false,\n    [protocol_js_1.ChromiumBidi.Network.EventNames.BeforeRequestSent]: false,\n    [protocol_js_1.ChromiumBidi.Network.EventNames.FetchError]: false,\n    [protocol_js_1.ChromiumBidi.Network.EventNames.ResponseCompleted]: false,\n    [protocol_js_1.ChromiumBidi.Network.EventNames.ResponseStarted]: false\n  };\n  constructor(id, eventManager, networkStorage, cdpTarget, redirectCount = 0, logger) {\n    this.#id = id;\n    this.#eventManager = eventManager;\n    this.#networkStorage = networkStorage;\n    this.#cdpTarget = cdpTarget;\n    this.#redirectCount = redirectCount;\n    this.#logger = logger;\n  }\n  get id() {\n    return this.#id;\n  }\n  get fetchId() {\n    return this.#fetchId;\n  }\n  /**\n   * When blocked returns the phase for it\n   */\n  get currentInterceptPhase() {\n    return this.#interceptPhase;\n  }\n  get url() {\n    return this.#response.info?.url ?? this.#response.paused?.request.url ?? this.#request.auth?.request.url ?? this.#request.info?.request.url ?? this.#request.paused?.request.url ?? NetworkRequest.unknownParameter;\n  }\n  get method() {\n    return this.#request.info?.request.method ?? this.#request.paused?.request.method ?? this.#request.auth?.request.method ?? this.#response.paused?.request.method ?? NetworkRequest.unknownParameter;\n  }\n  get redirectCount() {\n    return this.#redirectCount;\n  }\n  get cdpClient() {\n    return this.#cdpTarget.cdpClient;\n  }\n  isRedirecting() {\n    return Boolean(this.#request.info);\n  }\n  #interceptsInPhase(phase) {\n    return this.#networkStorage.getInterceptsForPhase(this, phase);\n  }\n  #isBlockedInPhase(phase) {\n    return this.#interceptsInPhase(phase).size > 0;\n  }\n  handleRedirect(event) {\n    this.#response.hasExtraInfo = event.redirectHasExtraInfo;\n    this.#response.info = event.redirectResponse;\n    this.#emitEventsIfReady({\n      wasRedirected: true\n    });\n  }\n  #emitEventsIfReady(options = {}) {\n    const requestExtraInfoCompleted =\n    // Flush redirects\n    options.wasRedirected || options.hasFailed || Boolean(this.#request.extraInfo) ||\n    // Requests from cache don't have extra info\n    this.#servedFromCache ||\n    // Sometimes there is no extra info and the response\n    // is the only place we can find out\n    Boolean(this.#response.info && !this.#response.hasExtraInfo);\n    const requestInterceptionExpected = this.#isBlockedInPhase(\"beforeRequestSent\" /* Network.InterceptPhase.BeforeRequestSent */);\n    const requestInterceptionCompleted = !requestInterceptionExpected || requestInterceptionExpected && Boolean(this.#request.paused);\n    if (Boolean(this.#request.info) && (requestInterceptionExpected ? requestInterceptionCompleted : requestExtraInfoCompleted)) {\n      this.#emitEvent(this.#getBeforeRequestEvent.bind(this));\n    }\n    const responseExtraInfoCompleted = Boolean(this.#response.extraInfo) ||\n    // Response from cache don't have extra info\n    this.#servedFromCache ||\n    // Don't expect extra info if the flag is false\n    Boolean(this.#response.info && !this.#response.hasExtraInfo);\n    const responseInterceptionExpected = this.#isBlockedInPhase(\"responseStarted\" /* Network.InterceptPhase.ResponseStarted */);\n    if (this.#response.info || responseInterceptionExpected && Boolean(this.#response.paused)) {\n      this.#emitEvent(this.#getResponseStartedEvent.bind(this));\n    }\n    const responseInterceptionCompleted = !responseInterceptionExpected || responseInterceptionExpected && Boolean(this.#response.paused);\n    if (Boolean(this.#response.info) && responseExtraInfoCompleted && responseInterceptionCompleted) {\n      this.#emitEvent(this.#getResponseReceivedEvent.bind(this));\n    }\n  }\n  onRequestWillBeSentEvent(event) {\n    this.#request.info = event;\n    this.#emitEventsIfReady();\n  }\n  onRequestWillBeSentExtraInfoEvent(event) {\n    this.#request.extraInfo = event;\n    this.#emitEventsIfReady();\n  }\n  onResponseReceivedExtraInfoEvent(event) {\n    this.#response.extraInfo = event;\n    this.#emitEventsIfReady();\n  }\n  onResponseReceivedEvent(event) {\n    this.#response.hasExtraInfo = event.hasExtraInfo;\n    this.#response.info = event.response;\n    this.#emitEventsIfReady();\n  }\n  onServedFromCache() {\n    this.#servedFromCache = true;\n    this.#emitEventsIfReady();\n  }\n  onLoadingFailedEvent(event) {\n    this.#emitEventsIfReady({\n      hasFailed: true\n    });\n    this.#emitEvent(() => {\n      return {\n        method: protocol_js_1.ChromiumBidi.Network.EventNames.FetchError,\n        params: {\n          ...this.#getBaseEventParams(),\n          errorText: event.errorText\n        }\n      };\n    });\n  }\n  /** @see https://chromedevtools.github.io/devtools-protocol/tot/Fetch/#method-failRequest */\n  async failRequest(errorReason) {\n    (0, assert_js_1.assert)(this.#fetchId, 'Network Interception not set-up.');\n    this.#interceptPhase = undefined;\n    await this.cdpClient.sendCommand('Fetch.failRequest', {\n      requestId: this.#fetchId,\n      errorReason\n    });\n  }\n  onRequestPaused(event) {\n    this.#fetchId = event.requestId;\n    // CDP https://chromedevtools.github.io/devtools-protocol/tot/Fetch/#event-requestPaused\n    if (event.responseStatusCode || event.responseErrorReason) {\n      this.#response.paused = event;\n      if (this.#isBlockedInPhase(\"responseStarted\" /* Network.InterceptPhase.ResponseStarted */)) {\n        this.#interceptPhase = \"responseStarted\" /* Network.InterceptPhase.ResponseStarted */;\n      } else {\n        void this.continueResponse();\n      }\n    } else {\n      this.#request.paused = event;\n      if (this.#isBlockedInPhase(\"beforeRequestSent\" /* Network.InterceptPhase.BeforeRequestSent */)) {\n        this.#interceptPhase = \"beforeRequestSent\" /* Network.InterceptPhase.BeforeRequestSent */;\n      } else {\n        void this.continueRequest();\n      }\n    }\n    this.#emitEventsIfReady();\n  }\n  onAuthRequired(event) {\n    this.#fetchId = event.requestId;\n    this.#request.auth = event;\n    if (this.#isBlockedInPhase(\"authRequired\" /* Network.InterceptPhase.AuthRequired */)) {\n      this.#interceptPhase = \"authRequired\" /* Network.InterceptPhase.AuthRequired */;\n    } else {\n      void this.continueWithAuth();\n    }\n    this.#emitEvent(() => {\n      return {\n        method: protocol_js_1.ChromiumBidi.Network.EventNames.AuthRequired,\n        params: {\n          ...this.#getBaseEventParams(\"authRequired\" /* Network.InterceptPhase.AuthRequired */),\n          // TODO: Why is this on the Spec\n          // How are we suppose to know the response if we are blocked by Auth\n          response: {}\n        }\n      };\n    });\n  }\n  /** @see https://chromedevtools.github.io/devtools-protocol/tot/Fetch/#method-continueRequest */\n  async continueRequest(url, method, headers) {\n    (0, assert_js_1.assert)(this.#fetchId, 'Network Interception not set-up.');\n    this.#interceptPhase = undefined;\n    await this.cdpClient.sendCommand('Fetch.continueRequest', {\n      requestId: this.#fetchId,\n      url,\n      method,\n      headers\n      // TODO: Set?\n      // postData:,\n      // interceptResponse:,\n    });\n  }\n  /** @see https://chromedevtools.github.io/devtools-protocol/tot/Fetch/#method-continueResponse */\n  async continueResponse({\n    responseCode,\n    responsePhrase,\n    responseHeaders\n  } = {}) {\n    (0, assert_js_1.assert)(this.#fetchId, 'Network Interception not set-up.');\n    this.#interceptPhase = undefined;\n    await this.cdpClient.sendCommand('Fetch.continueResponse', {\n      requestId: this.#fetchId,\n      responseCode,\n      responsePhrase,\n      responseHeaders\n    });\n  }\n  /** @see https://chromedevtools.github.io/devtools-protocol/tot/Fetch/#method-continueWithAuth */\n  async continueWithAuth(authChallengeResponse = {\n    response: 'Default'\n  }) {\n    (0, assert_js_1.assert)(this.#fetchId, 'Network Interception not set-up.');\n    this.#interceptPhase = undefined;\n    await this.cdpClient.sendCommand('Fetch.continueWithAuth', {\n      requestId: this.#fetchId,\n      authChallengeResponse\n    });\n  }\n  /** @see https://chromedevtools.github.io/devtools-protocol/tot/Fetch/#method-provideResponse */\n  async provideResponse({\n    responseCode,\n    responsePhrase,\n    responseHeaders,\n    body\n  }) {\n    (0, assert_js_1.assert)(this.#fetchId, 'Network Interception not set-up.');\n    this.#interceptPhase = undefined;\n    await this.cdpClient.sendCommand('Fetch.fulfillRequest', {\n      requestId: this.#fetchId,\n      responseCode,\n      responsePhrase,\n      responseHeaders,\n      ...(body ? {\n        body: btoa(body)\n      } : {}) // TODO: Double-check if btoa usage is correct.\n    });\n  }\n  get #context() {\n    return this.#response.paused?.frameId ?? this.#request.info?.frameId ?? this.#request.paused?.frameId ?? this.#request.auth?.frameId ?? null;\n  }\n  /** Returns the HTTP status code associated with this request if any. */\n  get statusCode() {\n    return this.#response.paused?.responseStatusCode ?? this.#response.extraInfo?.statusCode ?? this.#response.info?.status ?? -1 // TODO: Throw an exception or use some other status code?\n    ;\n  }\n  #emitEvent(getEvent) {\n    let event;\n    try {\n      event = getEvent();\n    } catch (error) {\n      this.#logger?.(log_js_1.LogType.debugError, error);\n      throw error;\n    }\n    if (this.#isIgnoredEvent() || this.#emittedEvents[event.method]) {\n      return;\n    }\n    this.#emittedEvents[event.method] = true;\n    this.#eventManager.registerEvent(Object.assign(event, {\n      type: 'event'\n    }), this.#context);\n  }\n  #getBaseEventParams(phase) {\n    const interceptProps = {\n      isBlocked: false\n    };\n    if (phase) {\n      const blockedBy = this.#interceptsInPhase(phase);\n      interceptProps.isBlocked = blockedBy.size > 0;\n      if (interceptProps.isBlocked) {\n        interceptProps.intercepts = [...blockedBy];\n      }\n    }\n    return {\n      context: this.#context,\n      navigation: this.#getNavigationId(),\n      redirectCount: this.#redirectCount,\n      request: this.#getRequestData(),\n      // Timestamp should be in milliseconds, while CDP provides it in seconds.\n      timestamp: Math.round((this.#request.info?.wallTime ?? 0) * 1000),\n      // Contains isBlocked and intercepts\n      ...interceptProps\n    };\n  }\n  #getNavigationId() {\n    if (!this.#request.info || !this.#request.info.loaderId ||\n    // When we navigate all CDP network events have `loaderId`\n    // CDP's `loaderId` and `requestId` match when\n    // that request triggered the loading\n    this.#request.info.loaderId !== this.#request.info.requestId) {\n      return null;\n    }\n    return this.#request.info.loaderId;\n  }\n  #getRequestData() {\n    const cookies = this.#request.extraInfo ? NetworkRequest.#getCookies(this.#request.extraInfo.associatedCookies) : [];\n    const headers = (0, NetworkUtils_js_1.bidiNetworkHeadersFromCdpNetworkHeaders)(this.#request.info?.request.headers);\n    return {\n      request: this.#id,\n      url: this.url,\n      method: this.method,\n      headers,\n      cookies,\n      headersSize: (0, NetworkUtils_js_1.computeHeadersSize)(headers),\n      // TODO: implement.\n      bodySize: 0,\n      timings: this.#getTimings()\n    };\n  }\n  // TODO: implement.\n  #getTimings() {\n    return {\n      timeOrigin: 0,\n      requestTime: 0,\n      redirectStart: 0,\n      redirectEnd: 0,\n      fetchStart: 0,\n      dnsStart: 0,\n      dnsEnd: 0,\n      connectStart: 0,\n      connectEnd: 0,\n      tlsStart: 0,\n      requestStart: 0,\n      responseStart: 0,\n      responseEnd: 0\n    };\n  }\n  #getBeforeRequestEvent() {\n    (0, assert_js_1.assert)(this.#request.info, 'RequestWillBeSentEvent is not set');\n    return {\n      method: protocol_js_1.ChromiumBidi.Network.EventNames.BeforeRequestSent,\n      params: {\n        ...this.#getBaseEventParams(\"beforeRequestSent\" /* Network.InterceptPhase.BeforeRequestSent */),\n        initiator: {\n          type: NetworkRequest.#getInitiatorType(this.#request.info.initiator.type)\n        }\n      }\n    };\n  }\n  #getResponseStartedEvent() {\n    (0, assert_js_1.assert)(this.#request.info, 'RequestWillBeSentEvent is not set');\n    (0, assert_js_1.assert)(\n    // The response paused comes before any data for the response\n    this.#response.paused || this.#response.info, 'ResponseReceivedEvent is not set');\n    // Chromium sends wrong extraInfo events for responses served from cache.\n    // See https://github.com/puppeteer/puppeteer/issues/9965 and\n    // https://crbug.com/1340398.\n    if (this.#response.info?.fromDiskCache) {\n      this.#response.extraInfo = undefined;\n    }\n    // TODO: get headers from Fetch.requestPaused\n    const headers = (0, NetworkUtils_js_1.bidiNetworkHeadersFromCdpNetworkHeaders)(this.#response.info?.headers);\n    return {\n      method: protocol_js_1.ChromiumBidi.Network.EventNames.ResponseStarted,\n      params: {\n        ...this.#getBaseEventParams(\"responseStarted\" /* Network.InterceptPhase.ResponseStarted */),\n        response: {\n          url: this.url,\n          protocol: this.#response.info?.protocol ?? '',\n          status: this.statusCode,\n          statusText: this.#response.info?.statusText || this.#response.paused?.responseStatusText || '',\n          fromCache: this.#response.info?.fromDiskCache || this.#response.info?.fromPrefetchCache || this.#servedFromCache,\n          headers,\n          mimeType: this.#response.info?.mimeType || '',\n          bytesReceived: this.#response.info?.encodedDataLength || 0,\n          headersSize: (0, NetworkUtils_js_1.computeHeadersSize)(headers),\n          // TODO: consider removing from spec.\n          bodySize: 0,\n          content: {\n            // TODO: consider removing from spec.\n            size: 0\n          }\n        }\n      }\n    };\n  }\n  #getResponseReceivedEvent() {\n    (0, assert_js_1.assert)(this.#request.info, 'RequestWillBeSentEvent is not set');\n    (0, assert_js_1.assert)(this.#response.info, 'ResponseReceivedEvent is not set');\n    // Chromium sends wrong extraInfo events for responses served from cache.\n    // See https://github.com/puppeteer/puppeteer/issues/9965 and\n    // https://crbug.com/1340398.\n    if (this.#response.info.fromDiskCache) {\n      this.#response.extraInfo = undefined;\n    }\n    const headers = (0, NetworkUtils_js_1.bidiNetworkHeadersFromCdpNetworkHeaders)(this.#response.info.headers);\n    return {\n      method: protocol_js_1.ChromiumBidi.Network.EventNames.ResponseCompleted,\n      params: {\n        ...this.#getBaseEventParams(),\n        response: {\n          url: this.url,\n          protocol: this.#response.info.protocol ?? '',\n          status: this.statusCode,\n          statusText: this.#response.info.statusText,\n          fromCache: this.#response.info.fromDiskCache || this.#response.info.fromPrefetchCache || this.#servedFromCache,\n          headers,\n          mimeType: this.#response.info.mimeType,\n          bytesReceived: this.#response.info.encodedDataLength,\n          headersSize: (0, NetworkUtils_js_1.computeHeadersSize)(headers),\n          // TODO: consider removing from spec.\n          bodySize: 0,\n          content: {\n            // TODO: consider removing from spec.\n            size: 0\n          }\n        }\n      }\n    };\n  }\n  #isIgnoredEvent() {\n    return this.#request.info?.request.url.endsWith('/favicon.ico') ?? false;\n  }\n  static #getInitiatorType(initiatorType) {\n    switch (initiatorType) {\n      case 'parser':\n      case 'script':\n      case 'preflight':\n        return initiatorType;\n      default:\n        return 'other';\n    }\n  }\n  static #getCookies(associatedCookies) {\n    return associatedCookies.filter(({\n      blockedReasons\n    }) => {\n      return !Array.isArray(blockedReasons) || blockedReasons.length === 0;\n    }).map(({\n      cookie\n    }) => (0, NetworkUtils_js_1.cdpToBiDiCookie)(cookie));\n  }\n}\nexports.NetworkRequest = NetworkRequest;","map":{"version":3,"names":["protocol_js_1","require","assert_js_1","log_js_1","NetworkUtils_js_1","NetworkRequest","unknownParameter","id","fetchId","interceptPhase","servedFromCache","redirectCount","request","response","eventManager","networkStorage","cdpTarget","logger","emittedEvents","ChromiumBidi","Network","EventNames","AuthRequired","BeforeRequestSent","FetchError","ResponseCompleted","ResponseStarted","constructor","currentInterceptPhase","url","info","paused","auth","method","cdpClient","isRedirecting","Boolean","interceptsInPhase","#interceptsInPhase","phase","getInterceptsForPhase","isBlockedInPhase","#isBlockedInPhase","size","handleRedirect","event","hasExtraInfo","redirectHasExtraInfo","redirectResponse","emitEventsIfReady","wasRedirected","#emitEventsIfReady","options","requestExtraInfoCompleted","hasFailed","extraInfo","requestInterceptionExpected","requestInterceptionCompleted","emitEvent","getBeforeRequestEvent","bind","responseExtraInfoCompleted","responseInterceptionExpected","getResponseStartedEvent","responseInterceptionCompleted","getResponseReceivedEvent","onRequestWillBeSentEvent","onRequestWillBeSentExtraInfoEvent","onResponseReceivedExtraInfoEvent","onResponseReceivedEvent","onServedFromCache","onLoadingFailedEvent","params","getBaseEventParams","errorText","failRequest","errorReason","assert","undefined","sendCommand","requestId","onRequestPaused","responseStatusCode","responseErrorReason","continueResponse","continueRequest","onAuthRequired","continueWithAuth","headers","responseCode","responsePhrase","responseHeaders","authChallengeResponse","provideResponse","body","btoa","context","#context","frameId","statusCode","status","#emitEvent","getEvent","error","LogType","debugError","isIgnoredEvent","registerEvent","Object","assign","type","#getBaseEventParams","interceptProps","isBlocked","blockedBy","intercepts","navigation","getNavigationId","getRequestData","timestamp","Math","round","wallTime","#getNavigationId","loaderId","#getRequestData","cookies","getCookies","associatedCookies","bidiNetworkHeadersFromCdpNetworkHeaders","headersSize","computeHeadersSize","bodySize","timings","getTimings","#getTimings","timeOrigin","requestTime","redirectStart","redirectEnd","fetchStart","dnsStart","dnsEnd","connectStart","connectEnd","tlsStart","requestStart","responseStart","responseEnd","#getBeforeRequestEvent","initiator","getInitiatorType","#getResponseStartedEvent","fromDiskCache","protocol","statusText","responseStatusText","fromCache","fromPrefetchCache","mimeType","bytesReceived","encodedDataLength","content","#getResponseReceivedEvent","#isIgnoredEvent","endsWith","#getInitiatorType","initiatorType","#getCookies","filter","blockedReasons","Array","isArray","length","map","cookie","cdpToBiDiCookie","exports"],"sources":["../../../../../src/bidiMapper/domains/network/NetworkRequest.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}