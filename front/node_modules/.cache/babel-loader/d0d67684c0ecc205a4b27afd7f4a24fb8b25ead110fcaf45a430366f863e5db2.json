{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createIncrementalIdGenerator = exports.Callback = exports.CallbackRegistry = void 0;\nconst Deferred_js_1 = require(\"../util/Deferred.js\");\nconst ErrorLike_js_1 = require(\"../util/ErrorLike.js\");\nconst Errors_js_1 = require(\"./Errors.js\");\nconst util_js_1 = require(\"./util.js\");\n/**\n * Manages callbacks and their IDs for the protocol request/response communication.\n *\n * @internal\n */\nclass CallbackRegistry {\n  #callbacks = new Map();\n  #idGenerator = createIncrementalIdGenerator();\n  create(label, timeout, request) {\n    const callback = new Callback(this.#idGenerator(), label, timeout);\n    this.#callbacks.set(callback.id, callback);\n    try {\n      request(callback.id);\n    } catch (error) {\n      // We still throw sync errors synchronously and clean up the scheduled\n      // callback.\n      callback.promise.valueOrThrow().catch(util_js_1.debugError).finally(() => {\n        this.#callbacks.delete(callback.id);\n      });\n      callback.reject(error);\n      throw error;\n    }\n    // Must only have sync code up until here.\n    return callback.promise.valueOrThrow().finally(() => {\n      this.#callbacks.delete(callback.id);\n    });\n  }\n  reject(id, message, originalMessage) {\n    const callback = this.#callbacks.get(id);\n    if (!callback) {\n      return;\n    }\n    this._reject(callback, message, originalMessage);\n  }\n  _reject(callback, errorMessage, originalMessage) {\n    let error;\n    let message;\n    if (errorMessage instanceof Errors_js_1.ProtocolError) {\n      error = errorMessage;\n      error.cause = callback.error;\n      message = errorMessage.message;\n    } else {\n      error = callback.error;\n      message = errorMessage;\n    }\n    callback.reject((0, ErrorLike_js_1.rewriteError)(error, `Protocol error (${callback.label}): ${message}`, originalMessage));\n  }\n  resolve(id, value) {\n    const callback = this.#callbacks.get(id);\n    if (!callback) {\n      return;\n    }\n    callback.resolve(value);\n  }\n  clear() {\n    for (const callback of this.#callbacks.values()) {\n      // TODO: probably we can accept error messages as params.\n      this._reject(callback, new Errors_js_1.TargetCloseError('Target closed'));\n    }\n    this.#callbacks.clear();\n  }\n  /**\n   * @internal\n   */\n  getPendingProtocolErrors() {\n    const result = [];\n    for (const callback of this.#callbacks.values()) {\n      result.push(new Error(`${callback.label} timed out. Trace: ${callback.error.stack}`));\n    }\n    return result;\n  }\n}\nexports.CallbackRegistry = CallbackRegistry;\n/**\n * @internal\n */\nclass Callback {\n  #id;\n  #error = new Errors_js_1.ProtocolError();\n  #deferred = Deferred_js_1.Deferred.create();\n  #timer;\n  #label;\n  constructor(id, label, timeout) {\n    this.#id = id;\n    this.#label = label;\n    if (timeout) {\n      this.#timer = setTimeout(() => {\n        this.#deferred.reject((0, ErrorLike_js_1.rewriteError)(this.#error, `${label} timed out. Increase the 'protocolTimeout' setting in launch/connect calls for a higher timeout if needed.`));\n      }, timeout);\n    }\n  }\n  resolve(value) {\n    clearTimeout(this.#timer);\n    this.#deferred.resolve(value);\n  }\n  reject(error) {\n    clearTimeout(this.#timer);\n    this.#deferred.reject(error);\n  }\n  get id() {\n    return this.#id;\n  }\n  get promise() {\n    return this.#deferred;\n  }\n  get error() {\n    return this.#error;\n  }\n  get label() {\n    return this.#label;\n  }\n}\nexports.Callback = Callback;\n/**\n * @internal\n */\nfunction createIncrementalIdGenerator() {\n  let id = 0;\n  return () => {\n    return ++id;\n  };\n}\nexports.createIncrementalIdGenerator = createIncrementalIdGenerator;","map":{"version":3,"names":["Deferred_js_1","require","ErrorLike_js_1","Errors_js_1","util_js_1","CallbackRegistry","callbacks","Map","idGenerator","createIncrementalIdGenerator","create","label","timeout","request","callback","Callback","set","id","error","promise","valueOrThrow","catch","debugError","finally","delete","reject","message","originalMessage","get","_reject","errorMessage","ProtocolError","cause","rewriteError","resolve","value","clear","values","TargetCloseError","getPendingProtocolErrors","result","push","Error","stack","exports","deferred","Deferred","timer","constructor","setTimeout","clearTimeout"],"sources":["C:\\Users\\PC\\tryg\\front\\node_modules\\puppeteer-core\\src\\common\\CallbackRegistry.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {Deferred} from '../util/Deferred.js';\nimport {rewriteError} from '../util/ErrorLike.js';\n\nimport {ProtocolError, TargetCloseError} from './Errors.js';\nimport {debugError} from './util.js';\n\n/**\n * Manages callbacks and their IDs for the protocol request/response communication.\n *\n * @internal\n */\nexport class CallbackRegistry {\n  #callbacks = new Map<number, Callback>();\n  #idGenerator = createIncrementalIdGenerator();\n\n  create(\n    label: string,\n    timeout: number | undefined,\n    request: (id: number) => void\n  ): Promise<unknown> {\n    const callback = new Callback(this.#idGenerator(), label, timeout);\n    this.#callbacks.set(callback.id, callback);\n    try {\n      request(callback.id);\n    } catch (error) {\n      // We still throw sync errors synchronously and clean up the scheduled\n      // callback.\n      callback.promise\n        .valueOrThrow()\n        .catch(debugError)\n        .finally(() => {\n          this.#callbacks.delete(callback.id);\n        });\n      callback.reject(error as Error);\n      throw error;\n    }\n    // Must only have sync code up until here.\n    return callback.promise.valueOrThrow().finally(() => {\n      this.#callbacks.delete(callback.id);\n    });\n  }\n\n  reject(id: number, message: string, originalMessage?: string): void {\n    const callback = this.#callbacks.get(id);\n    if (!callback) {\n      return;\n    }\n    this._reject(callback, message, originalMessage);\n  }\n\n  _reject(\n    callback: Callback,\n    errorMessage: string | ProtocolError,\n    originalMessage?: string\n  ): void {\n    let error: ProtocolError;\n    let message: string;\n    if (errorMessage instanceof ProtocolError) {\n      error = errorMessage;\n      error.cause = callback.error;\n      message = errorMessage.message;\n    } else {\n      error = callback.error;\n      message = errorMessage;\n    }\n\n    callback.reject(\n      rewriteError(\n        error,\n        `Protocol error (${callback.label}): ${message}`,\n        originalMessage\n      )\n    );\n  }\n\n  resolve(id: number, value: unknown): void {\n    const callback = this.#callbacks.get(id);\n    if (!callback) {\n      return;\n    }\n    callback.resolve(value);\n  }\n\n  clear(): void {\n    for (const callback of this.#callbacks.values()) {\n      // TODO: probably we can accept error messages as params.\n      this._reject(callback, new TargetCloseError('Target closed'));\n    }\n    this.#callbacks.clear();\n  }\n\n  /**\n   * @internal\n   */\n  getPendingProtocolErrors(): Error[] {\n    const result: Error[] = [];\n    for (const callback of this.#callbacks.values()) {\n      result.push(\n        new Error(`${callback.label} timed out. Trace: ${callback.error.stack}`)\n      );\n    }\n    return result;\n  }\n}\n/**\n * @internal\n */\n\nexport class Callback {\n  #id: number;\n  #error = new ProtocolError();\n  #deferred = Deferred.create<unknown>();\n  #timer?: ReturnType<typeof setTimeout>;\n  #label: string;\n\n  constructor(id: number, label: string, timeout?: number) {\n    this.#id = id;\n    this.#label = label;\n    if (timeout) {\n      this.#timer = setTimeout(() => {\n        this.#deferred.reject(\n          rewriteError(\n            this.#error,\n            `${label} timed out. Increase the 'protocolTimeout' setting in launch/connect calls for a higher timeout if needed.`\n          )\n        );\n      }, timeout);\n    }\n  }\n\n  resolve(value: unknown): void {\n    clearTimeout(this.#timer);\n    this.#deferred.resolve(value);\n  }\n\n  reject(error: Error): void {\n    clearTimeout(this.#timer);\n    this.#deferred.reject(error);\n  }\n\n  get id(): number {\n    return this.#id;\n  }\n\n  get promise(): Deferred<unknown> {\n    return this.#deferred;\n  }\n\n  get error(): ProtocolError {\n    return this.#error;\n  }\n\n  get label(): string {\n    return this.#label;\n  }\n}\n\n/**\n * @internal\n */\nexport function createIncrementalIdGenerator(): GetIdFn {\n  let id = 0;\n  return (): number => {\n    return ++id;\n  };\n}\n\n/**\n * @internal\n */\nexport type GetIdFn = () => number;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}