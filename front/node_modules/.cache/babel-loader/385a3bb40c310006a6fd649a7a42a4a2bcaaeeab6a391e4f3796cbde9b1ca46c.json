{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\tryg\\\\front\\\\src\\\\components\\\\ScraperForm.js\",\n  _s = $RefreshSig$();\n// // src/components/ScraperForm.js\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const ScraperForm = () => {\n//   const [urls, setUrls] = useState('');\n//   const [selectors, setSelectors] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//         const response = await axios.post('http://localhost:3011/scrape', {\n//             urls: urls.split(',').map((url) => url.trim()),\n//             selectors: selectors.split(',').map((selector) => selector.trim()),\n//           });\n\n//       console.log(response.data); \n//     } catch (error) {\n//       console.error('Error:', error);\n//     }\n//   };\n// //save in stae and print as map\n\n//   return (\n//      <form onSubmit={handleSubmit}>\n//       <label>\n//         Enter URLs (comma-separated):\n//         <input type=\"text\" value={urls} onChange={(e) => setUrls(e.target.value)} />\n//       </label>\n//       <br />\n//       <label>\n//         Enter jQuery selectors (comma-separated):\n//         <input type=\"text\" value={selectors} onChange={(e) => setSelectors(e.target.value)} />\n//       </label>\n//       <br />\n//       <button type=\"submit\">Submit</button>\n\n//     </form>\n\n//   );\n// };\n\n// export default ScraperForm;\n\n// --------------------------------\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const ScraperForm = () => {\n//   const [urls, setUrls] = useState('');\n//   const [selectors, setSelectors] = useState('');\n//   const [output, setOutput] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await axios.post('http://localhost:3015/scrape', {\n//         urls: urls.split(',').map((url) => url.trim()),\n//         selectors: selectors.split(',').map((selector) => selector.trim()),\n//       });\n\n//       console.log(response.data);\n\n//       // Set the output in the state to be displayed on the frontend\n//       setOutput(response.data.tableString);\n//     } catch (error) {\n//       console.error('Error:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Enter URLs (comma-separated):\n//           <input type=\"text\" value={urls} onChange={(e) => setUrls(e.target.value)} />\n//         </label>\n//         <br />\n//         <label>\n//           Enter jQuery selectors (comma-separated):\n//           <input type=\"text\" value={selectors} onChange={(e) => setSelectors(e.target.value)} />\n//         </label>\n//         <br />\n//         <button type=\"submit\">Submit</button>\n//       </form>\n\n//       {/* Display the output on the frontend */}\n//       <div>\n//         <h2>Output:</h2>\n//         <pre>{output}</pre>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ScraperForm;\n\n// ---------------------------------------------------------perfect\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBar = ({\n  activeFieldset\n}) => /*#__PURE__*/_jsxDEV(\"ul\", {\n  id: \"progressbar\",\n  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n    className: activeFieldset === 1 ? 'active' : '',\n    children: \"URL EXTRACTION\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n    className: activeFieldset === 2 ? 'active' : '',\n    children: \"SCRAPING\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n    className: activeFieldset === 3 ? 'active' : '',\n    children: \"EXTRACTED DATA\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 7\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 117,\n  columnNumber: 5\n}, this);\n_c = ProgressBar;\nconst Fieldset = ({\n  title,\n  subtitle,\n  children,\n  style\n}) => /*#__PURE__*/_jsxDEV(\"fieldset\", {\n  style: style,\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"fs-title\",\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n    className: \"fs-subtitle\",\n    children: subtitle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 7\n  }, this), children]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 125,\n  columnNumber: 5\n}, this);\n_c2 = Fieldset;\nconst ScraperForm = () => {\n  _s();\n  const [activeFieldset, setActiveFieldset] = useState(1);\n  const [formData, setFormData] = useState({\n    email: '',\n    text2: '',\n    text3: ''\n  });\n  const [urls, setUrls] = useState('');\n  const [selectors, setSelectors] = useState('');\n  const [output, setOutput] = useState('');\n  const [showUrlWarning, setShowUrlWarning] = useState(false);\n  const downloadPDF = async () => {\n    try {\n      const response = await fetch('http://localhost:5009/generate-pdf');\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'data.pdf');\n      document.body.appendChild(link);\n      link.click();\n      link.parentNode.removeChild(link);\n    } catch (error) {\n      console.error('Error downloading PDF:', error);\n    }\n  };\n  const handleStart = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5009/scrape', {\n        urls\n      });\n      setUrls(response.data.urls || []);\n    } catch (error) {\n      console.error('Error scraping URL:', error);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleNext = () => {\n    setActiveFieldset(prevActiveFieldset => prevActiveFieldset + 1);\n  };\n  const handlePrevious = () => {\n    setActiveFieldset(prevActiveFieldset => prevActiveFieldset - 1);\n  };\n  const handleSubmit2 = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5009/scrape', {\n        urls: urls.split(',').map(url => url.trim()),\n        selectors: selectors.split(',').map(selector => selector.trim())\n      });\n      console.log(response.data + '\\n');\n\n      // Set the output in the state to be displayed on the frontend\n      setOutput(response.data.tableString);\n      handleNext();\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"msform\",\n      onSubmit: handleSubmit2,\n      children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n        activeFieldset: activeFieldset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Fieldset, {\n        style: {\n          display: activeFieldset === 1 ? 'block' : 'none'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          class: \"fs-title\",\n          children: \"Provide the Main URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          class: \"fs-subtitle\",\n          children: \"This step will provide the list of all URLS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          placeholder: \"Main URL\",\n          value: formData.email,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"next action-button\",\n          onClick: handleStart,\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"next action-button\",\n          onClick: downloadPDF,\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"next action-button\",\n          onClick: handleNext,\n          disabled: !formData.email.trim(),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Fieldset, {\n        style: {\n          display: activeFieldset === 2 ? 'block' : 'none'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"fs-title\",\n          children: \"SCRAPING STAGE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"fs-subtitle\",\n          children: \"Enter the URL and the selector that you want to scrape\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: urls,\n          placeholder: \"Enter URL to scrape\",\n          onChange: e => setUrls(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Selectors\",\n          value: selectors,\n          onChange: e => setSelectors(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"previous action-button\",\n          onClick: handlePrevious,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit action-button\",\n          onClick: handleSubmit2,\n          disabled: !urls || !selectors,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Fieldset, {\n        style: {\n          display: activeFieldset === 3 ? 'block' : 'none'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"fs-title\",\n          children: \"EXTRACTED DATA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"previous action-button\",\n          onClick: handlePrevious,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"next action-button\",\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n};\n_s(ScraperForm, \"najx8tF2qwg778XeyuD5XT0ZHYk=\");\n_c3 = ScraperForm;\nexport default ScraperForm;\n\n// https://quotes.toscrape.com/page/1/\n// small.author\n\n//url shortening- takes limited url\n//progress bar\n//download extracted result\n\n// This the form code:\n\n// <Fieldset style={{ display: activeFieldset === 2 ? 'block' : 'none' }}>\n// <h2 className=\"fs-title\">SCRAPING STAGE</h2>\n//  <h3 className=\"fs-subtitle\">Enter the URL and the selector that you want to scrape</h3>\n//  <input type=\"text\" value={urls} placeholder=\"Enter URL to scrape\"    onChange={(e) => setUrls(e.target.value)}/>\n//  <input type=\"text\" placeholder=\"Selectors\" value={selectors} onChange={(e) => setSelectors(e.target.value)} />\n//  {/* {showWarning && <p style={{ color: 'red' }}>Please enter both URL and Selectors before submitting.</p>} */}\n//  <button type=\"button\" className=\"previous action-button\" onClick={handlePrevious} >\n//    Previous\n//  </button>\n//  <button type=\"submit\" className=\"submit action-button\" onClick={handleSubmit2}  disabled={!urls || !selectors}>\n//    Submit\n//  </button>\n//  </Fieldset> \n\n// this the handleSubmit2 function:\n\n// const handleSubmit2 = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await axios.post('http://localhost:5009/scrape', {\n//         urls: urls.split(',').map((url) => url.trim()),\n//         selectors: selectors.split(',').map((selector) => selector.trim()),\n//       });\n\n//       console.log(response.data + '\\n');\n\n//       // Set the output in the state to be displayed on the frontend\n//       setOutput(response.data.tableString);\n//       handleNext();\n\n//     } catch (error) {\n//       console.error('Error:', error);\n//     }\n\n//   };\n\n//   add URL validation for the first input field in this form code.\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ProgressBar\");\n$RefreshReg$(_c2, \"Fieldset\");\n$RefreshReg$(_c3, \"ScraperForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ProgressBar","activeFieldset","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","Fieldset","title","subtitle","style","_c2","ScraperForm","_s","setActiveFieldset","formData","setFormData","email","text2","text3","urls","setUrls","selectors","setSelectors","output","setOutput","showUrlWarning","setShowUrlWarning","downloadPDF","response","fetch","blob","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","parentNode","removeChild","error","console","handleStart","e","preventDefault","post","data","handleInputChange","name","value","target","prevData","handleNext","prevActiveFieldset","handlePrevious","handleSubmit2","split","map","trim","selector","log","tableString","onSubmit","display","class","type","placeholder","onChange","onClick","disabled","_c3","$RefreshReg$"],"sources":["C:/Users/PC/tryg/front/src/components/ScraperForm.js"],"sourcesContent":["// // src/components/ScraperForm.js\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const ScraperForm = () => {\r\n//   const [urls, setUrls] = useState('');\r\n//   const [selectors, setSelectors] = useState('');\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     try {\r\n//         const response = await axios.post('http://localhost:3011/scrape', {\r\n//             urls: urls.split(',').map((url) => url.trim()),\r\n//             selectors: selectors.split(',').map((selector) => selector.trim()),\r\n//           });\r\n\r\n//       console.log(response.data); \r\n//     } catch (error) {\r\n//       console.error('Error:', error);\r\n//     }\r\n//   };\r\n// //save in stae and print as map\r\n\r\n//   return (\r\n//      <form onSubmit={handleSubmit}>\r\n//       <label>\r\n//         Enter URLs (comma-separated):\r\n//         <input type=\"text\" value={urls} onChange={(e) => setUrls(e.target.value)} />\r\n//       </label>\r\n//       <br />\r\n//       <label>\r\n//         Enter jQuery selectors (comma-separated):\r\n//         <input type=\"text\" value={selectors} onChange={(e) => setSelectors(e.target.value)} />\r\n//       </label>\r\n//       <br />\r\n//       <button type=\"submit\">Submit</button>\r\n  \r\n//     </form>\r\n\r\n//   );\r\n// };\r\n\r\n// export default ScraperForm;\r\n\r\n\r\n// --------------------------------\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const ScraperForm = () => {\r\n//   const [urls, setUrls] = useState('');\r\n//   const [selectors, setSelectors] = useState('');\r\n//   const [output, setOutput] = useState('');\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     try {\r\n//       const response = await axios.post('http://localhost:3015/scrape', {\r\n//         urls: urls.split(',').map((url) => url.trim()),\r\n//         selectors: selectors.split(',').map((selector) => selector.trim()),\r\n//       });\r\n\r\n//       console.log(response.data);\r\n\r\n//       // Set the output in the state to be displayed on the frontend\r\n//       setOutput(response.data.tableString);\r\n//     } catch (error) {\r\n//       console.error('Error:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <label>\r\n//           Enter URLs (comma-separated):\r\n//           <input type=\"text\" value={urls} onChange={(e) => setUrls(e.target.value)} />\r\n//         </label>\r\n//         <br />\r\n//         <label>\r\n//           Enter jQuery selectors (comma-separated):\r\n//           <input type=\"text\" value={selectors} onChange={(e) => setSelectors(e.target.value)} />\r\n//         </label>\r\n//         <br />\r\n//         <button type=\"submit\">Submit</button>\r\n//       </form>\r\n\r\n//       {/* Display the output on the frontend */}\r\n//       <div>\r\n//         <h2>Output:</h2>\r\n//         <pre>{output}</pre>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ScraperForm;\r\n\r\n\r\n\r\n// ---------------------------------------------------------perfect\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './form.css';\r\n\r\n\r\nconst ProgressBar = ({ activeFieldset }) => (\r\n    <ul id=\"progressbar\">\r\n      <li className={activeFieldset === 1 ? 'active' : ''}>URL EXTRACTION</li>\r\n      <li className={activeFieldset === 2 ? 'active' : ''}>SCRAPING</li>\r\n      <li className={activeFieldset === 3 ? 'active' : ''}>EXTRACTED DATA</li>\r\n    </ul>\r\n  );\r\n  \r\n  const Fieldset = ({ title, subtitle, children, style }) => (\r\n    <fieldset style={style}>\r\n      <h2 className=\"fs-title\">{title}</h2>\r\n      <h3 className=\"fs-subtitle\">{subtitle}</h3>\r\n      {children}\r\n    </fieldset>\r\n  );\r\n\r\nconst ScraperForm = () => {\r\n\r\n\r\n    const [activeFieldset, setActiveFieldset] = useState(1);\r\n  \r\n    const [formData, setFormData] = useState({\r\n      email: '',\r\n      text2: '',\r\n      text3: '',\r\n    });\r\n\r\n\r\n  const [urls, setUrls] = useState('');\r\n  const [selectors, setSelectors] = useState('');\r\n  const [output, setOutput] = useState('');\r\n  const [showUrlWarning, setShowUrlWarning] = useState(false);\r\n\r\n\r\n\r\n\r\n  const downloadPDF = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5009/generate-pdf');\r\n      const blob = await response.blob();\r\n      const url = window.URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', 'data.pdf');\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.parentNode.removeChild(link);\r\n    } catch (error) {\r\n      console.error('Error downloading PDF:', error);\r\n    }\r\n  };\r\n  \r\n  \r\n  const handleStart = async (e) => {\r\n    e.preventDefault();\r\n   \r\n   \r\n    try{\r\n      const response = await axios.post('http://localhost:5009/scrape', { urls });\r\n      setUrls(response.data.urls || []);\r\n    } catch (error) {\r\n      console.error('Error scraping URL:', error);\r\n    }\r\n  }\r\n\r\n\r\n  \r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  \r\n\r\n  const handleNext = () => {\r\n    setActiveFieldset((prevActiveFieldset) => prevActiveFieldset + 1);\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    setActiveFieldset((prevActiveFieldset) => prevActiveFieldset - 1);\r\n  };\r\n\r\n\r\n\r\n\r\n  const handleSubmit2 = async (e) => {\r\n    e.preventDefault();\r\n\r\n \r\n    try {\r\n      const response = await axios.post('http://localhost:5009/scrape', {\r\n        urls: urls.split(',').map((url) => url.trim()),\r\n        selectors: selectors.split(',').map((selector) => selector.trim()),\r\n      });\r\n\r\n      console.log(response.data + '\\n');\r\n\r\n      // Set the output in the state to be displayed on the frontend\r\n      setOutput(response.data.tableString);\r\n      handleNext();\r\n\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n   \r\n  };\r\n\r\n  return (\r\n\r\n    <div>\r\n\r\n      <form id=\"msform\" onSubmit={handleSubmit2}> \r\n        <ProgressBar activeFieldset={activeFieldset} />\r\n\r\n        <Fieldset style={{ display: activeFieldset === 1 ? 'block' : 'none' }}>\r\n        <h2 class=\"fs-title\">Provide the Main URL</h2>\r\n \t\t    <h3 class=\"fs-subtitle\">This step will provide the list of all URLS</h3>\r\n         <input\r\n  type=\"text\"\r\n  name=\"email\"\r\n  placeholder=\"Main URL\"\r\n  value={formData.email}\r\n  onChange={handleInputChange}\r\n/>\r\n\r\n          <button type=\"button\" className=\"next action-button\" onClick={handleStart} >\r\n            Start\r\n          </button>\r\n          \r\n          <button type=\"button\" className=\"next action-button\" onClick={downloadPDF} >\r\n            Download\r\n          </button>\r\n          <button type=\"button\" className=\"next action-button\" onClick={handleNext} disabled={!formData.email.trim()}>\r\n            Next\r\n          </button>\r\n        </Fieldset>\r\n\r\n       <Fieldset style={{ display: activeFieldset === 2 ? 'block' : 'none' }}>\r\n       <h2 className=\"fs-title\">SCRAPING STAGE</h2>\r\n        <h3 className=\"fs-subtitle\">Enter the URL and the selector that you want to scrape</h3>\r\n        <input type=\"text\" value={urls} placeholder=\"Enter URL to scrape\"    onChange={(e) => setUrls(e.target.value)}/>\r\n        <input type=\"text\" placeholder=\"Selectors\" value={selectors} onChange={(e) => setSelectors(e.target.value)} />\r\n        {/* {showWarning && <p style={{ color: 'red' }}>Please enter both URL and Selectors before submitting.</p>} */}\r\n        <button type=\"button\" className=\"previous action-button\" onClick={handlePrevious} >\r\n          Previous\r\n        </button>\r\n        <button type=\"submit\" className=\"submit action-button\" onClick={handleSubmit2}  disabled={!urls || !selectors}>\r\n          Submit\r\n        </button>\r\n        </Fieldset> \r\n\r\n     \r\n      <Fieldset  style={{ display: activeFieldset === 3 ? 'block' : 'none' }}>\r\n      <h2 className=\"fs-title\">EXTRACTED DATA</h2>\r\n      <div className=\"result\">\r\n        <pre>{output}</pre>\r\n      </div>\r\n\r\n        <button type=\"button\" className=\"previous action-button\" onClick={handlePrevious}>\r\n          Previous\r\n        </button>\r\n        <button type=\"button\" className=\"next action-button\" >\r\n            Download\r\n          </button>\r\n        \r\n      </Fieldset>\r\n\r\n      \r\n\r\n    </form>\r\n    </div>\r\n    \r\n     \r\n\r\n\r\n  );\r\n};\r\n\r\nexport default ScraperForm;\r\n\r\n\r\n\r\n\r\n// https://quotes.toscrape.com/page/1/\r\n// small.author\r\n\r\n\r\n\r\n\r\n\r\n\r\n//url shortening- takes limited url\r\n//progress bar\r\n//download extracted result\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// This the form code:\r\n\r\n// <Fieldset style={{ display: activeFieldset === 2 ? 'block' : 'none' }}>\r\n// <h2 className=\"fs-title\">SCRAPING STAGE</h2>\r\n//  <h3 className=\"fs-subtitle\">Enter the URL and the selector that you want to scrape</h3>\r\n//  <input type=\"text\" value={urls} placeholder=\"Enter URL to scrape\"    onChange={(e) => setUrls(e.target.value)}/>\r\n//  <input type=\"text\" placeholder=\"Selectors\" value={selectors} onChange={(e) => setSelectors(e.target.value)} />\r\n//  {/* {showWarning && <p style={{ color: 'red' }}>Please enter both URL and Selectors before submitting.</p>} */}\r\n//  <button type=\"button\" className=\"previous action-button\" onClick={handlePrevious} >\r\n//    Previous\r\n//  </button>\r\n//  <button type=\"submit\" className=\"submit action-button\" onClick={handleSubmit2}  disabled={!urls || !selectors}>\r\n//    Submit\r\n//  </button>\r\n//  </Fieldset> \r\n\r\n\r\n\r\n// this the handleSubmit2 function:\r\n\r\n// const handleSubmit2 = async (e) => {\r\n//     e.preventDefault();\r\n\r\n \r\n//     try {\r\n//       const response = await axios.post('http://localhost:5009/scrape', {\r\n//         urls: urls.split(',').map((url) => url.trim()),\r\n//         selectors: selectors.split(',').map((selector) => selector.trim()),\r\n//       });\r\n\r\n//       console.log(response.data + '\\n');\r\n\r\n//       // Set the output in the state to be displayed on the frontend\r\n//       setOutput(response.data.tableString);\r\n//       handleNext();\r\n\r\n//     } catch (error) {\r\n//       console.error('Error:', error);\r\n//     }\r\n   \r\n//   };\r\n\r\n\r\n\r\n//   add URL validation for the first input field in this form code."],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}