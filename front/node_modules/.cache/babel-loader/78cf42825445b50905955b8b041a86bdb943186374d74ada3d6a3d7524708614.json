{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Realm = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst log_js_1 = require(\"../../../utils/log.js\");\nconst uuid_js_1 = require(\"../../../utils/uuid.js\");\nconst ChannelProxy_js_1 = require(\"./ChannelProxy.js\");\nclass Realm {\n  #cdpClient;\n  #eventManager;\n  #executionContextId;\n  #logger;\n  #origin;\n  #realmId;\n  #realmStorage;\n  constructor(cdpClient, eventManager, executionContextId, logger, origin, realmId, realmStorage) {\n    this.#cdpClient = cdpClient;\n    this.#eventManager = eventManager;\n    this.#executionContextId = executionContextId;\n    this.#logger = logger;\n    this.#origin = origin;\n    this.#realmId = realmId;\n    this.#realmStorage = realmStorage;\n    this.#realmStorage.addRealm(this);\n  }\n  cdpToBidiValue(cdpValue, resultOwnership) {\n    const bidiValue = this.serializeForBiDi(cdpValue.result.deepSerializedValue, new Map());\n    if (cdpValue.result.objectId) {\n      const objectId = cdpValue.result.objectId;\n      if (resultOwnership === \"root\" /* Script.ResultOwnership.Root */) {\n        // Extend BiDi value with `handle` based on required `resultOwnership`\n        // and  CDP response but not on the actual BiDi type.\n        bidiValue.handle = objectId;\n        // Remember all the handles sent to client.\n        this.#realmStorage.knownHandlesToRealmMap.set(objectId, this.realmId);\n      } else {\n        // No need to await for the object to be released.\n        void this.#releaseObject(objectId).catch(error => this.#logger?.(log_js_1.LogType.debugError, error));\n      }\n    }\n    if (cdpValue.result.type === 'object') {\n      switch (cdpValue.result.subtype) {\n        case 'generator':\n        case 'iterator':\n          bidiValue.type = cdpValue.result.subtype;\n          delete bidiValue['value'];\n          break;\n        default:\n        // Intentionally left blank.\n      }\n    }\n    return bidiValue;\n  }\n  /**\n   * Relies on the CDP to implement proper BiDi serialization, except:\n   * * CDP integer property `backendNodeId` is replaced with `sharedId` of\n   * `{documentId}_element_{backendNodeId}`;\n   * * CDP integer property `weakLocalObjectReference` is replaced with UUID `internalId`\n   * using unique-per serialization `internalIdMap`.\n   * * CDP type `platformobject` is replaced with `object`.\n   * @param deepSerializedValue - CDP value to be converted to BiDi.\n   * @param internalIdMap - Map from CDP integer `weakLocalObjectReference` to BiDi UUID\n   * `internalId`.\n   */\n  serializeForBiDi(deepSerializedValue, internalIdMap) {\n    if (Object.hasOwn(deepSerializedValue, 'weakLocalObjectReference')) {\n      const weakLocalObjectReference = deepSerializedValue.weakLocalObjectReference;\n      if (!internalIdMap.has(weakLocalObjectReference)) {\n        internalIdMap.set(weakLocalObjectReference, (0, uuid_js_1.uuidv4)());\n      }\n      deepSerializedValue.internalId = internalIdMap.get(weakLocalObjectReference);\n      delete deepSerializedValue['weakLocalObjectReference'];\n    }\n    // Platform object is a special case. It should have only `{type: object}`\n    // without `value` field.\n    if (deepSerializedValue.type === 'platformobject') {\n      return {\n        type: 'object'\n      };\n    }\n    const bidiValue = deepSerializedValue.value;\n    if (bidiValue === undefined) {\n      return deepSerializedValue;\n    }\n    // Recursively update the nested values.\n    if (['array', 'set', 'htmlcollection', 'nodelist'].includes(deepSerializedValue.type)) {\n      for (const i in bidiValue) {\n        bidiValue[i] = this.serializeForBiDi(bidiValue[i], internalIdMap);\n      }\n    }\n    if (['object', 'map'].includes(deepSerializedValue.type)) {\n      for (const i in bidiValue) {\n        bidiValue[i] = [this.serializeForBiDi(bidiValue[i][0], internalIdMap), this.serializeForBiDi(bidiValue[i][1], internalIdMap)];\n      }\n    }\n    return deepSerializedValue;\n  }\n  get realmId() {\n    return this.#realmId;\n  }\n  get executionContextId() {\n    return this.#executionContextId;\n  }\n  get origin() {\n    return this.#origin;\n  }\n  get source() {\n    return {\n      realm: this.realmId\n    };\n  }\n  get cdpClient() {\n    return this.#cdpClient;\n  }\n  get baseInfo() {\n    return {\n      realm: this.realmId,\n      origin: this.origin\n    };\n  }\n  async evaluate(expression, awaitPromise, resultOwnership, serializationOptions, userActivation = false) {\n    const cdpEvaluateResult = await this.cdpClient.sendCommand('Runtime.evaluate', {\n      contextId: this.executionContextId,\n      expression,\n      awaitPromise,\n      serializationOptions: Realm.#getSerializationOptions(\"deep\" /* Protocol.Runtime.SerializationOptionsSerialization.Deep */, serializationOptions),\n      userGesture: userActivation\n    });\n    if (cdpEvaluateResult.exceptionDetails) {\n      return await this.#getExceptionResult(cdpEvaluateResult.exceptionDetails, 0, resultOwnership);\n    }\n    return {\n      realm: this.realmId,\n      result: this.cdpToBidiValue(cdpEvaluateResult, resultOwnership),\n      type: 'success'\n    };\n  }\n  #registerEvent(event) {\n    if (this.associatedBrowsingContexts.length === 0) {\n      this.#eventManager.registerEvent(event, null);\n    } else {\n      for (const browsingContext of this.associatedBrowsingContexts) {\n        this.#eventManager.registerEvent(event, browsingContext.id);\n      }\n    }\n  }\n  initialize() {\n    this.#registerEvent({\n      type: 'event',\n      method: protocol_js_1.ChromiumBidi.Script.EventNames.RealmCreated,\n      params: this.realmInfo\n    });\n  }\n  /**\n   * Serializes a given CDP object into BiDi, keeping references in the\n   * target's `globalThis`.\n   */\n  async serializeCdpObject(cdpRemoteObject, resultOwnership) {\n    const argument = Realm.#cdpRemoteObjectToCallArgument(cdpRemoteObject);\n    const cdpValue = await this.cdpClient.sendCommand('Runtime.callFunctionOn', {\n      functionDeclaration: String(remoteObject => remoteObject),\n      awaitPromise: false,\n      arguments: [argument],\n      serializationOptions: {\n        serialization: \"deep\" /* Protocol.Runtime.SerializationOptionsSerialization.Deep */\n      },\n      executionContextId: this.executionContextId\n    });\n    return this.cdpToBidiValue(cdpValue, resultOwnership);\n  }\n  static #cdpRemoteObjectToCallArgument(cdpRemoteObject) {\n    if (cdpRemoteObject.objectId !== undefined) {\n      return {\n        objectId: cdpRemoteObject.objectId\n      };\n    }\n    if (cdpRemoteObject.unserializableValue !== undefined) {\n      return {\n        unserializableValue: cdpRemoteObject.unserializableValue\n      };\n    }\n    return {\n      value: cdpRemoteObject.value\n    };\n  }\n  /**\n   * Gets the string representation of an object. This is equivalent to\n   * calling `toString()` on the object value.\n   */\n  async stringifyObject(cdpRemoteObject) {\n    const {\n      result\n    } = await this.cdpClient.sendCommand('Runtime.callFunctionOn', {\n      functionDeclaration: String(remoteObject => String(remoteObject)),\n      awaitPromise: false,\n      arguments: [cdpRemoteObject],\n      returnByValue: true,\n      executionContextId: this.executionContextId\n    });\n    return result.value;\n  }\n  async #flattenKeyValuePairs(mappingLocalValue) {\n    const keyValueArray = [];\n    for (const [key, value] of mappingLocalValue) {\n      let keyArg;\n      if (typeof key === 'string') {\n        // Key is a string.\n        keyArg = {\n          value: key\n        };\n      } else {\n        // Key is a serialized value.\n        keyArg = await this.deserializeForCdp(key);\n      }\n      const valueArg = await this.deserializeForCdp(value);\n      keyValueArray.push(keyArg);\n      keyValueArray.push(valueArg);\n    }\n    return keyValueArray;\n  }\n  async #flattenValueList(listLocalValue) {\n    return await Promise.all(listLocalValue.map(localValue => this.deserializeForCdp(localValue)));\n  }\n  async #serializeCdpExceptionDetails(cdpExceptionDetails, lineOffset, resultOwnership) {\n    const callFrames = cdpExceptionDetails.stackTrace?.callFrames.map(frame => ({\n      url: frame.url,\n      functionName: frame.functionName,\n      lineNumber: frame.lineNumber - lineOffset,\n      columnNumber: frame.columnNumber\n    })) ?? [];\n    // Exception should always be there.\n    const exception = cdpExceptionDetails.exception;\n    return {\n      exception: await this.serializeCdpObject(exception, resultOwnership),\n      columnNumber: cdpExceptionDetails.columnNumber,\n      lineNumber: cdpExceptionDetails.lineNumber - lineOffset,\n      stackTrace: {\n        callFrames\n      },\n      text: (await this.stringifyObject(exception)) || cdpExceptionDetails.text\n    };\n  }\n  async callFunction(functionDeclaration, thisLocalValue, argumentsLocalValues, awaitPromise, resultOwnership, serializationOptions, userActivation = false) {\n    const callFunctionAndSerializeScript = `(...args) => {\n      function callFunction(f, args) {\n        const deserializedThis = args.shift();\n        const deserializedArgs = args;\n        return f.apply(deserializedThis, deserializedArgs);\n      }\n      return callFunction((\n        ${functionDeclaration}\n      ), args);\n    }`;\n    const thisAndArgumentsList = [await this.deserializeForCdp(thisLocalValue), ...(await Promise.all(argumentsLocalValues.map(async argumentLocalValue => await this.deserializeForCdp(argumentLocalValue))))];\n    let cdpCallFunctionResult;\n    try {\n      cdpCallFunctionResult = await this.cdpClient.sendCommand('Runtime.callFunctionOn', {\n        functionDeclaration: callFunctionAndSerializeScript,\n        awaitPromise,\n        arguments: thisAndArgumentsList,\n        serializationOptions: Realm.#getSerializationOptions(\"deep\" /* Protocol.Runtime.SerializationOptionsSerialization.Deep */, serializationOptions),\n        executionContextId: this.executionContextId,\n        userGesture: userActivation\n      });\n    } catch (error) {\n      // Heuristic to determine if the problem is in the argument.\n      // The check can be done on the `deserialization` step, but this approach\n      // helps to save round-trips.\n      if (error.code === -32000 /* CdpErrorConstants.GENERIC_ERROR */ && ['Could not find object with given id', 'Argument should belong to the same JavaScript world as target object', 'Invalid remote object id'].includes(error.message)) {\n        throw new protocol_js_1.NoSuchHandleException('Handle was not found.');\n      }\n      throw error;\n    }\n    if (cdpCallFunctionResult.exceptionDetails) {\n      return await this.#getExceptionResult(cdpCallFunctionResult.exceptionDetails, 1, resultOwnership);\n    }\n    return {\n      type: 'success',\n      result: this.cdpToBidiValue(cdpCallFunctionResult, resultOwnership),\n      realm: this.realmId\n    };\n  }\n  async deserializeForCdp(localValue) {\n    if ('handle' in localValue && localValue.handle) {\n      return {\n        objectId: localValue.handle\n      };\n      // We tried to find a handle value but failed\n      // This allows us to have exhaustive switch on `localValue.type`\n    } else if ('handle' in localValue || 'sharedId' in localValue) {\n      throw new protocol_js_1.NoSuchHandleException('Handle was not found.');\n    }\n    switch (localValue.type) {\n      case 'undefined':\n        return {\n          unserializableValue: 'undefined'\n        };\n      case 'null':\n        return {\n          unserializableValue: 'null'\n        };\n      case 'string':\n        return {\n          value: localValue.value\n        };\n      case 'number':\n        if (localValue.value === 'NaN') {\n          return {\n            unserializableValue: 'NaN'\n          };\n        } else if (localValue.value === '-0') {\n          return {\n            unserializableValue: '-0'\n          };\n        } else if (localValue.value === 'Infinity') {\n          return {\n            unserializableValue: 'Infinity'\n          };\n        } else if (localValue.value === '-Infinity') {\n          return {\n            unserializableValue: '-Infinity'\n          };\n        }\n        return {\n          value: localValue.value\n        };\n      case 'boolean':\n        return {\n          value: Boolean(localValue.value)\n        };\n      case 'bigint':\n        return {\n          unserializableValue: `BigInt(${JSON.stringify(localValue.value)})`\n        };\n      case 'date':\n        return {\n          unserializableValue: `new Date(Date.parse(${JSON.stringify(localValue.value)}))`\n        };\n      case 'regexp':\n        return {\n          unserializableValue: `new RegExp(${JSON.stringify(localValue.value.pattern)}, ${JSON.stringify(localValue.value.flags)})`\n        };\n      case 'map':\n        {\n          // TODO: If none of the nested keys and values has a remote\n          // reference, serialize to `unserializableValue` without CDP roundtrip.\n          const keyValueArray = await this.#flattenKeyValuePairs(localValue.value);\n          const {\n            result\n          } = await this.cdpClient.sendCommand('Runtime.callFunctionOn', {\n            functionDeclaration: String((...args) => {\n              const result = new Map();\n              for (let i = 0; i < args.length; i += 2) {\n                result.set(args[i], args[i + 1]);\n              }\n              return result;\n            }),\n            awaitPromise: false,\n            arguments: keyValueArray,\n            returnByValue: false,\n            executionContextId: this.executionContextId\n          });\n          // TODO(#375): Release `result.objectId` after using.\n          return {\n            objectId: result.objectId\n          };\n        }\n      case 'object':\n        {\n          // TODO: If none of the nested keys and values has a remote\n          // reference, serialize to `unserializableValue` without CDP roundtrip.\n          const keyValueArray = await this.#flattenKeyValuePairs(localValue.value);\n          const {\n            result\n          } = await this.cdpClient.sendCommand('Runtime.callFunctionOn', {\n            functionDeclaration: String((...args) => {\n              const result = {};\n              for (let i = 0; i < args.length; i += 2) {\n                // Key should be either `string`, `number`, or `symbol`.\n                const key = args[i];\n                result[key] = args[i + 1];\n              }\n              return result;\n            }),\n            awaitPromise: false,\n            arguments: keyValueArray,\n            returnByValue: false,\n            executionContextId: this.executionContextId\n          });\n          // TODO(#375): Release `result.objectId` after using.\n          return {\n            objectId: result.objectId\n          };\n        }\n      case 'array':\n        {\n          // TODO: If none of the nested items has a remote reference,\n          // serialize to `unserializableValue` without CDP roundtrip.\n          const args = await this.#flattenValueList(localValue.value);\n          const {\n            result\n          } = await this.cdpClient.sendCommand('Runtime.callFunctionOn', {\n            functionDeclaration: String((...args) => args),\n            awaitPromise: false,\n            arguments: args,\n            returnByValue: false,\n            executionContextId: this.executionContextId\n          });\n          // TODO(#375): Release `result.objectId` after using.\n          return {\n            objectId: result.objectId\n          };\n        }\n      case 'set':\n        {\n          // TODO: if none of the nested items has a remote reference,\n          // serialize to `unserializableValue` without CDP roundtrip.\n          const args = await this.#flattenValueList(localValue.value);\n          const {\n            result\n          } = await this.cdpClient.sendCommand('Runtime.callFunctionOn', {\n            functionDeclaration: String((...args) => new Set(args)),\n            awaitPromise: false,\n            arguments: args,\n            returnByValue: false,\n            executionContextId: this.executionContextId\n          });\n          // TODO(#375): Release `result.objectId` after using.\n          return {\n            objectId: result.objectId\n          };\n        }\n      case 'channel':\n        {\n          const channelProxy = new ChannelProxy_js_1.ChannelProxy(localValue.value, this.#logger);\n          const channelProxySendMessageHandle = await channelProxy.init(this, this.#eventManager);\n          return {\n            objectId: channelProxySendMessageHandle\n          };\n        }\n      // TODO(#375): Dispose of nested objects.\n    }\n    // Intentionally outside to handle unknown types\n    throw new Error(`Value ${JSON.stringify(localValue)} is not deserializable.`);\n  }\n  async #getExceptionResult(exceptionDetails, lineOffset, resultOwnership) {\n    return {\n      exceptionDetails: await this.#serializeCdpExceptionDetails(exceptionDetails, lineOffset, resultOwnership),\n      realm: this.realmId,\n      type: 'exception'\n    };\n  }\n  static #getSerializationOptions(serialization, serializationOptions) {\n    return {\n      serialization,\n      additionalParameters: Realm.#getAdditionalSerializationParameters(serializationOptions),\n      ...Realm.#getMaxObjectDepth(serializationOptions)\n    };\n  }\n  static #getAdditionalSerializationParameters(serializationOptions) {\n    const additionalParameters = {};\n    if (serializationOptions.maxDomDepth !== undefined) {\n      additionalParameters['maxNodeDepth'] = serializationOptions.maxDomDepth === null ? 1000 : serializationOptions.maxDomDepth;\n    }\n    if (serializationOptions.includeShadowTree !== undefined) {\n      additionalParameters['includeShadowTree'] = serializationOptions.includeShadowTree;\n    }\n    return additionalParameters;\n  }\n  static #getMaxObjectDepth(serializationOptions) {\n    return serializationOptions.maxObjectDepth === undefined || serializationOptions.maxObjectDepth === null ? {} : {\n      maxDepth: serializationOptions.maxObjectDepth\n    };\n  }\n  async #releaseObject(handle) {\n    try {\n      await this.cdpClient.sendCommand('Runtime.releaseObject', {\n        objectId: handle\n      });\n    } catch (error) {\n      // Heuristic to determine if the problem is in the unknown handler.\n      // Ignore the error if so.\n      if (!(error.code === -32000 /* CdpErrorConstants.GENERIC_ERROR */ && error.message === 'Invalid remote object id')) {\n        throw error;\n      }\n    }\n  }\n  async disown(handle) {\n    // Disowning an object from different realm does nothing.\n    if (this.#realmStorage.knownHandlesToRealmMap.get(handle) !== this.realmId) {\n      return;\n    }\n    await this.#releaseObject(handle);\n    this.#realmStorage.knownHandlesToRealmMap.delete(handle);\n  }\n  dispose() {\n    this.#registerEvent({\n      type: 'event',\n      method: protocol_js_1.ChromiumBidi.Script.EventNames.RealmDestroyed,\n      params: {\n        realm: this.realmId\n      }\n    });\n  }\n}\nexports.Realm = Realm;","map":{"version":3,"names":["protocol_js_1","require","log_js_1","uuid_js_1","ChannelProxy_js_1","Realm","cdpClient","eventManager","executionContextId","logger","origin","realmId","realmStorage","constructor","addRealm","cdpToBidiValue","cdpValue","resultOwnership","bidiValue","serializeForBiDi","result","deepSerializedValue","Map","objectId","handle","knownHandlesToRealmMap","set","releaseObject","catch","error","LogType","debugError","type","subtype","internalIdMap","Object","hasOwn","weakLocalObjectReference","has","uuidv4","internalId","get","value","undefined","includes","i","source","realm","baseInfo","evaluate","expression","awaitPromise","serializationOptions","userActivation","cdpEvaluateResult","sendCommand","contextId","getSerializationOptions","userGesture","exceptionDetails","getExceptionResult","registerEvent","#registerEvent","event","associatedBrowsingContexts","length","browsingContext","id","initialize","method","ChromiumBidi","Script","EventNames","RealmCreated","params","realmInfo","serializeCdpObject","cdpRemoteObject","argument","cdpRemoteObjectToCallArgument","functionDeclaration","String","remoteObject","arguments","serialization","#cdpRemoteObjectToCallArgument","unserializableValue","stringifyObject","returnByValue","flattenKeyValuePairs","#flattenKeyValuePairs","mappingLocalValue","keyValueArray","key","keyArg","deserializeForCdp","valueArg","push","flattenValueList","#flattenValueList","listLocalValue","Promise","all","map","localValue","serializeCdpExceptionDetails","#serializeCdpExceptionDetails","cdpExceptionDetails","lineOffset","callFrames","stackTrace","frame","url","functionName","lineNumber","columnNumber","exception","text","callFunction","thisLocalValue","argumentsLocalValues","callFunctionAndSerializeScript","thisAndArgumentsList","argumentLocalValue","cdpCallFunctionResult","code","message","NoSuchHandleException","Boolean","JSON","stringify","pattern","flags","args","Set","channelProxy","ChannelProxy","channelProxySendMessageHandle","init","Error","#getExceptionResult","#getSerializationOptions","additionalParameters","getAdditionalSerializationParameters","getMaxObjectDepth","#getAdditionalSerializationParameters","maxDomDepth","includeShadowTree","#getMaxObjectDepth","maxObjectDepth","maxDepth","#releaseObject","disown","delete","dispose","RealmDestroyed","exports"],"sources":["../../../../../src/bidiMapper/domains/script/Realm.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}