{"ast":null,"code":"// // src/components/ScraperForm.js\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// const ScraperForm = () => {\n//   const [urls, setUrls] = useState('');\n//   const [selectors, setSelectors] = useState('');\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//         const response = await axios.post('http://localhost:3011/scrape', {\n//             urls: urls.split(',').map((url) => url.trim()),\n//             selectors: selectors.split(',').map((selector) => selector.trim()),\n//           });\n//       console.log(response.data); \n//     } catch (error) {\n//       console.error('Error:', error);\n//     }\n//   };\n// //save in stae and print as map\n//   return (\n//      <form onSubmit={handleSubmit}>\n//       <label>\n//         Enter URLs (comma-separated):\n//         <input type=\"text\" value={urls} onChange={(e) => setUrls(e.target.value)} />\n//       </label>\n//       <br />\n//       <label>\n//         Enter jQuery selectors (comma-separated):\n//         <input type=\"text\" value={selectors} onChange={(e) => setSelectors(e.target.value)} />\n//       </label>\n//       <br />\n//       <button type=\"submit\">Submit</button>\n//     </form>\n//   );\n// };\n// export default ScraperForm;\n// --------------------------------\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// const ScraperForm = () => {\n//   const [urls, setUrls] = useState('');\n//   const [selectors, setSelectors] = useState('');\n//   const [output, setOutput] = useState('');\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post('http://localhost:3015/scrape', {\n//         urls: urls.split(',').map((url) => url.trim()),\n//         selectors: selectors.split(',').map((selector) => selector.trim()),\n//       });\n//       console.log(response.data);\n//       // Set the output in the state to be displayed on the frontend\n//       setOutput(response.data.tableString);\n//     } catch (error) {\n//       console.error('Error:', error);\n//     }\n//   };\n//   return (\n//     <div>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Enter URLs (comma-separated):\n//           <input type=\"text\" value={urls} onChange={(e) => setUrls(e.target.value)} />\n//         </label>\n//         <br />\n//         <label>\n//           Enter jQuery selectors (comma-separated):\n//           <input type=\"text\" value={selectors} onChange={(e) => setSelectors(e.target.value)} />\n//         </label>\n//         <br />\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//       {/* Display the output on the frontend */}\n//       <div>\n//         <h2>Output:</h2>\n//         <pre>{output}</pre>\n//       </div>\n//     </div>\n//   );\n// };\n// export default ScraperForm;\n// ---------------------------------------------------------perfect\nimport React,{useState,useRef}from'react';import axios from'axios';import'./form.css';import*as html2pdf from'html2pdf.js';import{BASE_URL}from'../helper';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ProgressBar=_ref=>{let{activeFieldset}=_ref;return/*#__PURE__*/_jsxs(\"ul\",{id:\"progressbar\",children:[/*#__PURE__*/_jsx(\"li\",{className:activeFieldset===1?'active':'',children:\"URL EXTRACTION\"}),/*#__PURE__*/_jsx(\"li\",{className:activeFieldset===2?'active':'',children:\"EXTRACTED URLS\"}),/*#__PURE__*/_jsx(\"li\",{className:activeFieldset===3?'active':'',children:\"SCRAPING\"}),/*#__PURE__*/_jsx(\"li\",{className:activeFieldset===4?'active':'',children:\"EXTRACTED DATA\"})]});};const Fieldset=_ref2=>{let{title,subtitle,children,style}=_ref2;return/*#__PURE__*/_jsxs(\"fieldset\",{style:style,children:[/*#__PURE__*/_jsx(\"h2\",{className:\"fs-title\",children:title}),/*#__PURE__*/_jsx(\"h3\",{className:\"fs-subtitle\",children:subtitle}),children]});};const ScraperForm=()=>{const[activeFieldset,setActiveFieldset]=useState(1);const[formData,setFormData]=useState({email:'',text2:'',text3:''});const[urls,setUrls]=useState('');const[selectors,setSelectors]=useState('');const[output,setOutput]=useState('');const[showUrlWarning,setShowUrlWarning]=useState(false);const[generatedUrls,setGeneratedUrls]=useState('');const[preRef,setPreRef]=useState(null);const isUrlValid=userInput=>{const res=userInput.match(/(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)/g);return res!==null;};const handleDownloadPDF=()=>{const element=preRef.current;const pdfOptions={margin:10,filename:'output.pdf',image:{type:'jpeg',quality:0.98},html2canvas:{scale:2},jsPDF:{unit:'mm',format:'a4',orientation:'portrait'}};html2pdf(element,pdfOptions);};const downloadurlPDF=async()=>{const element=document.querySelector('.url-list');const pdfOptions={margin:10,filename:'output1.pdf',image:{type:'jpeg',quality:0.98},html2canvas:{scale:2},jsPDF:{unit:'mm',format:'a4',orientation:'portrait'}};html2pdf().from(element).set(pdfOptions).save();};const handleStart=async e=>{e.preventDefault();try{const response=await axios.post(\"\".concat(BASE_URL,\"/scraper\"),{url:formData.email});const listContent=response.data.urls.join('\\n');setGeneratedUrls(listContent);handleNext();}catch(error){console.error('Error generating list of URLs:',error);}};const handleInputChange=e=>{const{name,value}=e.target;if(name==='email'){setShowUrlWarning(!isUrlValid(value));}setFormData(prevData=>({...prevData,[name]:value}));};const handleNext=()=>{setActiveFieldset(prevActiveFieldset=>prevActiveFieldset+1);};const handlePrevious=()=>{setActiveFieldset(prevActiveFieldset=>prevActiveFieldset-1);};const handleSubmit2=async e=>{e.preventDefault();try{const response=await axios.post(\"\".concat(BASE_URL,\"/scrape\"),{urls:urls.split(',').map(url=>url.trim()),selectors:selectors.split(',').map(selector=>selector.trim())},{timeout:5000});console.log(response.data+'\\n');setOutput(response.data.tableString);handleNext();}catch(error){console.error('Error:',error);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(ProgressBar,{activeFieldset:activeFieldset}),/*#__PURE__*/_jsxs(\"form\",{id:\"msform\",onSubmit:handleSubmit2,children:[/*#__PURE__*/_jsxs(Fieldset,{style:{display:activeFieldset===1?'block':'none'},children:[/*#__PURE__*/_jsx(\"h2\",{className:\"fs-title\",children:\"Provide the Main URL\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"fs-subtitle\",children:\"This step will provide the list of all URLS\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"email\",placeholder:\"Main URL\",value:formData.email,onChange:handleInputChange}),showUrlWarning&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:\"Please enter a valid URL.\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"next action-button\",onClick:handleStart,children:\"Extract\"})]}),/*#__PURE__*/_jsxs(Fieldset,{style:{display:activeFieldset===2?'block':'none'},children:[/*#__PURE__*/_jsx(\"h2\",{className:\"fs-title\",children:\"EXTRACTED URLS\"}),/*#__PURE__*/_jsx(\"div\",{className:\"url-list\",style:{maxHeight:'300px',maxWidth:'500px',overflow:'auto',margin:'0 auto'},children:/*#__PURE__*/_jsx(\"pre\",{ref:ref=>setPreRef(ref),style:{whiteSpace:'pre-wrap',wordWrap:'break-word',maxHeight:'500px',overflow:'auto'},children:generatedUrls.split('\\n').map((url,index)=>/*#__PURE__*/_jsx(\"a\",{href:url,target:\"_blank\",rel:\"noopener noreferrer\",children:url},index))})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"previous action-button\",onClick:handlePrevious,children:\"Previous\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"next action-button\",onClick:downloadurlPDF,children:\"Download\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"next action-button\",onClick:handleNext,children:\"Next\"})]}),/*#__PURE__*/_jsxs(Fieldset,{style:{display:activeFieldset===3?'block':'none'},children:[/*#__PURE__*/_jsx(\"h2\",{className:\"fs-title\",children:\"SCRAPING STAGE\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"fs-subtitle\",children:\"Enter the URL and the selector that you want to scrape\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:urls,placeholder:\"Enter URL to scrape\",onChange:e=>{setUrls(e.target.value);setShowUrlWarning(!isUrlValid(e.target.value));}}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Selectors\",value:selectors,onChange:e=>setSelectors(e.target.value)}),showUrlWarning&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:\"Please enter a valid URL.\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"previous action-button\",onClick:handlePrevious,children:\"Previous\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit action-button\",onClick:handleSubmit2,disabled:!urls||!selectors||showUrlWarning,children:\"Submit\"})]}),/*#__PURE__*/_jsxs(Fieldset,{style:{display:activeFieldset===4?'block':'none'},children:[/*#__PURE__*/_jsx(\"h2\",{className:\"fs-title\",children:\"EXTRACTED DATA\"}),/*#__PURE__*/_jsx(\"div\",{className:\"result\",style:{maxHeight:'300px',maxWidth:'800px',overflow:'auto',margin:'0 auto'},children:/*#__PURE__*/_jsx(\"pre\",{ref:preRef,children:output})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"previous action-button\",onClick:handlePrevious,children:\"Previous\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"next action-button\",onClick:handleDownloadPDF,disabled:!output.trim(),children:\"Download\"})]})]})]});};export default ScraperForm;//..................................................","map":{"version":3,"names":["React","useState","useRef","axios","html2pdf","BASE_URL","jsx","_jsx","jsxs","_jsxs","ProgressBar","_ref","activeFieldset","id","children","className","Fieldset","_ref2","title","subtitle","style","ScraperForm","setActiveFieldset","formData","setFormData","email","text2","text3","urls","setUrls","selectors","setSelectors","output","setOutput","showUrlWarning","setShowUrlWarning","generatedUrls","setGeneratedUrls","preRef","setPreRef","isUrlValid","userInput","res","match","handleDownloadPDF","element","current","pdfOptions","margin","filename","image","type","quality","html2canvas","scale","jsPDF","unit","format","orientation","downloadurlPDF","document","querySelector","from","set","save","handleStart","e","preventDefault","response","post","concat","url","listContent","data","join","handleNext","error","console","handleInputChange","name","value","target","prevData","prevActiveFieldset","handlePrevious","handleSubmit2","split","map","trim","selector","timeout","log","tableString","onSubmit","display","placeholder","onChange","color","onClick","maxHeight","maxWidth","overflow","ref","whiteSpace","wordWrap","index","href","rel","disabled"],"sources":["C:/Users/PC/tryg/front/src/components/ScraperForm.js"],"sourcesContent":["// // src/components/ScraperForm.js\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const ScraperForm = () => {\r\n//   const [urls, setUrls] = useState('');\r\n//   const [selectors, setSelectors] = useState('');\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     try {\r\n//         const response = await axios.post('http://localhost:3011/scrape', {\r\n//             urls: urls.split(',').map((url) => url.trim()),\r\n//             selectors: selectors.split(',').map((selector) => selector.trim()),\r\n//           });\r\n\r\n//       console.log(response.data); \r\n//     } catch (error) {\r\n//       console.error('Error:', error);\r\n//     }\r\n//   };\r\n// //save in stae and print as map\r\n\r\n//   return (\r\n//      <form onSubmit={handleSubmit}>\r\n//       <label>\r\n//         Enter URLs (comma-separated):\r\n//         <input type=\"text\" value={urls} onChange={(e) => setUrls(e.target.value)} />\r\n//       </label>\r\n//       <br />\r\n//       <label>\r\n//         Enter jQuery selectors (comma-separated):\r\n//         <input type=\"text\" value={selectors} onChange={(e) => setSelectors(e.target.value)} />\r\n//       </label>\r\n//       <br />\r\n//       <button type=\"submit\">Submit</button>\r\n  \r\n//     </form>\r\n\r\n//   );\r\n// };\r\n\r\n// export default ScraperForm;\r\n\r\n\r\n// --------------------------------\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const ScraperForm = () => {\r\n//   const [urls, setUrls] = useState('');\r\n//   const [selectors, setSelectors] = useState('');\r\n//   const [output, setOutput] = useState('');\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     try {\r\n//       const response = await axios.post('http://localhost:3015/scrape', {\r\n//         urls: urls.split(',').map((url) => url.trim()),\r\n//         selectors: selectors.split(',').map((selector) => selector.trim()),\r\n//       });\r\n\r\n//       console.log(response.data);\r\n\r\n//       // Set the output in the state to be displayed on the frontend\r\n//       setOutput(response.data.tableString);\r\n//     } catch (error) {\r\n//       console.error('Error:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <label>\r\n//           Enter URLs (comma-separated):\r\n//           <input type=\"text\" value={urls} onChange={(e) => setUrls(e.target.value)} />\r\n//         </label>\r\n//         <br />\r\n//         <label>\r\n//           Enter jQuery selectors (comma-separated):\r\n//           <input type=\"text\" value={selectors} onChange={(e) => setSelectors(e.target.value)} />\r\n//         </label>\r\n//         <br />\r\n//         <button type=\"submit\">Submit</button>\r\n//       </form>\r\n\r\n//       {/* Display the output on the frontend */}\r\n//       <div>\r\n//         <h2>Output:</h2>\r\n//         <pre>{output}</pre>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ScraperForm;\r\n\r\n\r\n\r\n// ---------------------------------------------------------perfect\r\n\r\n\r\n\r\n\r\nimport React, { useState, useRef} from 'react';\r\nimport axios from 'axios';\r\nimport './form.css';\r\nimport * as html2pdf from 'html2pdf.js';\r\nimport {BASE_URL} from '../helper'\r\n\r\nconst ProgressBar = ({ activeFieldset }) => (\r\n    <ul id=\"progressbar\">\r\n      <li className={activeFieldset === 1 ? 'active' : ''}>URL EXTRACTION</li>\r\n      <li className={activeFieldset === 2 ? 'active' : ''}>EXTRACTED URLS</li>\r\n      <li className={activeFieldset === 3 ? 'active' : ''}>SCRAPING</li>\r\n      <li className={activeFieldset === 4 ? 'active' : ''}>EXTRACTED DATA</li>\r\n    </ul>\r\n  );\r\n\r\n\r\n  const Fieldset = ({ title, subtitle, children, style }) => (\r\n    <fieldset style={style}>\r\n      <h2 className=\"fs-title\">{title}</h2>\r\n      <h3 className=\"fs-subtitle\">{subtitle}</h3>\r\n      {children}\r\n    </fieldset>\r\n  );\r\n\r\nconst ScraperForm = () => {\r\n\r\n    const [activeFieldset, setActiveFieldset] = useState(1);\r\n    const [formData, setFormData] = useState({\r\n      email: '',\r\n      text2: '',\r\n      text3: '',\r\n    });\r\n\r\n\r\n  const [urls, setUrls] = useState('');\r\n  const [selectors, setSelectors] = useState('');\r\n  const [output, setOutput] = useState('');\r\n  const [showUrlWarning, setShowUrlWarning] = useState(false);\r\n\r\n  const [generatedUrls, setGeneratedUrls] = useState('');\r\n\r\n  const [preRef, setPreRef] = useState(null);\r\n\r\n\r\n  const isUrlValid = (userInput) => {\r\n    const res = userInput.match(/(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)/g);\r\n    return res !== null;\r\n  };\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  const handleDownloadPDF = () => {\r\n    const element = preRef.current; \r\n    const pdfOptions = {\r\n      margin: 10,\r\n      filename: 'output.pdf',\r\n      image: { type: 'jpeg', quality: 0.98 },\r\n      html2canvas: { scale: 2 },\r\n      jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' },\r\n    };\r\n\r\n    html2pdf(element, pdfOptions);\r\n  };\r\n\r\n\r\n\r\n  const downloadurlPDF = async () => {   \r\n    const element = document.querySelector('.url-list');\r\n    const pdfOptions = {\r\n      margin: 10,\r\n      filename: 'output1.pdf',\r\n      image: { type: 'jpeg', quality: 0.98 },\r\n      html2canvas: { scale: 2 },\r\n      jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' },\r\n       \r\n    };\r\n    html2pdf().from(element).set(pdfOptions).save();\r\n   \r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleStart = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    try {\r\n      const response = await axios.post(`${BASE_URL}/scraper`, { url: formData.email });\r\n      \r\n      const listContent = response.data.urls.join('\\n');\r\n      \r\n      setGeneratedUrls(listContent);\r\n      handleNext();\r\n    } catch (error) {\r\n      console.error('Error generating list of URLs:', error);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === 'email') {\r\n      setShowUrlWarning(!isUrlValid(value));\r\n     \r\n    }\r\n    \r\n    setFormData((prevData) => ({\r\n        ...prevData,\r\n        [name]: value,\r\n      }));\r\n\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setActiveFieldset((prevActiveFieldset) => prevActiveFieldset + 1);\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    setActiveFieldset((prevActiveFieldset) => prevActiveFieldset - 1);\r\n  };\r\n\r\n\r\n\r\n\r\n  const handleSubmit2 = async (e) => {\r\n    e.preventDefault();\r\n\r\n \r\n    try {\r\n      const response = await axios.post(`${BASE_URL}/scrape`, {\r\n        urls: urls.split(',').map((url) => url.trim()),\r\n        selectors: selectors.split(',').map((selector) => selector.trim()),\r\n      }, {\r\n        timeout: 5000, \r\n      });\r\n\r\n      console.log(response.data + '\\n');\r\n\r\n \r\n      setOutput(response.data.tableString);\r\n      handleNext();\r\n\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n   \r\n  };\r\n\r\n  return (\r\n\r\n  <div>\r\n    <ProgressBar activeFieldset={activeFieldset} />\r\n      <form id=\"msform\" onSubmit={handleSubmit2}>\r\n\r\n        <Fieldset style={{ display: activeFieldset === 1 ? 'block' : 'none' }}>\r\n        <h2 className=\"fs-title\">Provide the Main URL</h2>\r\n \t\t    <h3 className=\"fs-subtitle\">This step will provide the list of all URLS</h3>\r\n             <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          placeholder=\"Main URL\"\r\n          value={formData.email}\r\n          onChange={handleInputChange}\r\n        />\r\n        {showUrlWarning && <p style={{ color: 'red' }}>Please enter a valid URL.</p>}\r\n\r\n        \r\n        <button type=\"button\" className=\"next action-button\" onClick={handleStart}>\r\n        Extract\r\n        </button>\r\n        \r\n   \r\n        </Fieldset>\r\n        <Fieldset style={{ display: activeFieldset === 2 ? 'block' : 'none' }}>\r\n        <h2 className=\"fs-title\">EXTRACTED URLS</h2>\r\n        \r\n\r\n\r\n\r\n        <div className=\"url-list\" style={{maxHeight: '300px', maxWidth:'500px', overflow: 'auto', margin: '0 auto'}}>\r\n        <pre\r\n          ref={(ref) => setPreRef(ref)}\r\n          style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word', maxHeight: '500px', overflow: 'auto' }}\r\n        >\r\n          {generatedUrls.split('\\n').map((url, index) => (\r\n            <a key={index} href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {url}\r\n            </a>\r\n          ))}\r\n        </pre>\r\n      </div>\r\n    \r\n\r\n\r\n\r\n        <button type=\"button\" className=\"previous action-button\" onClick={handlePrevious} >\r\n        Previous\r\n        </button>\r\n        <button type=\"button\" className=\"next action-button\"  onClick={downloadurlPDF}>\r\n           \r\n        Download\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"next action-button\"\r\n          onClick={handleNext}\r\n        >\r\n        Next\r\n        </button>\r\n        </Fieldset>\r\n       <Fieldset style={{ display: activeFieldset === 3 ? 'block' : 'none' }}>\r\n       <h2 className=\"fs-title\">SCRAPING STAGE</h2>\r\n        <h3 className=\"fs-subtitle\">Enter the URL and the selector that you want to scrape</h3>\r\n        <input\r\n        type=\"text\"\r\n        value={urls}\r\n        placeholder=\"Enter URL to scrape\"\r\n        onChange={(e) => {\r\n        setUrls(e.target.value);\r\n        setShowUrlWarning(!isUrlValid(e.target.value));\r\n        }}\r\n      />\r\n        <input type=\"text\" placeholder=\"Selectors\" value={selectors} onChange={(e) => setSelectors(e.target.value)} />\r\n        {showUrlWarning && <p style={{ color: 'red' }}>Please enter a valid URL.</p>}\r\n        <button type=\"button\" className=\"previous action-button\" onClick={handlePrevious} >\r\n        Previous\r\n        </button>\r\n        <button\r\n        type=\"submit\"\r\n        className=\"submit action-button\"\r\n        onClick={handleSubmit2}\r\n        disabled={!urls || !selectors || showUrlWarning}>\r\n        Submit\r\n        </button>\r\n        </Fieldset> \r\n\r\n     \r\n        <Fieldset style={{ display: activeFieldset === 4 ? 'block' : 'none' }}>\r\n        <h2 className=\"fs-title\">EXTRACTED DATA</h2>\r\n        <div className=\"result\" style={{maxHeight: '300px',  maxWidth:'800px', overflow: 'auto', margin: '0 auto'}} >\r\n          <pre ref={preRef}>{output}</pre>\r\n        </div>\r\n        <button type=\"button\" className=\"previous action-button\" onClick={handlePrevious}>\r\n          Previous\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"next action-button\"\r\n          onClick={handleDownloadPDF}\r\n            disabled={!output.trim()}\r\n        >\r\n          Download\r\n        </button>\r\n      </Fieldset>\r\n\r\n      \r\n\r\n    </form>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default ScraperForm;\r\n\r\n\r\n//..................................................\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}