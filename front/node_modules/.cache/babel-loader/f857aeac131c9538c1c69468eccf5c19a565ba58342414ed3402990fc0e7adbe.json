{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __runInitializers = this && this.__runInitializers || function (thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n    value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\nvar __esDecorate = this && this.__esDecorate || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) {\n    if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\");\n    return f;\n  }\n  var kind = contextIn.kind,\n    key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _,\n    done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n    var context = {};\n    for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n    for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n    context.addInitializer = function (f) {\n      if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n      extraInitializers.push(accept(f || null));\n    };\n    var result = (0, decorators[i])(kind === \"accessor\" ? {\n      get: descriptor.get,\n      set: descriptor.set\n    } : descriptor[key], context);\n    if (kind === \"accessor\") {\n      if (result === void 0) continue;\n      if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n      if (_ = accept(result.get)) descriptor.get = _;\n      if (_ = accept(result.set)) descriptor.set = _;\n      if (_ = accept(result.init)) initializers.unshift(_);\n    } else if (_ = accept(result)) {\n      if (kind === \"field\") initializers.unshift(_);else descriptor[key] = _;\n    }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\nvar __setFunctionName = this && this.__setFunctionName || function (f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", {\n    configurable: true,\n    value: prefix ? \"\".concat(prefix, \" \", name) : name\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BidiFrame = void 0;\nconst rxjs_js_1 = require(\"../../third_party/rxjs/rxjs.js\");\nconst Frame_js_1 = require(\"../api/Frame.js\");\nconst ConsoleMessage_js_1 = require(\"../common/ConsoleMessage.js\");\nconst Errors_js_1 = require(\"../common/Errors.js\");\nconst util_js_1 = require(\"../common/util.js\");\nconst CDPSession_js_1 = require(\"./CDPSession.js\");\nconst Deserializer_js_1 = require(\"./Deserializer.js\");\nconst Dialog_js_1 = require(\"./Dialog.js\");\nconst ExposedFunction_js_1 = require(\"./ExposedFunction.js\");\nconst HTTPRequest_js_1 = require(\"./HTTPRequest.js\");\nconst JSHandle_js_1 = require(\"./JSHandle.js\");\nconst Realm_js_1 = require(\"./Realm.js\");\nconst util_js_2 = require(\"./util.js\");\nconst WebWorker_js_1 = require(\"./WebWorker.js\");\nlet BidiFrame = (() => {\n  var _a;\n  let _classSuper = Frame_js_1.Frame;\n  let _instanceExtraInitializers = [];\n  let _goto_decorators;\n  let _setContent_decorators;\n  let _waitForNavigation_decorators;\n  let _private_waitForLoad$_decorators;\n  let _private_waitForLoad$_descriptor;\n  let _private_waitForNetworkIdle$_decorators;\n  let _private_waitForNetworkIdle$_descriptor;\n  let _setFiles_decorators;\n  return class BidiFrame extends _classSuper {\n    static {\n      const _metadata = typeof Symbol === \"function\" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n      _goto_decorators = [Frame_js_1.throwIfDetached];\n      _setContent_decorators = [Frame_js_1.throwIfDetached];\n      _waitForNavigation_decorators = [Frame_js_1.throwIfDetached];\n      _private_waitForLoad$_decorators = [Frame_js_1.throwIfDetached];\n      _private_waitForNetworkIdle$_decorators = [Frame_js_1.throwIfDetached];\n      _setFiles_decorators = [Frame_js_1.throwIfDetached];\n      __esDecorate(this, null, _goto_decorators, {\n        kind: \"method\",\n        name: \"goto\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"goto\" in obj,\n          get: obj => obj.goto\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _setContent_decorators, {\n        kind: \"method\",\n        name: \"setContent\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"setContent\" in obj,\n          get: obj => obj.setContent\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _waitForNavigation_decorators, {\n        kind: \"method\",\n        name: \"waitForNavigation\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"waitForNavigation\" in obj,\n          get: obj => obj.waitForNavigation\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, _private_waitForLoad$_descriptor = {\n        value: __setFunctionName(function (options = {}) {\n          let {\n            waitUntil = 'load'\n          } = options;\n          const {\n            timeout: ms = this.timeoutSettings.navigationTimeout()\n          } = options;\n          if (!Array.isArray(waitUntil)) {\n            waitUntil = [waitUntil];\n          }\n          const events = new Set();\n          for (const lifecycleEvent of waitUntil) {\n            switch (lifecycleEvent) {\n              case 'load':\n                {\n                  events.add('load');\n                  break;\n                }\n              case 'domcontentloaded':\n                {\n                  events.add('DOMContentLoaded');\n                  break;\n                }\n            }\n          }\n          if (events.size === 0) {\n            return (0, rxjs_js_1.of)(undefined);\n          }\n          return (0, rxjs_js_1.combineLatest)([...events].map(event => {\n            return (0, util_js_1.fromEmitterEvent)(this.browsingContext, event);\n          })).pipe((0, rxjs_js_1.map)(() => {}), (0, rxjs_js_1.first)(), (0, rxjs_js_1.raceWith)((0, util_js_1.timeout)(ms), this.#detached$().pipe((0, rxjs_js_1.map)(() => {\n            throw new Error('Frame detached.');\n          }))));\n        }, \"#waitForLoad$\")\n      }, _private_waitForLoad$_decorators, {\n        kind: \"method\",\n        name: \"#waitForLoad$\",\n        static: false,\n        private: true,\n        access: {\n          has: obj => #waitForLoad$ in obj,\n          get: obj => obj.#waitForLoad$\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, _private_waitForNetworkIdle$_descriptor = {\n        value: __setFunctionName(function (options = {}) {\n          let {\n            waitUntil = 'load'\n          } = options;\n          if (!Array.isArray(waitUntil)) {\n            waitUntil = [waitUntil];\n          }\n          let concurrency = Infinity;\n          for (const event of waitUntil) {\n            switch (event) {\n              case 'networkidle0':\n                {\n                  concurrency = Math.min(0, concurrency);\n                  break;\n                }\n              case 'networkidle2':\n                {\n                  concurrency = Math.min(2, concurrency);\n                  break;\n                }\n            }\n          }\n          if (concurrency === Infinity) {\n            return (0, rxjs_js_1.of)(undefined);\n          }\n          return this.page().waitForNetworkIdle$({\n            idleTime: 500,\n            timeout: options.timeout ?? this.timeoutSettings.timeout(),\n            concurrency\n          });\n        }, \"#waitForNetworkIdle$\")\n      }, _private_waitForNetworkIdle$_decorators, {\n        kind: \"method\",\n        name: \"#waitForNetworkIdle$\",\n        static: false,\n        private: true,\n        access: {\n          has: obj => #waitForNetworkIdle$ in obj,\n          get: obj => obj.#waitForNetworkIdle$\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _setFiles_decorators, {\n        kind: \"method\",\n        name: \"setFiles\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"setFiles\" in obj,\n          get: obj => obj.setFiles\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      if (_metadata) Object.defineProperty(this, Symbol.metadata, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: _metadata\n      });\n    }\n    static from(parent, browsingContext) {\n      const frame = new BidiFrame(parent, browsingContext);\n      frame.#initialize();\n      return frame;\n    }\n    #parent = (__runInitializers(this, _instanceExtraInitializers), void 0);\n    browsingContext;\n    #frames = new WeakMap();\n    realms;\n    _id;\n    client;\n    constructor(parent, browsingContext) {\n      super();\n      this.#parent = parent;\n      this.browsingContext = browsingContext;\n      this._id = browsingContext.id;\n      this.client = new CDPSession_js_1.BidiCdpSession(this);\n      this.realms = {\n        default: Realm_js_1.BidiFrameRealm.from(this.browsingContext.defaultRealm, this),\n        internal: Realm_js_1.BidiFrameRealm.from(this.browsingContext.createWindowRealm(`__puppeteer_internal_${Math.ceil(Math.random() * 10000)}`), this)\n      };\n    }\n    #initialize() {\n      for (const browsingContext of this.browsingContext.children) {\n        this.#createFrameTarget(browsingContext);\n      }\n      this.browsingContext.on('browsingcontext', ({\n        browsingContext\n      }) => {\n        this.#createFrameTarget(browsingContext);\n      });\n      this.browsingContext.on('closed', () => {\n        for (const session of CDPSession_js_1.BidiCdpSession.sessions.values()) {\n          if (session.frame === this) {\n            void session.detach().catch(util_js_1.debugError);\n          }\n        }\n        this.page().trustedEmitter.emit(\"framedetached\" /* PageEvent.FrameDetached */, this);\n      });\n      this.browsingContext.on('request', ({\n        request\n      }) => {\n        const httpRequest = HTTPRequest_js_1.BidiHTTPRequest.from(request, this);\n        request.once('success', () => {\n          // SAFETY: BidiHTTPRequest will create this before here.\n          this.page().trustedEmitter.emit(\"requestfinished\" /* PageEvent.RequestFinished */, httpRequest);\n        });\n        request.once('error', () => {\n          this.page().trustedEmitter.emit(\"requestfailed\" /* PageEvent.RequestFailed */, httpRequest);\n        });\n      });\n      this.browsingContext.on('navigation', ({\n        navigation\n      }) => {\n        navigation.once('fragment', () => {\n          this.page().trustedEmitter.emit(\"framenavigated\" /* PageEvent.FrameNavigated */, this);\n        });\n      });\n      this.browsingContext.on('load', () => {\n        this.page().trustedEmitter.emit(\"load\" /* PageEvent.Load */, undefined);\n      });\n      this.browsingContext.on('DOMContentLoaded', () => {\n        this._hasStartedLoading = true;\n        this.page().trustedEmitter.emit(\"domcontentloaded\" /* PageEvent.DOMContentLoaded */, undefined);\n        this.page().trustedEmitter.emit(\"framenavigated\" /* PageEvent.FrameNavigated */, this);\n      });\n      this.browsingContext.on('userprompt', ({\n        userPrompt\n      }) => {\n        this.page().trustedEmitter.emit(\"dialog\" /* PageEvent.Dialog */, Dialog_js_1.BidiDialog.from(userPrompt));\n      });\n      this.browsingContext.on('log', ({\n        entry\n      }) => {\n        if (this._id !== entry.source.context) {\n          return;\n        }\n        if (isConsoleLogEntry(entry)) {\n          const args = entry.args.map(arg => {\n            return this.mainRealm().createHandle(arg);\n          });\n          const text = args.reduce((value, arg) => {\n            const parsedValue = arg instanceof JSHandle_js_1.BidiJSHandle && arg.isPrimitiveValue ? Deserializer_js_1.BidiDeserializer.deserialize(arg.remoteValue()) : arg.toString();\n            return `${value} ${parsedValue}`;\n          }, '').slice(1);\n          this.page().trustedEmitter.emit(\"console\" /* PageEvent.Console */, new ConsoleMessage_js_1.ConsoleMessage(entry.method, text, args, getStackTraceLocations(entry.stackTrace)));\n        } else if (isJavaScriptLogEntry(entry)) {\n          const error = new Error(entry.text ?? '');\n          const messageHeight = error.message.split('\\n').length;\n          const messageLines = error.stack.split('\\n').splice(0, messageHeight);\n          const stackLines = [];\n          if (entry.stackTrace) {\n            for (const frame of entry.stackTrace.callFrames) {\n              // Note we need to add `1` because the values are 0-indexed.\n              stackLines.push(`    at ${frame.functionName || '<anonymous>'} (${frame.url}:${frame.lineNumber + 1}:${frame.columnNumber + 1})`);\n              if (stackLines.length >= Error.stackTraceLimit) {\n                break;\n              }\n            }\n          }\n          error.stack = [...messageLines, ...stackLines].join('\\n');\n          this.page().trustedEmitter.emit(\"pageerror\" /* PageEvent.PageError */, error);\n        } else {\n          (0, util_js_1.debugError)(`Unhandled LogEntry with type \"${entry.type}\", text \"${entry.text}\" and level \"${entry.level}\"`);\n        }\n      });\n      this.browsingContext.on('worker', ({\n        realm\n      }) => {\n        const worker = WebWorker_js_1.BidiWebWorker.from(this, realm);\n        realm.on('destroyed', () => {\n          this.page().trustedEmitter.emit(\"workerdestroyed\" /* PageEvent.WorkerDestroyed */, worker);\n        });\n        this.page().trustedEmitter.emit(\"workercreated\" /* PageEvent.WorkerCreated */, worker);\n      });\n    }\n    #createFrameTarget(browsingContext) {\n      const frame = BidiFrame.from(this, browsingContext);\n      this.#frames.set(browsingContext, frame);\n      this.page().trustedEmitter.emit(\"frameattached\" /* PageEvent.FrameAttached */, frame);\n      browsingContext.on('closed', () => {\n        this.#frames.delete(browsingContext);\n      });\n      return frame;\n    }\n    get timeoutSettings() {\n      return this.page()._timeoutSettings;\n    }\n    mainRealm() {\n      return this.realms.default;\n    }\n    isolatedRealm() {\n      return this.realms.internal;\n    }\n    realm(id) {\n      for (const realm of Object.values(this.realms)) {\n        if (realm.realm.id === id) {\n          return realm;\n        }\n      }\n      return;\n    }\n    page() {\n      let parent = this.#parent;\n      while (parent instanceof BidiFrame) {\n        parent = parent.#parent;\n      }\n      return parent;\n    }\n    isOOPFrame() {\n      throw new Errors_js_1.UnsupportedOperation();\n    }\n    url() {\n      return this.browsingContext.url;\n    }\n    parentFrame() {\n      if (this.#parent instanceof BidiFrame) {\n        return this.#parent;\n      }\n      return null;\n    }\n    childFrames() {\n      return [...this.browsingContext.children].map(child => {\n        return this.#frames.get(child);\n      });\n    }\n    #detached$() {\n      return (0, rxjs_js_1.defer)(() => {\n        if (this.detached) {\n          return (0, rxjs_js_1.of)(this);\n        }\n        return (0, util_js_1.fromEmitterEvent)(this.page().trustedEmitter, \"framedetached\" /* PageEvent.FrameDetached */).pipe((0, rxjs_js_1.filter)(detachedFrame => {\n          return detachedFrame === this;\n        }));\n      });\n    }\n    async goto(url, options = {}) {\n      const [response] = await Promise.all([this.waitForNavigation(options),\n      // Some implementations currently only report errors when the\n      // readiness=interactive.\n      //\n      // Related: https://bugzilla.mozilla.org/show_bug.cgi?id=1846601\n      this.browsingContext.navigate(url, \"interactive\" /* Bidi.BrowsingContext.ReadinessState.Interactive */)]).catch((0, util_js_2.rewriteNavigationError)(url, options.timeout ?? this.timeoutSettings.navigationTimeout()));\n      return response;\n    }\n    async setContent(html, options = {}) {\n      await Promise.all([this.setFrameContent(html), (0, rxjs_js_1.firstValueFrom)((0, rxjs_js_1.combineLatest)([this.#waitForLoad$(options), this.#waitForNetworkIdle$(options)]))]);\n    }\n    async waitForNavigation(options = {}) {\n      const {\n        timeout: ms = this.timeoutSettings.navigationTimeout()\n      } = options;\n      const frames = this.childFrames().map(frame => {\n        return frame.#detached$();\n      });\n      return await (0, rxjs_js_1.firstValueFrom)((0, rxjs_js_1.combineLatest)([(0, util_js_1.fromEmitterEvent)(this.browsingContext, 'navigation').pipe((0, rxjs_js_1.switchMap)(({\n        navigation\n      }) => {\n        return this.#waitForLoad$(options).pipe((0, rxjs_js_1.delayWhen)(() => {\n          if (frames.length === 0) {\n            return (0, rxjs_js_1.of)(undefined);\n          }\n          return (0, rxjs_js_1.combineLatest)(frames);\n        }), (0, rxjs_js_1.raceWith)((0, util_js_1.fromEmitterEvent)(navigation, 'fragment'), (0, util_js_1.fromEmitterEvent)(navigation, 'failed').pipe((0, rxjs_js_1.map)(({\n          url\n        }) => {\n          throw new Error(`Navigation failed: ${url}`);\n        })), (0, util_js_1.fromEmitterEvent)(navigation, 'aborted').pipe((0, rxjs_js_1.map)(({\n          url\n        }) => {\n          throw new Error(`Navigation aborted: ${url}`);\n        }))), (0, rxjs_js_1.switchMap)(() => {\n          if (navigation.request) {\n            function requestFinished$(request) {\n              // Reduces flakiness if the response events arrive after\n              // the load event.\n              // Usually, the response or error is already there at this point.\n              if (request.response || request.error) {\n                return (0, rxjs_js_1.of)(navigation);\n              }\n              if (request.redirect) {\n                return requestFinished$(request.redirect);\n              }\n              return (0, util_js_1.fromEmitterEvent)(request, 'success').pipe((0, rxjs_js_1.raceWith)((0, util_js_1.fromEmitterEvent)(request, 'error')), (0, rxjs_js_1.raceWith)((0, util_js_1.fromEmitterEvent)(request, 'redirect'))).pipe((0, rxjs_js_1.switchMap)(() => {\n                return requestFinished$(request);\n              }));\n            }\n            return requestFinished$(navigation.request);\n          }\n          return (0, rxjs_js_1.of)(navigation);\n        }));\n      })), this.#waitForNetworkIdle$(options)]).pipe((0, rxjs_js_1.map)(([navigation]) => {\n        const request = navigation.request;\n        if (!request) {\n          return null;\n        }\n        const httpRequest = HTTPRequest_js_1.requests.get(request);\n        const lastRedirect = httpRequest.redirectChain().at(-1);\n        return (lastRedirect !== undefined ? lastRedirect : httpRequest).response();\n      }), (0, rxjs_js_1.raceWith)((0, util_js_1.timeout)(ms), this.#detached$().pipe((0, rxjs_js_1.map)(() => {\n        throw new Errors_js_1.TargetCloseError('Frame detached.');\n      })))));\n    }\n    waitForDevicePrompt() {\n      throw new Errors_js_1.UnsupportedOperation();\n    }\n    get detached() {\n      return this.browsingContext.closed;\n    }\n    #exposedFunctions = new Map();\n    async exposeFunction(name, apply) {\n      if (this.#exposedFunctions.has(name)) {\n        throw new Error(`Failed to add page binding with name ${name}: globalThis['${name}'] already exists!`);\n      }\n      const exposeable = await ExposedFunction_js_1.ExposeableFunction.from(this, name, apply);\n      this.#exposedFunctions.set(name, exposeable);\n    }\n    async removeExposedFunction(name) {\n      const exposedFunction = this.#exposedFunctions.get(name);\n      if (!exposedFunction) {\n        throw new Error(`Failed to remove page binding with name ${name}: window['${name}'] does not exists!`);\n      }\n      this.#exposedFunctions.delete(name);\n      await exposedFunction[Symbol.asyncDispose]();\n    }\n    waitForSelector(selector, options) {\n      if (selector.startsWith('aria') && !this.page().browser().cdpSupported) {\n        throw new Errors_js_1.UnsupportedOperation('ARIA selector is not supported for BiDi!');\n      }\n      return super.waitForSelector(selector, options);\n    }\n    async createCDPSession() {\n      const {\n        sessionId\n      } = await this.client.send('Target.attachToTarget', {\n        targetId: this._id,\n        flatten: true\n      });\n      return new CDPSession_js_1.BidiCdpSession(this, sessionId);\n    }\n    get #waitForLoad$() {\n      return _private_waitForLoad$_descriptor.value;\n    }\n    get #waitForNetworkIdle$() {\n      return _private_waitForNetworkIdle$_descriptor.value;\n    }\n    async setFiles(element, files) {\n      await this.browsingContext.setFiles(\n      // SAFETY: ElementHandles are always remote references.\n      element.remoteValue(), files);\n    }\n  };\n})();\nexports.BidiFrame = BidiFrame;\nfunction isConsoleLogEntry(event) {\n  return event.type === 'console';\n}\nfunction isJavaScriptLogEntry(event) {\n  return event.type === 'javascript';\n}\nfunction getStackTraceLocations(stackTrace) {\n  const stackTraceLocations = [];\n  if (stackTrace) {\n    for (const callFrame of stackTrace.callFrames) {\n      stackTraceLocations.push({\n        url: callFrame.url,\n        lineNumber: callFrame.lineNumber,\n        columnNumber: callFrame.columnNumber\n      });\n    }\n  }\n  return stackTraceLocations;\n}","map":{"version":3,"names":["rxjs_js_1","require","Frame_js_1","ConsoleMessage_js_1","Errors_js_1","util_js_1","CDPSession_js_1","Deserializer_js_1","Dialog_js_1","ExposedFunction_js_1","HTTPRequest_js_1","JSHandle_js_1","Realm_js_1","util_js_2","WebWorker_js_1","BidiFrame","Frame","_classSuper","throwIfDetached","__esDecorate","_goto_decorators","kind","name","static","private","access","has","obj","get","goto","metadata","_metadata","_instanceExtraInitializers","_setContent_decorators","setContent","_waitForNavigation_decorators","waitForNavigation","_private_waitForLoad$_descriptor","value","__setFunctionName","options","waitUntil","timeout","ms","timeoutSettings","navigationTimeout","Array","isArray","events","Set","lifecycleEvent","add","size","of","undefined","combineLatest","map","event","fromEmitterEvent","browsingContext","pipe","first","raceWith","detached$","Error","_private_waitForLoad$_decorators","waitForLoad$","_private_waitForNetworkIdle$_descriptor","concurrency","Infinity","Math","min","page","waitForNetworkIdle$","idleTime","_private_waitForNetworkIdle$_decorators","_setFiles_decorators","setFiles","from","parent","frame","initialize","__runInitializers","frames","WeakMap","realms","_id","client","constructor","id","BidiCdpSession","default","BidiFrameRealm","defaultRealm","internal","createWindowRealm","ceil","random","#initialize","children","createFrameTarget","on","session","sessions","values","detach","catch","debugError","trustedEmitter","emit","request","httpRequest","BidiHTTPRequest","once","navigation","_hasStartedLoading","userPrompt","BidiDialog","entry","source","context","isConsoleLogEntry","args","arg","mainRealm","createHandle","text","reduce","parsedValue","BidiJSHandle","isPrimitiveValue","BidiDeserializer","deserialize","remoteValue","toString","slice","ConsoleMessage","method","getStackTraceLocations","stackTrace","isJavaScriptLogEntry","error","messageHeight","message","split","length","messageLines","stack","splice","stackLines","callFrames","push","functionName","url","lineNumber","columnNumber","stackTraceLimit","join","type","level","realm","worker","BidiWebWorker","#createFrameTarget","set","delete","_timeoutSettings","isolatedRealm","Object","isOOPFrame","UnsupportedOperation","parentFrame","childFrames","child","#detached$","defer","detached","filter","detachedFrame","response","Promise","all","navigate","rewriteNavigationError","html","setFrameContent","firstValueFrom","switchMap","delayWhen","requestFinished$","redirect","requests","lastRedirect","redirectChain","at","TargetCloseError","waitForDevicePrompt","closed","exposedFunctions","Map","exposeFunction","apply","exposeable","ExposeableFunction","removeExposedFunction","exposedFunction","Symbol","asyncDispose","waitForSelector","selector","startsWith","browser","cdpSupported","createCDPSession","sessionId","send","targetId","flatten","#waitForLoad$","#waitForNetworkIdle$","element","files","exports","stackTraceLocations","callFrame"],"sources":["C:\\Users\\PC\\tryg\\front\\node_modules\\puppeteer-core\\src\\bidi\\Frame.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as Bidi from 'chromium-bidi/lib/cjs/protocol/protocol.js';\n\nimport type {Observable} from '../../third_party/rxjs/rxjs.js';\nimport {\n  combineLatest,\n  defer,\n  delayWhen,\n  filter,\n  first,\n  firstValueFrom,\n  map,\n  of,\n  raceWith,\n  switchMap,\n} from '../../third_party/rxjs/rxjs.js';\nimport type {CDPSession} from '../api/CDPSession.js';\nimport type {ElementHandle} from '../api/ElementHandle.js';\nimport {\n  Frame,\n  throwIfDetached,\n  type GoToOptions,\n  type WaitForOptions,\n} from '../api/Frame.js';\nimport type {WaitForSelectorOptions} from '../api/Page.js';\nimport {PageEvent} from '../api/Page.js';\nimport {\n  ConsoleMessage,\n  type ConsoleMessageLocation,\n} from '../common/ConsoleMessage.js';\nimport {TargetCloseError, UnsupportedOperation} from '../common/Errors.js';\nimport type {TimeoutSettings} from '../common/TimeoutSettings.js';\nimport type {Awaitable, NodeFor} from '../common/types.js';\nimport {debugError, fromEmitterEvent, timeout} from '../common/util.js';\n\nimport {BidiCdpSession} from './CDPSession.js';\nimport type {BrowsingContext} from './core/BrowsingContext.js';\nimport type {Navigation} from './core/Navigation.js';\nimport type {Request} from './core/Request.js';\nimport {BidiDeserializer} from './Deserializer.js';\nimport {BidiDialog} from './Dialog.js';\nimport type {BidiElementHandle} from './ElementHandle.js';\nimport {ExposeableFunction} from './ExposedFunction.js';\nimport {BidiHTTPRequest, requests} from './HTTPRequest.js';\nimport type {BidiHTTPResponse} from './HTTPResponse.js';\nimport {BidiJSHandle} from './JSHandle.js';\nimport type {BidiPage} from './Page.js';\nimport type {BidiRealm} from './Realm.js';\nimport {BidiFrameRealm} from './Realm.js';\nimport {rewriteNavigationError} from './util.js';\nimport {BidiWebWorker} from './WebWorker.js';\n\nexport class BidiFrame extends Frame {\n  static from(\n    parent: BidiPage | BidiFrame,\n    browsingContext: BrowsingContext\n  ): BidiFrame {\n    const frame = new BidiFrame(parent, browsingContext);\n    frame.#initialize();\n    return frame;\n  }\n\n  readonly #parent: BidiPage | BidiFrame;\n  readonly browsingContext: BrowsingContext;\n  readonly #frames = new WeakMap<BrowsingContext, BidiFrame>();\n  readonly realms: {default: BidiFrameRealm; internal: BidiFrameRealm};\n\n  override readonly _id: string;\n  override readonly client: BidiCdpSession;\n\n  private constructor(\n    parent: BidiPage | BidiFrame,\n    browsingContext: BrowsingContext\n  ) {\n    super();\n    this.#parent = parent;\n    this.browsingContext = browsingContext;\n\n    this._id = browsingContext.id;\n    this.client = new BidiCdpSession(this);\n    this.realms = {\n      default: BidiFrameRealm.from(this.browsingContext.defaultRealm, this),\n      internal: BidiFrameRealm.from(\n        this.browsingContext.createWindowRealm(\n          `__puppeteer_internal_${Math.ceil(Math.random() * 10000)}`\n        ),\n        this\n      ),\n    };\n  }\n\n  #initialize(): void {\n    for (const browsingContext of this.browsingContext.children) {\n      this.#createFrameTarget(browsingContext);\n    }\n\n    this.browsingContext.on('browsingcontext', ({browsingContext}) => {\n      this.#createFrameTarget(browsingContext);\n    });\n    this.browsingContext.on('closed', () => {\n      for (const session of BidiCdpSession.sessions.values()) {\n        if (session.frame === this) {\n          void session.detach().catch(debugError);\n        }\n      }\n      this.page().trustedEmitter.emit(PageEvent.FrameDetached, this);\n    });\n\n    this.browsingContext.on('request', ({request}) => {\n      const httpRequest = BidiHTTPRequest.from(request, this);\n      request.once('success', () => {\n        // SAFETY: BidiHTTPRequest will create this before here.\n        this.page().trustedEmitter.emit(PageEvent.RequestFinished, httpRequest);\n      });\n\n      request.once('error', () => {\n        this.page().trustedEmitter.emit(PageEvent.RequestFailed, httpRequest);\n      });\n    });\n\n    this.browsingContext.on('navigation', ({navigation}) => {\n      navigation.once('fragment', () => {\n        this.page().trustedEmitter.emit(PageEvent.FrameNavigated, this);\n      });\n    });\n    this.browsingContext.on('load', () => {\n      this.page().trustedEmitter.emit(PageEvent.Load, undefined);\n    });\n    this.browsingContext.on('DOMContentLoaded', () => {\n      this._hasStartedLoading = true;\n      this.page().trustedEmitter.emit(PageEvent.DOMContentLoaded, undefined);\n      this.page().trustedEmitter.emit(PageEvent.FrameNavigated, this);\n    });\n\n    this.browsingContext.on('userprompt', ({userPrompt}) => {\n      this.page().trustedEmitter.emit(\n        PageEvent.Dialog,\n        BidiDialog.from(userPrompt)\n      );\n    });\n\n    this.browsingContext.on('log', ({entry}) => {\n      if (this._id !== entry.source.context) {\n        return;\n      }\n      if (isConsoleLogEntry(entry)) {\n        const args = entry.args.map(arg => {\n          return this.mainRealm().createHandle(arg);\n        });\n\n        const text = args\n          .reduce((value, arg) => {\n            const parsedValue =\n              arg instanceof BidiJSHandle && arg.isPrimitiveValue\n                ? BidiDeserializer.deserialize(arg.remoteValue())\n                : arg.toString();\n            return `${value} ${parsedValue}`;\n          }, '')\n          .slice(1);\n\n        this.page().trustedEmitter.emit(\n          PageEvent.Console,\n          new ConsoleMessage(\n            entry.method as any,\n            text,\n            args,\n            getStackTraceLocations(entry.stackTrace)\n          )\n        );\n      } else if (isJavaScriptLogEntry(entry)) {\n        const error = new Error(entry.text ?? '');\n\n        const messageHeight = error.message.split('\\n').length;\n        const messageLines = error.stack!.split('\\n').splice(0, messageHeight);\n\n        const stackLines = [];\n        if (entry.stackTrace) {\n          for (const frame of entry.stackTrace.callFrames) {\n            // Note we need to add `1` because the values are 0-indexed.\n            stackLines.push(\n              `    at ${frame.functionName || '<anonymous>'} (${frame.url}:${\n                frame.lineNumber + 1\n              }:${frame.columnNumber + 1})`\n            );\n            if (stackLines.length >= Error.stackTraceLimit) {\n              break;\n            }\n          }\n        }\n\n        error.stack = [...messageLines, ...stackLines].join('\\n');\n        this.page().trustedEmitter.emit(PageEvent.PageError, error);\n      } else {\n        debugError(\n          `Unhandled LogEntry with type \"${entry.type}\", text \"${entry.text}\" and level \"${entry.level}\"`\n        );\n      }\n    });\n\n    this.browsingContext.on('worker', ({realm}) => {\n      const worker = BidiWebWorker.from(this, realm);\n      realm.on('destroyed', () => {\n        this.page().trustedEmitter.emit(PageEvent.WorkerDestroyed, worker);\n      });\n      this.page().trustedEmitter.emit(PageEvent.WorkerCreated, worker);\n    });\n  }\n\n  #createFrameTarget(browsingContext: BrowsingContext) {\n    const frame = BidiFrame.from(this, browsingContext);\n    this.#frames.set(browsingContext, frame);\n    this.page().trustedEmitter.emit(PageEvent.FrameAttached, frame);\n\n    browsingContext.on('closed', () => {\n      this.#frames.delete(browsingContext);\n    });\n\n    return frame;\n  }\n\n  get timeoutSettings(): TimeoutSettings {\n    return this.page()._timeoutSettings;\n  }\n\n  override mainRealm(): BidiFrameRealm {\n    return this.realms.default;\n  }\n\n  override isolatedRealm(): BidiFrameRealm {\n    return this.realms.internal;\n  }\n\n  realm(id: string): BidiRealm | undefined {\n    for (const realm of Object.values(this.realms)) {\n      if (realm.realm.id === id) {\n        return realm;\n      }\n    }\n    return;\n  }\n\n  override page(): BidiPage {\n    let parent = this.#parent;\n    while (parent instanceof BidiFrame) {\n      parent = parent.#parent;\n    }\n    return parent;\n  }\n\n  override isOOPFrame(): never {\n    throw new UnsupportedOperation();\n  }\n\n  override url(): string {\n    return this.browsingContext.url;\n  }\n\n  override parentFrame(): BidiFrame | null {\n    if (this.#parent instanceof BidiFrame) {\n      return this.#parent;\n    }\n    return null;\n  }\n\n  override childFrames(): BidiFrame[] {\n    return [...this.browsingContext.children].map(child => {\n      return this.#frames.get(child)!;\n    });\n  }\n\n  #detached$() {\n    return defer(() => {\n      if (this.detached) {\n        return of(this as Frame);\n      }\n      return fromEmitterEvent(\n        this.page().trustedEmitter,\n        PageEvent.FrameDetached\n      ).pipe(\n        filter(detachedFrame => {\n          return detachedFrame === this;\n        })\n      );\n    });\n  }\n\n  @throwIfDetached\n  override async goto(\n    url: string,\n    options: GoToOptions = {}\n  ): Promise<BidiHTTPResponse | null> {\n    const [response] = await Promise.all([\n      this.waitForNavigation(options),\n      // Some implementations currently only report errors when the\n      // readiness=interactive.\n      //\n      // Related: https://bugzilla.mozilla.org/show_bug.cgi?id=1846601\n      this.browsingContext.navigate(\n        url,\n        Bidi.BrowsingContext.ReadinessState.Interactive\n      ),\n    ]).catch(\n      rewriteNavigationError(\n        url,\n        options.timeout ?? this.timeoutSettings.navigationTimeout()\n      )\n    );\n    return response;\n  }\n\n  @throwIfDetached\n  override async setContent(\n    html: string,\n    options: WaitForOptions = {}\n  ): Promise<void> {\n    await Promise.all([\n      this.setFrameContent(html),\n      firstValueFrom(\n        combineLatest([\n          this.#waitForLoad$(options),\n          this.#waitForNetworkIdle$(options),\n        ])\n      ),\n    ]);\n  }\n\n  @throwIfDetached\n  override async waitForNavigation(\n    options: WaitForOptions = {}\n  ): Promise<BidiHTTPResponse | null> {\n    const {timeout: ms = this.timeoutSettings.navigationTimeout()} = options;\n\n    const frames = this.childFrames().map(frame => {\n      return frame.#detached$();\n    });\n    return await firstValueFrom(\n      combineLatest([\n        fromEmitterEvent(this.browsingContext, 'navigation').pipe(\n          switchMap(({navigation}) => {\n            return this.#waitForLoad$(options).pipe(\n              delayWhen(() => {\n                if (frames.length === 0) {\n                  return of(undefined);\n                }\n                return combineLatest(frames);\n              }),\n              raceWith(\n                fromEmitterEvent(navigation, 'fragment'),\n                fromEmitterEvent(navigation, 'failed').pipe(\n                  map(({url}) => {\n                    throw new Error(`Navigation failed: ${url}`);\n                  })\n                ),\n                fromEmitterEvent(navigation, 'aborted').pipe(\n                  map(({url}) => {\n                    throw new Error(`Navigation aborted: ${url}`);\n                  })\n                )\n              ),\n              switchMap(() => {\n                if (navigation.request) {\n                  function requestFinished$(\n                    request: Request\n                  ): Observable<Navigation> {\n                    // Reduces flakiness if the response events arrive after\n                    // the load event.\n                    // Usually, the response or error is already there at this point.\n                    if (request.response || request.error) {\n                      return of(navigation);\n                    }\n                    if (request.redirect) {\n                      return requestFinished$(request.redirect);\n                    }\n                    return fromEmitterEvent(request, 'success')\n                      .pipe(\n                        raceWith(fromEmitterEvent(request, 'error')),\n                        raceWith(fromEmitterEvent(request, 'redirect'))\n                      )\n                      .pipe(\n                        switchMap(() => {\n                          return requestFinished$(request);\n                        })\n                      );\n                  }\n                  return requestFinished$(navigation.request);\n                }\n                return of(navigation);\n              })\n            );\n          })\n        ),\n        this.#waitForNetworkIdle$(options),\n      ]).pipe(\n        map(([navigation]) => {\n          const request = navigation.request;\n          if (!request) {\n            return null;\n          }\n          const httpRequest = requests.get(request)!;\n          const lastRedirect = httpRequest.redirectChain().at(-1);\n          return (\n            lastRedirect !== undefined ? lastRedirect : httpRequest\n          ).response();\n        }),\n        raceWith(\n          timeout(ms),\n          this.#detached$().pipe(\n            map(() => {\n              throw new TargetCloseError('Frame detached.');\n            })\n          )\n        )\n      )\n    );\n  }\n\n  override waitForDevicePrompt(): never {\n    throw new UnsupportedOperation();\n  }\n\n  override get detached(): boolean {\n    return this.browsingContext.closed;\n  }\n\n  #exposedFunctions = new Map<string, ExposeableFunction<never[], unknown>>();\n  async exposeFunction<Args extends unknown[], Ret>(\n    name: string,\n    apply: (...args: Args) => Awaitable<Ret>\n  ): Promise<void> {\n    if (this.#exposedFunctions.has(name)) {\n      throw new Error(\n        `Failed to add page binding with name ${name}: globalThis['${name}'] already exists!`\n      );\n    }\n    const exposeable = await ExposeableFunction.from(this, name, apply);\n    this.#exposedFunctions.set(name, exposeable);\n  }\n\n  async removeExposedFunction(name: string): Promise<void> {\n    const exposedFunction = this.#exposedFunctions.get(name);\n    if (!exposedFunction) {\n      throw new Error(\n        `Failed to remove page binding with name ${name}: window['${name}'] does not exists!`\n      );\n    }\n\n    this.#exposedFunctions.delete(name);\n    await exposedFunction[Symbol.asyncDispose]();\n  }\n\n  override waitForSelector<Selector extends string>(\n    selector: Selector,\n    options?: WaitForSelectorOptions\n  ): Promise<ElementHandle<NodeFor<Selector>> | null> {\n    if (selector.startsWith('aria') && !this.page().browser().cdpSupported) {\n      throw new UnsupportedOperation(\n        'ARIA selector is not supported for BiDi!'\n      );\n    }\n\n    return super.waitForSelector(selector, options);\n  }\n\n  async createCDPSession(): Promise<CDPSession> {\n    const {sessionId} = await this.client.send('Target.attachToTarget', {\n      targetId: this._id,\n      flatten: true,\n    });\n    return new BidiCdpSession(this, sessionId);\n  }\n\n  @throwIfDetached\n  #waitForLoad$(options: WaitForOptions = {}): Observable<void> {\n    let {waitUntil = 'load'} = options;\n    const {timeout: ms = this.timeoutSettings.navigationTimeout()} = options;\n\n    if (!Array.isArray(waitUntil)) {\n      waitUntil = [waitUntil];\n    }\n\n    const events = new Set<'load' | 'DOMContentLoaded'>();\n    for (const lifecycleEvent of waitUntil) {\n      switch (lifecycleEvent) {\n        case 'load': {\n          events.add('load');\n          break;\n        }\n        case 'domcontentloaded': {\n          events.add('DOMContentLoaded');\n          break;\n        }\n      }\n    }\n    if (events.size === 0) {\n      return of(undefined);\n    }\n\n    return combineLatest(\n      [...events].map(event => {\n        return fromEmitterEvent(this.browsingContext, event);\n      })\n    ).pipe(\n      map(() => {}),\n      first(),\n      raceWith(\n        timeout(ms),\n        this.#detached$().pipe(\n          map(() => {\n            throw new Error('Frame detached.');\n          })\n        )\n      )\n    );\n  }\n\n  @throwIfDetached\n  #waitForNetworkIdle$(options: WaitForOptions = {}): Observable<void> {\n    let {waitUntil = 'load'} = options;\n    if (!Array.isArray(waitUntil)) {\n      waitUntil = [waitUntil];\n    }\n\n    let concurrency = Infinity;\n    for (const event of waitUntil) {\n      switch (event) {\n        case 'networkidle0': {\n          concurrency = Math.min(0, concurrency);\n          break;\n        }\n        case 'networkidle2': {\n          concurrency = Math.min(2, concurrency);\n          break;\n        }\n      }\n    }\n    if (concurrency === Infinity) {\n      return of(undefined);\n    }\n\n    return this.page().waitForNetworkIdle$({\n      idleTime: 500,\n      timeout: options.timeout ?? this.timeoutSettings.timeout(),\n      concurrency,\n    });\n  }\n\n  @throwIfDetached\n  async setFiles(element: BidiElementHandle, files: string[]): Promise<void> {\n    await this.browsingContext.setFiles(\n      // SAFETY: ElementHandles are always remote references.\n      element.remoteValue() as Bidi.Script.SharedReference,\n      files\n    );\n  }\n}\n\nfunction isConsoleLogEntry(\n  event: Bidi.Log.Entry\n): event is Bidi.Log.ConsoleLogEntry {\n  return event.type === 'console';\n}\n\nfunction isJavaScriptLogEntry(\n  event: Bidi.Log.Entry\n): event is Bidi.Log.JavascriptLogEntry {\n  return event.type === 'javascript';\n}\n\nfunction getStackTraceLocations(\n  stackTrace?: Bidi.Script.StackTrace\n): ConsoleMessageLocation[] {\n  const stackTraceLocations: ConsoleMessageLocation[] = [];\n  if (stackTrace) {\n    for (const callFrame of stackTrace.callFrames) {\n      stackTraceLocations.push({\n        url: callFrame.url,\n        lineNumber: callFrame.lineNumber,\n        columnNumber: callFrame.columnNumber,\n      });\n    }\n  }\n  return stackTraceLocations;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}