{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BidiServer = void 0;\nconst EventEmitter_js_1 = require(\"../utils/EventEmitter.js\");\nconst log_js_1 = require(\"../utils/log.js\");\nconst ProcessingQueue_js_1 = require(\"../utils/ProcessingQueue.js\");\nconst CommandProcessor_js_1 = require(\"./CommandProcessor.js\");\nconst BrowsingContextStorage_js_1 = require(\"./domains/context/BrowsingContextStorage.js\");\nconst RealmStorage_js_1 = require(\"./domains/script/RealmStorage.js\");\nconst EventManager_js_1 = require(\"./domains/session/EventManager.js\");\nclass BidiServer extends EventEmitter_js_1.EventEmitter {\n  #messageQueue;\n  #transport;\n  #commandProcessor;\n  #eventManager;\n  #browsingContextStorage = new BrowsingContextStorage_js_1.BrowsingContextStorage();\n  #logger;\n  #handleIncomingMessage = message => {\n    void this.#commandProcessor.processCommand(message).catch(error => {\n      this.#logger?.(log_js_1.LogType.debugError, error);\n    });\n  };\n  #processOutgoingMessage = async messageEntry => {\n    const message = messageEntry.message;\n    if (messageEntry.channel !== null) {\n      message['channel'] = messageEntry.channel;\n    }\n    await this.#transport.sendMessage(message);\n  };\n  constructor(bidiTransport, cdpConnection, browserCdpClient, selfTargetId, defaultUserContextId, options, parser, logger) {\n    super();\n    this.#logger = logger;\n    this.#messageQueue = new ProcessingQueue_js_1.ProcessingQueue(this.#processOutgoingMessage, this.#logger);\n    this.#transport = bidiTransport;\n    this.#transport.setOnMessage(this.#handleIncomingMessage);\n    this.#eventManager = new EventManager_js_1.EventManager(this.#browsingContextStorage);\n    this.#commandProcessor = new CommandProcessor_js_1.CommandProcessor(cdpConnection, browserCdpClient, this.#eventManager, selfTargetId, defaultUserContextId, this.#browsingContextStorage, new RealmStorage_js_1.RealmStorage(), options?.acceptInsecureCerts ?? false, options?.sharedIdWithFrame ?? false, parser, this.#logger);\n    this.#eventManager.on(\"event\" /* EventManagerEvents.Event */, ({\n      message,\n      event\n    }) => {\n      this.emitOutgoingMessage(message, event);\n    });\n    this.#commandProcessor.on(\"response\" /* CommandProcessorEvents.Response */, ({\n      message,\n      event\n    }) => {\n      this.emitOutgoingMessage(message, event);\n    });\n  }\n  /**\n   * Creates and starts BiDi Mapper instance.\n   */\n  static async createAndStart(bidiTransport, cdpConnection, browserCdpClient, selfTargetId, options, parser, logger) {\n    // The default context is not exposed in Target.getBrowserContexts but can\n    // be observed via Target.getTargets. To determine the default browser\n    // context, we check which one is mentioned in Target.getTargets and not in\n    // Target.getBrowserContexts.\n    const [{\n      browserContextIds\n    }, {\n      targetInfos\n    }] = await Promise.all([browserCdpClient.sendCommand('Target.getBrowserContexts'), browserCdpClient.sendCommand('Target.getTargets')]);\n    let defaultUserContextId = 'default';\n    for (const info of targetInfos) {\n      if (info.browserContextId && !browserContextIds.includes(info.browserContextId)) {\n        defaultUserContextId = info.browserContextId;\n        break;\n      }\n    }\n    const server = new BidiServer(bidiTransport, cdpConnection, browserCdpClient, selfTargetId, defaultUserContextId, options, parser, logger);\n    // Needed to get events about new targets.\n    await browserCdpClient.sendCommand('Target.setDiscoverTargets', {\n      discover: true\n    });\n    // Needed to automatically attach to new targets.\n    await browserCdpClient.sendCommand('Target.setAutoAttach', {\n      autoAttach: true,\n      waitForDebuggerOnStart: true,\n      flatten: true\n    });\n    await server.#topLevelContextsLoaded();\n    return server;\n  }\n  /**\n   * Sends BiDi message.\n   */\n  emitOutgoingMessage(messageEntry, event) {\n    this.#messageQueue.add(messageEntry, event);\n  }\n  close() {\n    this.#transport.close();\n  }\n  async #topLevelContextsLoaded() {\n    await Promise.all(this.#browsingContextStorage.getTopLevelContexts().map(c => c.lifecycleLoaded()));\n  }\n}\nexports.BidiServer = BidiServer;","map":{"version":3,"names":["EventEmitter_js_1","require","log_js_1","ProcessingQueue_js_1","CommandProcessor_js_1","BrowsingContextStorage_js_1","RealmStorage_js_1","EventManager_js_1","BidiServer","EventEmitter","messageQueue","transport","commandProcessor","eventManager","browsingContextStorage","BrowsingContextStorage","logger","handleIncomingMessage","message","processCommand","catch","error","LogType","debugError","processOutgoingMessage","messageEntry","channel","sendMessage","constructor","bidiTransport","cdpConnection","browserCdpClient","selfTargetId","defaultUserContextId","options","parser","ProcessingQueue","setOnMessage","EventManager","CommandProcessor","RealmStorage","acceptInsecureCerts","sharedIdWithFrame","on","event","emitOutgoingMessage","createAndStart","browserContextIds","targetInfos","Promise","all","sendCommand","info","browserContextId","includes","server","discover","autoAttach","waitForDebuggerOnStart","flatten","topLevelContextsLoaded","add","close","#topLevelContextsLoaded","getTopLevelContexts","map","c","lifecycleLoaded","exports"],"sources":["../../../src/bidiMapper/BidiServer.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}